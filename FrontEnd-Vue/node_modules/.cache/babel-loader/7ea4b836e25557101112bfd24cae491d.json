{"remainingRequest":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/thread-loader/dist/cjs.js!/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/babel-loader/lib/index.js!/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/src/views/Login.vue","mtime":1546252765932},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { required, maxLength, minLength, sameAs } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nexport default {\n  name: \"Login\",\n  data: function data() {\n    return {\n      newUser: {\n        login_username: '1',\n        login_password: '2',\n        regist_username: '3',\n        regist_password: '4',\n        regist_confirmpassword: '5'\n      }\n    };\n  },\n  validations: {\n    newUser: {\n      username: {\n        required: required,\n        maxLength: maxLength(10)\n      },\n      password: {\n        required: required,\n        minLength: minLength(8)\n      },\n      confirmpassword: {\n        required: required,\n        sameAsPassword: sameAs('password')\n      }\n    }\n  },\n  computed: {\n    loginUserNameErrors: function loginUserNameErrors() {\n      var errors = [];\n      if (!this.$v.newUser.username.$dirty) return errors;\n      !this.$v.newUser.username.maxLength && errors.push('Name can not be more than 10 characters long');\n      !this.$v.newUser.username.required && errors.push('Name is required.');\n      return errors;\n    },\n    loginPasswordErrors: function loginPasswordErrors() {\n      var errors = [];\n      if (!this.$v.newUser.password.$dirty) return errors;\n      !this.$v.newUser.password.minLength && errors.push('Password must be at least 8 characters long');\n      !this.$v.newUser.password.required && errors.push('Password is required.');\n      return errors;\n    },\n    registUserNameErrors: function registUserNameErrors() {\n      var errors = [];\n      if (!this.$v.newUser.username.$dirty) return errors;\n      !this.$v.newUser.username.maxLength && errors.push('Name can not be more than 10 characters long');\n      !this.$v.newUser.username.required && errors.push('Name is required.');\n      return errors;\n    },\n    registPasswordErrors: function registPasswordErrors() {\n      var errors = [];\n      if (!this.$v.newUser.password.$dirty) return errors;\n      !this.$v.newUser.password.minLength && errors.push('Password must be at least 8 characters long');\n      !this.$v.newUser.password.required && errors.push('Password is required.');\n      return errors;\n    },\n    registConfirmPasswordErrors: function registConfirmPasswordErrors() {\n      var errors = [];\n      if (!this.$v.newUser.password.$dirty) return errors;\n      !this.$v.newUser.confirmpassword.sameAsPassword && errors.push('ConfirmPassword must be same as Password');\n      return errors;\n    }\n  },\n  methods: {\n    loginSubmit: function loginSubmit() {\n      console.log(this.newUser.username);\n      console.log(\"a\", axios);\n      this.$v.newUser.$touch();\n      axios({\n        /*url: \"/api/v1/bpi/currentprice.json\",\n        method: 'get',*/\n        method: 'post',\n        data: {\n          userName: this.newUser.login_username,\n          password: this.newUser.login_password\n        }\n      }).then(function (res) {\n        //console.log(res.data.bpi);\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    registSubmit: function registSubmit() {\n      this.$v.newUser.$touch();\n      axios({\n        method: 'post',\n        data: {\n          userName: this.newUser.regist_username,\n          password: this.newUser.regist_password\n        }\n      }).then(function (res) {\n        console.log(res);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    clear: function clear() {\n      this.$v.$reset();\n      this.newUser.username = '';\n      this.newUser.password = '';\n      this.newUser.confirmpassword = '';\n    }\n  }\n};",null]}