{"remainingRequest":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/babel-loader/lib/index.js!/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/src/assets/js/mdui.js","dependencies":[{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/src/assets/js/mdui.js","mtime":1540806190000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.string.bold\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.match\";\nimport _typeof from \"/Users/superman285/Desktop/\\u94B1\\u5305\\u9879\\u76EE\\u52A8\\u624B/WeWallet-MySelf/WalletVue/node_modules/@babel/runtime/helpers/esm/typeof\";\n\n/*!\n * mdui v0.4.2 (https://mdui.org)\n * Copyright 2016-2018 zdhxiong\n * Licensed under MIT\n */\n\n/* jshint ignore:start */\n;\n\n(function (global, factory) {\n  (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.mdui = factory();\n})(this, function () {\n  'use strict';\n  /* jshint ignore:end */\n\n  var mdui = {};\n  /**\n   * =============================================================================\n   * ************   浏览器兼容性问题修复   ************\n   * =============================================================================\n   */\n\n  /**\n   * requestAnimationFrame\n   * cancelAnimationFrame\n   */\n\n  (function () {\n    var lastTime = 0;\n\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = window.webkitRequestAnimationFrame;\n      window.cancelAnimationFrame = window.webkitCancelAnimationFrame;\n    }\n\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16.7 - (currTime - lastTime));\n        var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n    }\n  })();\n  /**\n   * JQ 1.0.0 (https://github.com/zdhxiong/mdui.JQ#readme)\n   * Copyright 2018-2018 zdhxiong\n   * Licensed under MIT\n   */\n\n\n  var $ = function () {\n    'use strict';\n\n    var JQ = function JQ(arr) {\n      var self = this;\n\n      for (var i = 0; i < arr.length; i += 1) {\n        self[i] = arr[i];\n      }\n\n      self.length = arr.length;\n      return this;\n    };\n\n    function $$1(selector) {\n      var arr = [];\n\n      if (!selector) {\n        return new JQ(arr);\n      }\n\n      if (selector instanceof JQ) {\n        return selector;\n      }\n\n      if (typeof selector === 'string') {\n        var html = selector.trim();\n\n        if (html[0] === '<' && html[html.length - 1] === '>') {\n          // 创建 HTML 字符串\n          var toCreate = 'div';\n\n          if (html.indexOf('<li') === 0) {\n            toCreate = 'ul';\n          }\n\n          if (html.indexOf('<tr') === 0) {\n            toCreate = 'tbody';\n          }\n\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\n            toCreate = 'tr';\n          }\n\n          if (html.indexOf('<tbody') === 0) {\n            toCreate = 'table';\n          }\n\n          if (html.indexOf('<option') === 0) {\n            toCreate = 'select';\n          }\n\n          var tempParent = document.createElement(toCreate);\n          tempParent.innerHTML = html;\n\n          for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          // 选择器\n          var elems = selector[0] === '#' && !selector.match(/[ .<>:~]/) ? [document.getElementById(selector.slice(1))] : document.querySelectorAll(selector);\n\n          for (var i$1 = 0; i$1 < elems.length; i$1 += 1) {\n            if (elems[i$1]) {\n              arr.push(elems[i$1]);\n            }\n          }\n        }\n      } else if (typeof selector === 'function') {\n        // function\n        return $$1(document).ready(selector);\n      } else if (selector.nodeType || selector === window || selector === document) {\n        // Node\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // NodeList\n        for (var i$2 = 0; i$2 < selector.length; i$2 += 1) {\n          arr.push(selector[i$2]);\n        }\n      }\n\n      return new JQ(arr);\n    }\n\n    $$1.fn = JQ.prototype;\n\n    function extend() {\n      var this$1 = this;\n      var args = [],\n          len = arguments.length;\n\n      while (len--) {\n        args[len] = arguments[len];\n      }\n\n      if (!args.length) {\n        return this;\n      } // $.extend(obj)\n\n\n      if (args.length === 1) {\n        Object.keys(args[0]).forEach(function (prop) {\n          this$1[prop] = args[0][prop];\n        });\n        return this;\n      } // $.extend({}, defaults[, obj])\n\n\n      var target = args.shift();\n\n      var loop = function loop(i) {\n        Object.keys(args[i]).forEach(function (prop) {\n          target[prop] = args[i][prop];\n        });\n      };\n\n      for (var i = 0; i < args.length; i += 1) {\n        loop(i);\n      }\n\n      return target;\n    }\n\n    $$1.fn.extend = extend;\n    $$1.extend = extend;\n    /**\n     * 判断一个节点名\n     * @param ele\n     * @param name\n     * @returns {boolean}\n     */\n\n    function isNodeName(ele, name) {\n      return ele.nodeName && ele.nodeName.toLowerCase() === name.toLowerCase();\n    }\n    /**\n     * 除去 null 后的 object 类型\n     * @param obj\n     * @returns {*|boolean}\n     */\n\n\n    function isObjectLike(obj) {\n      return _typeof(obj) === 'object' && obj !== null;\n    }\n\n    function isFunction(fn) {\n      return typeof fn === 'function';\n    }\n\n    function isString(obj) {\n      return typeof obj === 'string';\n    }\n\n    function isWindow(win) {\n      return win && win === win.window;\n    }\n\n    function isDocument(doc) {\n      return doc && doc.nodeType === doc.DOCUMENT_NODE;\n    }\n\n    function isArrayLike(obj) {\n      return typeof obj.length === 'number';\n    }\n    /**\n     * 循环数组或对象\n     * @param obj\n     * @param callback\n     * @returns {*}\n     */\n\n\n    function each(obj, callback) {\n      if (isArrayLike(obj)) {\n        for (var i = 0; i < obj.length; i += 1) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            return obj;\n          }\n        }\n      } else {\n        var keys = Object.keys(obj);\n\n        for (var i$1 = 0; i$1 < keys.length; i$1 += 1) {\n          if (callback.call(obj[keys[i$1]], keys[i$1], obj[keys[i$1]]) === false) {\n            return obj;\n          }\n        }\n      }\n\n      return obj;\n    }\n    /**\n     * 遍历数组或对象，通过函数返回一个新的数组或对象，null 和 undefined 将被过滤掉。\n     * @param elems\n     * @param callback\n     * @returns {Array}\n     */\n\n\n    function map(elems, callback) {\n      var ref;\n      var value;\n      var ret = [];\n      each(elems, function (i, elem) {\n        value = callback(elem, i);\n\n        if (value !== null && value !== undefined) {\n          ret.push(value);\n        }\n      });\n      return (ref = []).concat.apply(ref, ret);\n    }\n    /**\n     * 把对象合并到第一个参数中，并返回第一个参数\n     * @param first\n     * @param second\n     * @returns {*}\n     */\n\n\n    function merge(first, second) {\n      each(second, function (i, val) {\n        first.push(val);\n      });\n      return first;\n    }\n    /**\n     * 删除数组中重复元素\n     * @param arr {Array}\n     * @returns {Array}\n     */\n\n\n    function unique(arr) {\n      var result = [];\n\n      for (var i = 0; i < arr.length; i += 1) {\n        if (result.indexOf(arr[i]) === -1) {\n          result.push(arr[i]);\n        }\n      }\n\n      return result;\n    }\n\n    var elementDisplay = {};\n    /**\n     * 获取元素的默认 display 样式值，用于 .show() 方法\n     * @param nodeName\n     * @returns {*}\n     */\n\n    function defaultDisplay(nodeName) {\n      var element;\n      var display;\n\n      if (!elementDisplay[nodeName]) {\n        element = document.createElement(nodeName);\n        document.body.appendChild(element);\n        display = getComputedStyle(element, '').getPropertyValue('display');\n        element.parentNode.removeChild(element);\n\n        if (display === 'none') {\n          display = 'block';\n        }\n\n        elementDisplay[nodeName] = display;\n      }\n\n      return elementDisplay[nodeName];\n    }\n\n    $$1.extend({\n      each: each,\n      merge: merge,\n      unique: unique,\n      map: map,\n\n      /**\n       * 一个 DOM 节点是否包含另一个 DOM 节点\n       * @param parent {Node} 父节点\n       * @param node {Node} 子节点\n       * @returns {Boolean}\n       */\n      contains: function contains(parent, node) {\n        if (parent && !node) {\n          return document.documentElement.contains(parent);\n        }\n\n        return parent !== node && parent.contains(node);\n      },\n\n      /**\n       * 将数组或对象序列化\n       * @param obj\n       * @returns {String}\n       */\n      param: function param(obj) {\n        if (!isObjectLike(obj)) {\n          return '';\n        }\n\n        var args = [];\n\n        function destructure(key, value) {\n          var keyTmp;\n\n          if (isObjectLike(value)) {\n            each(value, function (i, v) {\n              if (Array.isArray(value) && !isObjectLike(v)) {\n                keyTmp = '';\n              } else {\n                keyTmp = i;\n              }\n\n              destructure(key + \"[\" + keyTmp + \"]\", v);\n            });\n          } else {\n            if (value !== null && value !== '') {\n              keyTmp = \"=\" + encodeURIComponent(value);\n            } else {\n              keyTmp = '';\n            }\n\n            args.push(encodeURIComponent(key) + keyTmp);\n          }\n        }\n\n        each(obj, function (key, value) {\n          destructure(key, value);\n        });\n        return args.join('&');\n      }\n    });\n    $$1.fn.extend({\n      /**\n       * 遍历对象\n       * @param callback {Function}\n       * @return {JQ}\n       */\n      each: function each$1(callback) {\n        return each(this, callback);\n      },\n\n      /**\n       * 通过遍历集合中的节点对象，通过函数返回一个新的对象，null 或 undefined 将被过滤掉。\n       * @param callback {Function}\n       * @returns {JQ}\n       */\n      map: function map$1(callback) {\n        return new JQ(map(this, function (el, i) {\n          return callback.call(el, i, el);\n        }));\n      },\n\n      /**\n       * 获取指定 DOM 元素，没有 index 参数时，获取所有 DOM 的数组\n       * @param index {Number=}\n       * @returns {Node|Array}\n       */\n      get: function get(index) {\n        return index === undefined ? [].slice.call(this) : this[index >= 0 ? index : index + this.length];\n      },\n\n      /**\n       * array中提取的方法。从start开始，如果end 指出。提取不包含end位置的元素。\n       * @param args {start, end}\n       * @returns {JQ}\n       */\n      slice: function slice() {\n        var args = [],\n            len = arguments.length;\n\n        while (len--) {\n          args[len] = arguments[len];\n        }\n\n        return new JQ([].slice.apply(this, args));\n      },\n\n      /**\n       * 筛选元素集合\n       * @param selector {String|JQ|Node|Function}\n       * @returns {JQ}\n       */\n      filter: function filter(selector) {\n        if (isFunction(selector)) {\n          return this.map(function (index, ele) {\n            return selector.call(ele, index, ele) ? ele : undefined;\n          });\n        }\n\n        var $selector = $$1(selector);\n        return this.map(function (index, ele) {\n          return $selector.index(ele) > -1 ? ele : undefined;\n        });\n      },\n\n      /**\n       * 从元素集合中删除指定的元素\n       * @param selector {String|Node|JQ|Function}\n       * @return {JQ}\n       */\n      not: function not(selector) {\n        var $excludes = this.filter(selector);\n        return this.map(function (index, ele) {\n          return $excludes.index(ele) > -1 ? undefined : ele;\n        });\n      },\n\n      /**\n       * 获取元素相对于 document 的偏移\n       * @returns {Object}\n       */\n      offset: function offset() {\n        if (this[0]) {\n          var offset = this[0].getBoundingClientRect();\n          return {\n            left: offset.left + window.pageXOffset,\n            top: offset.top + window.pageYOffset,\n            width: offset.width,\n            height: offset.height\n          };\n        }\n\n        return null;\n      },\n\n      /**\n       * 返回最近的用于定位的父元素\n       * @returns {*|JQ}\n       */\n      offsetParent: function offsetParent() {\n        return this.map(function () {\n          var parent = this.offsetParent;\n\n          while (parent && $$1(parent).css('position') === 'static') {\n            parent = parent.offsetParent;\n          }\n\n          return parent || document.documentElement;\n        });\n      },\n\n      /**\n       * 获取元素相对于父元素的偏移\n       * @return {Object}\n       */\n      position: function position() {\n        var self = this;\n\n        if (!self[0]) {\n          return null;\n        }\n\n        var offsetParent;\n        var offset;\n        var parentOffset = {\n          top: 0,\n          left: 0\n        };\n\n        if (self.css('position') === 'fixed') {\n          offset = self[0].getBoundingClientRect();\n        } else {\n          offsetParent = self.offsetParent();\n          offset = self.offset();\n\n          if (!isNodeName(offsetParent[0], 'html')) {\n            parentOffset = offsetParent.offset();\n          }\n\n          parentOffset = {\n            top: parentOffset.top + offsetParent.css('borderTopWidth'),\n            left: parentOffset.left + offsetParent.css('borderLeftWidth')\n          };\n        }\n\n        return {\n          top: offset.top - parentOffset.top - self.css('marginTop'),\n          left: offset.left - parentOffset.left - self.css('marginLeft'),\n          width: offset.width,\n          height: offset.height\n        };\n      },\n\n      /**\n       * 显示指定元素\n       * @returns {JQ}\n       */\n      show: function show() {\n        return this.each(function () {\n          if (this.style.display === 'none') {\n            this.style.display = '';\n          }\n\n          if (window.getComputedStyle(this, '').getPropertyValue('display') === 'none') {\n            this.style.display = defaultDisplay(this.nodeName);\n          }\n        });\n      },\n\n      /**\n       * 隐藏指定元素\n       * @returns {JQ}\n       */\n      hide: function hide() {\n        return this.each(function () {\n          this.style.display = 'none';\n        });\n      },\n\n      /**\n       * 切换元素的显示状态\n       * @returns {JQ}\n       */\n      toggle: function toggle() {\n        return this.each(function () {\n          this.style.display = this.style.display === 'none' ? '' : 'none';\n        });\n      },\n\n      /**\n       * 是否含有指定的 CSS 类\n       * @param className {String}\n       * @returns {boolean}\n       */\n      hasClass: function hasClass(className) {\n        if (!this[0] || !className) {\n          return false;\n        }\n\n        return this[0].classList.contains(className);\n      },\n\n      /**\n       * 移除指定属性\n       * @param attr {String}\n       * @returns {JQ}\n       */\n      removeAttr: function removeAttr(attr) {\n        return this.each(function () {\n          this.removeAttribute(attr);\n        });\n      },\n\n      /**\n       * 删除属性值\n       * @param name {String}\n       * @returns {JQ}\n       */\n      removeProp: function removeProp(name) {\n        return this.each(function () {\n          try {\n            delete this[name];\n          } catch (e) {// empty\n          }\n        });\n      },\n\n      /**\n       * 获取当前对象中第n个元素\n       * @param index {Number}\n       * @returns {JQ}\n       */\n      eq: function eq(index) {\n        var ret = index === -1 ? this.slice(index) : this.slice(index, +index + 1);\n        return new JQ(ret);\n      },\n\n      /**\n       * 获取对象中第一个元素\n       * @returns {JQ}\n       */\n      first: function first() {\n        return this.eq(0);\n      },\n\n      /**\n       * 获取对象中最后一个元素\n       * @returns {JQ}\n       */\n      last: function last() {\n        return this.eq(-1);\n      },\n\n      /**\n       * 获取一个元素的位置。\n       * 当 elem 参数没有给出时，返回当前元素在兄弟节点中的位置。\n       * 有给出了 elem 参数时，返回 elem 元素在当前对象中的位置\n       * @param elem {Selector|Node=}\n       * @returns {Number}\n       */\n      index: function index(elem) {\n        if (!elem) {\n          // 获取当前 JQ 对象的第一个元素在同辈元素中的位置\n          return this.eq(0).parent().children().get().indexOf(this[0]);\n        }\n\n        if (isString(elem)) {\n          // 返回当前 JQ 对象的第一个元素在指定选择器对应的元素中的位置\n          return $$1(elem).eq(0).parent().children().get().indexOf(this[0]);\n        } // 返回指定元素在当前 JQ 对象中的位置\n\n\n        return this.get().indexOf(elem);\n      },\n\n      /**\n       * 根据选择器、DOM元素或 JQ 对象来检测匹配元素集合，\n       * 如果其中至少有一个元素符合这个给定的表达式就返回true\n       * @param selector {String|Node|NodeList|Array|JQ|Window}\n       * @returns boolean\n       */\n      is: function is(selector) {\n        var self = this[0];\n\n        if (!self || selector === undefined || selector === null) {\n          return false;\n        }\n\n        if (isString(selector)) {\n          if (self === document || self === window) {\n            return false;\n          }\n\n          var matchesSelector = self.matches || self.matchesSelector || self.webkitMatchesSelector || self.mozMatchesSelector || self.oMatchesSelector || self.msMatchesSelector;\n          return matchesSelector.call(self, selector);\n        }\n\n        if (selector === document || selector === window) {\n          return self === selector;\n        }\n\n        if (selector.nodeType || isArrayLike(selector)) {\n          var $compareWith = selector.nodeType ? [selector] : selector;\n\n          for (var i = 0; i < $compareWith.length; i += 1) {\n            if ($compareWith[i] === self) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n        return false;\n      },\n\n      /**\n       * 根据 CSS 选择器找到后代节点的集合\n       * @param selector {String}\n       * @returns {JQ}\n       */\n      find: function find(selector) {\n        var foundElements = [];\n        this.each(function (i, _this) {\n          var nodeType = _this.nodeType;\n\n          if (nodeType !== 1 && nodeType !== 9) {\n            // 不是 element 和 document 则跳过\n            return;\n          }\n\n          merge(foundElements, _this.querySelectorAll(selector));\n        });\n        return new JQ(foundElements);\n      },\n\n      /**\n       * 找到直接子元素的元素集合\n       * @param selector {String=}\n       * @returns {JQ}\n       */\n      children: function children(selector) {\n        var children = [];\n        this.each(function (_, _this) {\n          each(_this.childNodes, function (__, childNode) {\n            if (childNode.nodeType !== 1) {\n              return;\n            }\n\n            if (!selector || selector && $$1(childNode).is(selector)) {\n              children.push(childNode);\n            }\n          });\n        });\n        return new JQ(unique(children));\n      },\n\n      /**\n       * 保留含有指定子元素的元素，去掉不含有指定子元素的元素\n       * @param selector {String|Node|JQ|NodeList|Array}\n       * @return {JQ}\n       */\n      has: function has(selector) {\n        var $targets = isString(selector) ? this.find(selector) : $$1(selector);\n        var length = $targets.length;\n        return this.filter(function () {\n          var this$1 = this;\n\n          for (var i = 0; i < length; i += 1) {\n            if ($$1.contains(this$1, $targets[i])) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n      },\n\n      /**\n       * 取得同辈元素的集合\n       * @param selector {String=}\n       * @returns {JQ}\n       */\n      siblings: function siblings(selector) {\n        return this.prevAll(selector).add(this.nextAll(selector));\n      },\n\n      /**\n       * 返回首先匹配到的父节点，包含父节点\n       * @param selector {String}\n       * @returns {JQ}\n       */\n      closest: function closest(selector) {\n        var self = this;\n\n        if (!self.is(selector)) {\n          self = self.parents(selector).eq(0);\n        }\n\n        return self;\n      },\n\n      /**\n       * 删除所有匹配的元素\n       * @returns {JQ}\n       */\n      remove: function remove() {\n        return this.each(function (i, _this) {\n          if (_this.parentNode) {\n            _this.parentNode.removeChild(_this);\n          }\n        });\n      },\n\n      /**\n       * 添加匹配的元素到当前对象中\n       * @param selector {String|JQ}\n       * @returns {JQ}\n       */\n      add: function add(selector) {\n        return new JQ(unique(merge(this.get(), $$1(selector))));\n      },\n\n      /**\n       * 删除子节点\n       * @returns {JQ}\n       */\n      empty: function empty() {\n        return this.each(function () {\n          this.innerHTML = '';\n        });\n      },\n\n      /**\n       * 通过深度克隆来复制集合中的所有元素。\n       * (通过原生 cloneNode 方法深度克隆来复制集合中的所有元素。此方法不会有数据和事件处理程序复制到新的元素。这点和jquery中利用一个参数来确定是否复制数据和事件处理不相同。)\n       * @returns {JQ}\n       */\n      clone: function clone() {\n        return this.map(function () {\n          return this.cloneNode(true);\n        });\n      },\n\n      /**\n       * 用新元素替换当前元素\n       * @param newContent {String|Node|NodeList|JQ}\n       * @returns {JQ}\n       */\n      replaceWith: function replaceWith(newContent) {\n        return this.before(newContent).remove();\n      },\n\n      /**\n       * 将表单元素的值组合成键值对数组\n       * @returns {Array}\n       */\n      serializeArray: function serializeArray() {\n        var result = [];\n        var elem = this[0];\n\n        if (!elem || !elem.elements) {\n          return result;\n        }\n\n        $$1([].slice.call(elem.elements)).each(function () {\n          var $elem = $$1(this);\n          var type = $elem.attr('type');\n\n          if (this.nodeName.toLowerCase() !== 'fieldset' && !this.disabled && ['submit', 'reset', 'button'].indexOf(type) === -1 && (['radio', 'checkbox'].indexOf(type) === -1 || this.checked)) {\n            result.push({\n              name: $elem.attr('name'),\n              value: $elem.val()\n            });\n          }\n        });\n        return result;\n      },\n\n      /**\n       * 将表单元素或对象序列化\n       * @returns {String}\n       */\n      serialize: function serialize() {\n        var result = [];\n        each(this.serializeArray(), function (i, elem) {\n          result.push(encodeURIComponent(elem.name) + \"=\" + encodeURIComponent(elem.value));\n        });\n        return result.join('&');\n      }\n    });\n    /**\n     * val - 获取或设置元素的值\n     * @param value {String=}\n     * @return {*|JQ}\n     */\n\n    /**\n     * html - 获取或设置元素的 HTML\n     * @param value {String=}\n     * @return {*|JQ}\n     */\n\n    /**\n     * text - 获取或设置元素的内容\n     * @param value {String=}\n     * @return {*|JQ}\n     */\n\n    each(['val', 'html', 'text'], function (nameIndex, name) {\n      var props = {\n        0: 'value',\n        1: 'innerHTML',\n        2: 'textContent'\n      };\n      var defaults = {\n        0: undefined,\n        1: undefined,\n        2: null\n      };\n\n      $$1.fn[name] = function (value) {\n        if (value === undefined) {\n          // 获取值\n          return this[0] ? this[0][props[nameIndex]] : defaults[nameIndex];\n        } // 设置值\n\n\n        return this.each(function (i, elem) {\n          elem[props[nameIndex]] = value;\n        });\n      };\n    });\n    /**\n     * attr - 获取或设置元素的属性值\n     * @param {name|props|key,value=}\n     * @return {String|JQ}\n     */\n\n    /**\n     * prop - 获取或设置元素的属性值\n     * @param {name|props|key,value=}\n     * @return {String|JQ}\n     */\n\n    /**\n     * css - 获取或设置元素的样式\n     * @param {name|props|key,value=}\n     * @return {String|JQ}\n     */\n\n    each(['attr', 'prop', 'css'], function (nameIndex, name) {\n      function set(elem, key, value) {\n        if (nameIndex === 0) {\n          elem.setAttribute(key, value);\n        } else if (nameIndex === 1) {\n          elem[key] = value;\n        } else {\n          elem.style[key] = value;\n        }\n      }\n\n      function get(elem, key) {\n        if (!elem) {\n          return undefined;\n        }\n\n        if (nameIndex === 0) {\n          return elem.getAttribute(key);\n        }\n\n        if (nameIndex === 1) {\n          return elem[key];\n        }\n\n        return window.getComputedStyle(elem, null).getPropertyValue(key);\n      }\n\n      $$1.fn[name] = function (key, value) {\n        var argLength = arguments.length;\n\n        if (argLength === 1 && isString(key)) {\n          // 获取值\n          return get(this[0], key);\n        } // 设置值\n\n\n        return this.each(function (i, elem) {\n          if (argLength === 2) {\n            set(elem, key, value);\n          } else {\n            each(key, function (k, v) {\n              set(elem, k, v);\n            });\n          }\n        });\n      };\n    });\n    /**\n     * addClass - 添加 CSS 类，多个类名用空格分割\n     * @param className {String}\n     * @return {JQ}\n     */\n\n    /**\n     * removeClass - 移除 CSS 类，多个类名用空格分割\n     * @param className {String}\n     * @return {JQ}\n     */\n\n    /**\n     * toggleClass - 切换 CSS 类名，多个类名用空格分割\n     * @param className {String}\n     * @return {JQ}\n     */\n\n    each(['add', 'remove', 'toggle'], function (nameIndex, name) {\n      $$1.fn[name + \"Class\"] = function (className) {\n        if (!className) {\n          return this;\n        }\n\n        var classes = className.split(' ');\n        return this.each(function (i, elem) {\n          each(classes, function (j, cls) {\n            elem.classList[name](cls);\n          });\n        });\n      };\n    });\n    /**\n     * width - 获取元素的宽度\n     * @return {Number}\n     */\n\n    /**\n     * height - 获取元素的高度\n     * @return {Number}\n     */\n\n    each({\n      Width: 'width',\n      Height: 'height'\n    }, function (prop, name) {\n      $$1.fn[name] = function (val) {\n        if (val === undefined) {\n          // 获取\n          var elem = this[0];\n\n          if (isWindow(elem)) {\n            return elem[\"inner\" + prop];\n          }\n\n          if (isDocument(elem)) {\n            return elem.documentElement[\"scroll\" + prop];\n          }\n\n          var $elem = $$1(elem); // IE10、IE11 在 box-sizing:border-box 时，不会包含 padding 和 border，这里进行修复\n\n          var IEFixValue = 0;\n          var isWidth = name === 'width';\n\n          if ('ActiveXObject' in window) {\n            // 判断是 IE 浏览器\n            if ($elem.css('box-sizing') === 'border-box') {\n              IEFixValue = parseFloat($elem.css(\"padding-\" + (isWidth ? 'left' : 'top'))) + parseFloat($elem.css(\"padding-\" + (isWidth ? 'right' : 'bottom'))) + parseFloat($elem.css(\"border-\" + (isWidth ? 'left' : 'top') + \"-width\")) + parseFloat($elem.css(\"border-\" + (isWidth ? 'right' : 'bottom') + \"-width\"));\n            }\n          }\n\n          return parseFloat($$1(elem).css(name)) + IEFixValue;\n        } // 设置\n\n        /* eslint no-restricted-globals: 0 */\n\n\n        if (!isNaN(Number(val)) && val !== '') {\n          val += 'px';\n        }\n\n        return this.css(name, val);\n      };\n    });\n    /**\n     * innerWidth - 获取元素的宽度，包含内边距\n     * @return {Number}\n     */\n\n    /**\n     * innerHeight - 获取元素的高度，包含内边距\n     * @return {Number}\n     */\n\n    each({\n      Width: 'width',\n      Height: 'height'\n    }, function (prop, name) {\n      $$1.fn[\"inner\" + prop] = function () {\n        var value = this[name]();\n        var $elem = $$1(this[0]);\n\n        if ($elem.css('box-sizing') !== 'border-box') {\n          value += parseFloat($elem.css(\"padding-\" + (name === 'width' ? 'left' : 'top')));\n          value += parseFloat($elem.css(\"padding-\" + (name === 'width' ? 'right' : 'bottom')));\n        }\n\n        return value;\n      };\n    });\n\n    function dir(nodes, selector, nameIndex, node) {\n      var ret = [];\n      var elem;\n      nodes.each(function (j, _this) {\n        elem = _this[node];\n\n        while (elem) {\n          if (nameIndex === 2) {\n            // prevUntil\n            if (!selector || selector && $$1(elem).is(selector)) {\n              break;\n            }\n\n            ret.push(elem);\n          } else if (nameIndex === 0) {\n            // prev\n            if (!selector || selector && $$1(elem).is(selector)) {\n              ret.push(elem);\n            }\n\n            break;\n          } else if (!selector || selector && $$1(elem).is(selector)) {\n            // prevAll\n            ret.push(elem);\n          }\n\n          elem = elem[node];\n        }\n      });\n      return new JQ(unique(ret));\n    }\n    /**\n     * prev - 取得前一个匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    /**\n     * prevAll - 取得前面所有匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    /**\n     * prevUntil - 取得前面的所有元素，直到遇到匹配的元素，不包含匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n\n    each(['', 'All', 'Until'], function (nameIndex, name) {\n      $$1.fn[\"prev\" + name] = function (selector) {\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n        var $nodes = nameIndex === 0 ? this : $$1(this.get().reverse());\n        return dir($nodes, selector, nameIndex, 'previousElementSibling');\n      };\n    });\n    /**\n     * next - 取得后一个匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    /**\n     * nextAll - 取得后面所有匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    /**\n     * nextUntil - 取得后面所有匹配的元素，直到遇到匹配的元素，不包含匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    each(['', 'All', 'Until'], function (nameIndex, name) {\n      $$1.fn[\"next\" + name] = function (selector) {\n        return dir(this, selector, nameIndex, 'nextElementSibling');\n      };\n    });\n    /**\n     * parent - 取得匹配的直接父元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    /**\n     * parents - 取得所有匹配的父元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    /**\n     * parentUntil - 取得所有的父元素，直到遇到匹配的元素，不包含匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n\n    each(['', 's', 'sUntil'], function (nameIndex, name) {\n      $$1.fn[\"parent\" + name] = function (selector) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        var $nodes = nameIndex === 0 ? this : $$1(this.get().reverse());\n        return dir($nodes, selector, nameIndex, 'parentNode');\n      };\n    });\n    /**\n     * append - 在元素内部追加内容\n     * @param newChild {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    /**\n     * prepend - 在元素内部前置内容\n     * @param newChild {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    each(['append', 'prepend'], function (nameIndex, name) {\n      $$1.fn[name] = function (newChild) {\n        var newChilds;\n        var copyByClone = this.length > 1;\n\n        if (isString(newChild)) {\n          var tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n          newChilds = [].slice.call(tempDiv.childNodes);\n        } else {\n          newChilds = $$1(newChild).get();\n        }\n\n        if (nameIndex === 1) {\n          // prepend\n          newChilds.reverse();\n        }\n\n        return this.each(function (i, _this) {\n          each(newChilds, function (j, child) {\n            // 一个元素要同时追加到多个元素中，需要先复制一份，然后追加\n            if (copyByClone && i > 0) {\n              child = child.cloneNode(true);\n            }\n\n            if (nameIndex === 0) {\n              // append\n              _this.appendChild(child);\n            } else {\n              // prepend\n              _this.insertBefore(child, _this.childNodes[0]);\n            }\n          });\n        });\n      };\n    });\n    /**\n     * insertBefore - 插入到指定元素的前面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    /**\n     * insertAfter - 插入到指定元素的后面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    each(['insertBefore', 'insertAfter'], function (nameIndex, name) {\n      $$1.fn[name] = function (selector) {\n        var $elem = $$1(selector);\n        return this.each(function (i, _this) {\n          $elem.each(function (j, elem) {\n            elem.parentNode.insertBefore($elem.length === 1 ? _this : _this.cloneNode(true), nameIndex === 0 ? elem : elem.nextSibling);\n          });\n        });\n      };\n    });\n    /**\n     * appendTo - 追加到指定元素内容\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    /**\n     * prependTo - 前置到指定元素内部\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    /**\n     * before - 插入到指定元素前面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    /**\n     * after - 插入到指定元素后面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    /**\n     * replaceAll - 替换掉指定元素\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n\n    each({\n      appendTo: 'append',\n      prependTo: 'prepend',\n      before: 'insertBefore',\n      after: 'insertAfter',\n      replaceAll: 'replaceWith'\n    }, function (name, original) {\n      $$1.fn[name] = function (selector) {\n        $$1(selector)[original](this);\n        return this;\n      };\n    });\n    var dataNS = 'mduiElementDataStorage';\n    $$1.extend({\n      /**\n       * 在指定元素上存储数据，或从指定元素上读取数据\n       * @param elem 必须， DOM 元素\n       * @param key 必须，键名\n       * @param value 可选，值\n       */\n      data: function data(elem, key, value) {\n        var data = {};\n\n        if (value !== undefined) {\n          // 根据 key、value 设置值\n          data[key] = value;\n        } else if (isObjectLike(key)) {\n          // 根据键值对设置值\n          data = key;\n        } else if (key === undefined) {\n          // 获取所有值\n          var result = {};\n          each(elem.attributes, function (i, attribute) {\n            var name = attribute.name;\n\n            if (name.indexOf('data-') === 0) {\n              var prop = name.slice(5).replace(/-./g, function (u) {\n                return u.charAt(1).toUpperCase();\n              });\n              result[prop] = attribute.value;\n            }\n          });\n\n          if (elem[dataNS]) {\n            each(elem[dataNS], function (k, v) {\n              result[k] = v;\n            });\n          }\n\n          return result;\n        } else if (elem[dataNS] && key in elem[dataNS]) {\n          // 获取指定值\n          return elem[dataNS][key];\n        } else {\n          // 从 data- 中获取指定值\n          var dataKey = elem.getAttribute(\"data-\" + key);\n\n          if (dataKey) {\n            return dataKey;\n          }\n\n          return undefined;\n        } // 设置值\n\n\n        if (!elem[dataNS]) {\n          elem[dataNS] = {};\n        }\n\n        each(data, function (k, v) {\n          elem[dataNS][k] = v;\n        });\n        return undefined;\n      },\n\n      /**\n       * 移除指定元素上存放的数据\n       * @param elem 必须，DOM 元素\n       * @param key 必须，键名\n       */\n      removeData: function removeData(elem, key) {\n        if (elem[dataNS] && elem[dataNS][key]) {\n          elem[dataNS][key] = null;\n          delete elem[dataNS][key];\n        }\n      }\n    });\n    $$1.fn.extend({\n      /**\n       * 在元素上读取或设置数据\n       * @param key 必须\n       * @param value\n       * @returns {*}\n       */\n      data: function data(key, value) {\n        if (value === undefined) {\n          if (isObjectLike(key)) {\n            // 同时设置多个值\n            return this.each(function (i, elem) {\n              $$1.data(elem, key);\n            });\n          }\n\n          if (this[0]) {\n            // 获取值\n            return $$1.data(this[0], key);\n          }\n\n          return undefined;\n        } // 设置值\n\n\n        return this.each(function (i, elem) {\n          $$1.data(elem, key, value);\n        });\n      },\n\n      /**\n       * 移除元素上存储的数据\n       * @param key 必须\n       * @returns {*}\n       */\n      removeData: function removeData(key) {\n        return this.each(function (i, elem) {\n          $$1.removeData(elem, key);\n        });\n      }\n    });\n    !function () {\n      !function () {\n        try {\n          return new e(\"test\"), !1;\n        } catch (e) {}\n\n        var e = function e(_e, n) {\n          n = n || {\n            bubbles: !1,\n            cancelable: !1\n          };\n          var t = document.createEvent(\"MouseEvent\");\n          return t.initMouseEvent(_e, n.bubbles, n.cancelable, window, 0, 0, 0, 0, 0, !1, !1, !1, !1, 0, null), t;\n        };\n\n        e.prototype = Event.prototype, window.MouseEvent = e;\n      }();\n    }();\n    !function () {\n      !function () {\n        if (\"function\" == typeof window.CustomEvent) {\n          return !1;\n        }\n\n        function t(t, n) {\n          n = n || {\n            bubbles: !1,\n            cancelable: !1,\n            detail: void 0\n          };\n          var e = document.createEvent(\"CustomEvent\");\n          return e.initCustomEvent(t, n.bubbles, n.cancelable, n.detail), e;\n        }\n\n        t.prototype = window.Event.prototype, window.CustomEvent = t;\n      }();\n    }(); // 存储事件\n\n    var handlers = {// i: { // 元素ID\n      //   j: { // 事件ID\n      //     e: 事件名\n      //     fn: 事件处理函数\n      //     i: 事件ID\n      //     proxy:\n      //     sel: 选择器\n      //   }\n      // }\n    }; // 元素ID\n\n    var mduiElementId = 1;\n\n    function fnFalse() {\n      return false;\n    }\n    /**\n     * 为元素赋予一个唯一的ID\n     * @param element\n     * @returns {number|*}\n     */\n\n\n    function getElementId(element) {\n      if (!element.mduiElementId) {\n        mduiElementId += 1;\n        element.mduiElementId = mduiElementId;\n      }\n\n      return element.mduiElementId;\n    }\n    /**\n     * 获取匹配的事件\n     * @param element\n     * @param eventName\n     * @param func\n     * @param selector\n     * @returns {Array}\n     */\n\n\n    function getHandlers(element, eventName, func, selector) {\n      return (handlers[getElementId(element)] || []).filter(function (handler) {\n        return handler && (!eventName || handler.e === eventName) && (!func || handler.fn.toString() === func.toString()) && (!selector || handler.sel === selector);\n      });\n    }\n    /**\n     * 添加事件监听\n     * @param element\n     * @param eventName\n     * @param func\n     * @param data\n     * @param selector\n     */\n\n\n    function add(element, eventName, func, data, selector) {\n      var elementId = getElementId(element);\n\n      if (!handlers[elementId]) {\n        handlers[elementId] = [];\n      } // 传入 data.useCapture 来设置 useCapture: true\n\n\n      var useCapture = false;\n\n      if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n      }\n\n      eventName.split(' ').forEach(function (event) {\n        var handler = {\n          e: event,\n          fn: func,\n          sel: selector,\n          i: handlers[elementId].length\n        };\n\n        function callFn(e, elem) {\n          // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n\n          /* eslint no-underscore-dangle: 0 */\n          var result = func.apply(elem, e._detail === undefined ? [e] : [e].concat(e._detail));\n\n          if (result === false) {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }\n\n        function proxyfn(e) {\n          e._data = data;\n\n          if (selector) {\n            // 事件代理\n            $$1(element).find(selector).get().reverse().forEach(function (elem) {\n              if (elem === e.target || $$1.contains(elem, e.target)) {\n                callFn(e, elem);\n              }\n            });\n          } else {\n            // 不使用事件代理\n            callFn(e, element);\n          }\n        }\n\n        handler.proxy = proxyfn;\n        handlers[elementId].push(handler);\n        element.addEventListener(handler.e, proxyfn, useCapture);\n      });\n    }\n    /**\n     * 移除事件监听\n     * @param element\n     * @param eventName\n     * @param func\n     * @param selector\n     */\n\n\n    function remove(element, eventName, func, selector) {\n      (eventName || '').split(' ').forEach(function (event) {\n        getHandlers(element, event, func, selector).forEach(function (handler) {\n          delete handlers[getElementId(element)][handler.i];\n          element.removeEventListener(handler.e, handler.proxy, false);\n        });\n      });\n    }\n\n    $$1.fn.extend({\n      /**\n       * DOM 加载完毕后调用的函数\n       * @param callback\n       * @returns {ready}\n       */\n      ready: function ready(callback) {\n        if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n          callback($$1);\n        } else {\n          document.addEventListener('DOMContentLoaded', function () {\n            callback($$1);\n          }, false);\n        }\n\n        return this;\n      },\n\n      /**\n       * 绑定事件\n       *\n       * $().on({eventName: fn}, selector, data);\n       * $().on({eventName: fn}, selector)\n       * $().on({eventName: fn})\n       * $().on(eventName, selector, data, fn);\n       * $().on(eventName, selector, fn);\n       * $().on(eventName, data, fn);\n       * $().on(eventName, fn);\n       * $().on(eventName, false);\n       *\n       * @param eventName\n       * @param selector\n       * @param data\n       * @param callback\n       * @param one 是否是 one 方法，只在 JQ 内部使用\n       * @returns\n       */\n      on: function on(eventName, selector, data, _callback, one) {\n        var self = this; // 默认\n        // $().on(event, selector, data, callback)\n        // event 使用 事件:函数 键值对\n        // event = {\n        //   'event1': callback1,\n        //   'event2': callback2\n        // }\n        //\n        // $().on(event, selector, data)\n\n        if (eventName && !isString(eventName)) {\n          each(eventName, function (type, fn) {\n            self.on(type, selector, data, fn);\n          });\n          return self;\n        } // selector 不存在\n        // $().on(event, data, callback)\n\n\n        if (!isString(selector) && !isFunction(_callback) && _callback !== false) {\n          _callback = data;\n          data = selector;\n          selector = undefined;\n        } // data 不存在\n        // $().on(event, callback)\n\n\n        if (isFunction(data) || data === false) {\n          _callback = data;\n          data = undefined;\n        } // callback 为 false\n        // $().on(event, false)\n\n\n        if (_callback === false) {\n          _callback = fnFalse;\n        }\n\n        if (one === 1) {\n          var origCallback = _callback;\n\n          _callback = function callback() {\n            self.off(eventName, selector, _callback);\n            /* eslint prefer-rest-params: 0 */\n\n            return origCallback.apply(this, arguments);\n          };\n        }\n\n        return this.each(function () {\n          add(this, eventName, _callback, data, selector);\n        });\n      },\n\n      /**\n       * 绑定事件，只触发一次\n       * @param eventName\n       * @param selector\n       * @param data\n       * @param callback\n       */\n      one: function one(eventName, selector, data, callback) {\n        var self = this;\n\n        if (!isString(eventName)) {\n          each(eventName, function (type, fn) {\n            type.split(' ').forEach(function (eName) {\n              self.on(eName, selector, data, fn, 1);\n            });\n          });\n        } else {\n          eventName.split(' ').forEach(function (eName) {\n            self.on(eName, selector, data, callback, 1);\n          });\n        }\n\n        return this;\n      },\n\n      /**\n       * 取消绑定事件\n       *\n       * $().off(eventName, selector);\n       * $().off(eventName, callback);\n       * $().off(eventName, false);\n       *\n       */\n      off: function off(eventName, selector, callback) {\n        var self = this; // event 使用 事件:函数 键值对\n        // event = {\n        //   'event1': callback1,\n        //   'event2': callback2\n        // }\n        //\n        // $().off(event, selector)\n\n        if (eventName && !isString(eventName)) {\n          each(eventName, function (type, fn) {\n            self.off(type, selector, fn);\n          });\n          return self;\n        } // selector 不存在\n        // $().off(event, callback)\n\n\n        if (!isString(selector) && !isFunction(callback) && callback !== false) {\n          callback = selector;\n          selector = undefined;\n        } // callback 为 false\n        // $().off(event, false)\n\n\n        if (callback === false) {\n          callback = fnFalse;\n        }\n\n        return self.each(function () {\n          remove(this, eventName, callback, selector);\n        });\n      },\n\n      /**\n       * 触发一个事件\n       * @param eventName\n       * @param data\n       * @returns {*|JQ}\n       */\n      trigger: function trigger(eventName, data) {\n        var isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(eventName) > -1;\n        var evt;\n\n        if (isMouseEvent) {\n          // Note: MouseEvent 无法传入 detail 参数\n          evt = new MouseEvent(eventName, {\n            bubbles: true,\n            cancelable: true\n          });\n        } else {\n          evt = new CustomEvent(eventName, {\n            detail: data,\n            bubbles: true,\n            cancelable: true\n          });\n        }\n\n        evt._detail = data;\n        return this.each(function () {\n          this.dispatchEvent(evt);\n        });\n      }\n    });\n    var globalOptions = {};\n    var jsonpID = 0; // 全局事件名\n\n    var ajaxEvent = {\n      ajaxStart: 'start.mdui.ajax',\n      ajaxSuccess: 'success.mdui.ajax',\n      ajaxError: 'error.mdui.ajax',\n      ajaxComplete: 'complete.mdui.ajax'\n    };\n    /**\n     * 判断此请求方法是否通过查询字符串提交参数\n     * @param method 请求方法，大写\n     * @returns {boolean}\n     */\n\n    function isQueryStringData(method) {\n      return ['GET', 'HEAD'].indexOf(method) >= 0;\n    }\n    /**\n     * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n     * @param url\n     * @param query 参数 key=value\n     * @returns {string}\n     */\n\n\n    function appendQuery(url, query) {\n      return (url + \"&\" + query).replace(/[&?]{1,2}/, '?');\n    }\n\n    $$1.extend({\n      /**\n       * 为 ajax 请求设置全局配置参数\n       * @param options\n       */\n      ajaxSetup: function ajaxSetup(options) {\n        $$1.extend(globalOptions, options || {});\n      },\n\n      /**\n       * 发送 ajax 请求\n       * @param options\n       */\n      ajax: function ajax(options) {\n        // 配置参数\n        var defaults = {\n          // 请求方式\n          method: 'GET',\n          // 请求的数据，查询字符串或对象\n          data: false,\n          // 是否把数据转换为查询字符串发送，为 false 时不进行自动转换。\n          processData: true,\n          // 是否为异步请求\n          async: true,\n          // 是否从缓存中读取，只对 GET/HEAD 请求有效，dataType 为 jsonp 时为 false\n          cache: true,\n          // HTTP 访问认证的用户名\n          username: '',\n          // HTTP 访问认证的密码\n          password: '',\n          // 一个键值对，随着请求一起发送\n          headers: {},\n          // 设置 XHR 对象\n          xhrFields: {},\n          // 一个 HTTP 代码和函数的对象\n          statusCode: {},\n          // 预期服务器返回的数据类型 text、json、jsonp\n          dataType: 'text',\n          // jsonp 请求的回调函数名称\n          jsonp: 'callback',\n          // （string 或 Function）使用指定的回调函数名代替自动生成的回调函数名\n          jsonpCallback: function jsonpCallback() {\n            jsonpID += 1;\n            return \"mduijsonp_\" + Date.now() + \"_\" + jsonpID;\n          },\n          // 发送信息至服务器时内容编码类型\n          contentType: 'application/x-www-form-urlencoded',\n          // 设置请求超时时间（毫秒）\n          timeout: 0,\n          // 是否在 document 上触发全局 ajax 事件\n          global: true // beforeSend:    function (XMLHttpRequest) 请求发送前执行，返回 false 可取消本次 ajax 请求\n          // success:       function (data, textStatus, XMLHttpRequest) 请求成功时调用\n          // error:         function (XMLHttpRequest, textStatus) 请求失败时调用\n          // statusCode:    {404: function ()}\n          //                200-299之间的状态码表示成功，参数和 success 回调一样；其他状态码表示失败，参数和 error 回调一样\n          // complete:      function (XMLHttpRequest, textStatus) 请求完成后回调函数 (请求成功或失败之后均调用)\n\n        }; // 回调函数\n\n        var callbacks = ['beforeSend', 'success', 'error', 'statusCode', 'complete']; // 是否已取消请求\n\n        var isCanceled = false; // 保存全局配置\n\n        var globals = globalOptions; // 事件参数\n\n        var eventParams = {}; // 合并全局参数到默认参数，全局回调函数不覆盖\n\n        each(globals, function (key, value) {\n          if (callbacks.indexOf(key) < 0) {\n            defaults[key] = value;\n          }\n        }); // 参数合并\n\n        options = $$1.extend({}, defaults, options);\n        /**\n         * 触发全局事件\n         * @param event string 事件名\n         * @param xhr XMLHttpRequest 事件参数\n         */\n\n        function triggerEvent(event, xhr) {\n          if (options.global) {\n            $$1(document).trigger(event, xhr);\n          }\n        }\n        /**\n         * 触发 XHR 回调和事件\n         * @param callback string 回调函数名称\n         * @param args\n         */\n\n\n        function triggerCallback(callback) {\n          var args = [],\n              len = arguments.length - 1;\n\n          while (len-- > 0) {\n            args[len] = arguments[len + 1];\n          }\n\n          var result1;\n          var result2;\n\n          if (callback) {\n            // 全局回调\n            if (callback in globals) {\n              result1 = globals[callback].apply(globals, args);\n            } // 自定义回调\n\n\n            if (options[callback]) {\n              result2 = options[callback].apply(options, args);\n            } // beforeSend 回调返回 false 时取消 ajax 请求\n\n\n            if (callback === 'beforeSend' && (result1 === false || result2 === false)) {\n              isCanceled = true;\n            }\n          }\n        } // 请求方式转为大写\n\n\n        var method = options.method.toUpperCase(); // 默认使用当前页面 URL\n\n        if (!options.url) {\n          options.url = window.location.toString();\n        } // 需要发送的数据\n        // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n\n\n        var sendData;\n\n        if ((isQueryStringData(method) || options.processData) && options.data && [ArrayBuffer, Blob, Document, FormData].indexOf(options.data.constructor) < 0) {\n          sendData = isString(options.data) ? options.data : $$1.param(options.data);\n        } else {\n          sendData = options.data;\n        } // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n\n\n        if (isQueryStringData(method) && sendData) {\n          // 查询字符串拼接到 URL 中\n          options.url = appendQuery(options.url, sendData);\n          sendData = null;\n        } // JSONP\n\n\n        if (options.dataType === 'jsonp') {\n          // URL 中添加自动生成的回调函数名\n          var callbackName = isFunction(options.jsonpCallback) ? options.jsonpCallback() : options.jsonpCallback;\n          var requestUrl = appendQuery(options.url, options.jsonp + \"=\" + callbackName);\n          eventParams.options = options;\n          triggerEvent(ajaxEvent.ajaxStart, eventParams);\n          triggerCallback('beforeSend', null);\n\n          if (isCanceled) {\n            return undefined;\n          }\n\n          var abortTimeout; // 创建 script\n\n          var script = document.createElement('script');\n          script.type = 'text/javascript'; // 创建 script 失败\n\n          script.onerror = function () {\n            if (abortTimeout) {\n              clearTimeout(abortTimeout);\n            }\n\n            triggerEvent(ajaxEvent.ajaxError, eventParams);\n            triggerCallback('error', null, 'scripterror');\n            triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n            triggerCallback('complete', null, 'scripterror');\n          };\n\n          script.src = requestUrl; // 处理\n\n          window[callbackName] = function (data) {\n            if (abortTimeout) {\n              clearTimeout(abortTimeout);\n            }\n\n            eventParams.data = data;\n            triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n            triggerCallback('success', data, 'success', null);\n            $$1(script).remove();\n            script = null;\n            delete window[callbackName];\n          };\n\n          $$1('head').append(script);\n\n          if (options.timeout > 0) {\n            abortTimeout = setTimeout(function () {\n              $$1(script).remove();\n              script = null;\n              triggerEvent(ajaxEvent.ajaxError, eventParams);\n              triggerCallback('error', null, 'timeout');\n            }, options.timeout);\n          }\n\n          return undefined;\n        } // GET/HEAD 请求的缓存处理\n\n\n        if (isQueryStringData(method) && !options.cache) {\n          options.url = appendQuery(options.url, \"_=\" + Date.now());\n        } // 创建 XHR\n\n\n        var xhr = new XMLHttpRequest();\n        xhr.open(method, options.url, options.async, options.username, options.password);\n\n        if (options.contentType || sendData && !isQueryStringData(method) && options.contentType !== false) {\n          xhr.setRequestHeader('Content-Type', options.contentType);\n        } // 设置 Accept\n\n\n        if (options.dataType === 'json') {\n          xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n        } // 添加 headers\n\n\n        if (options.headers) {\n          each(options.headers, function (key, value) {\n            xhr.setRequestHeader(key, value);\n          });\n        } // 检查是否是跨域请求\n\n\n        if (options.crossDomain === undefined) {\n          options.crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(options.url) && RegExp.$2 !== window.location.host;\n        }\n\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        if (options.xhrFields) {\n          each(options.xhrFields, function (key, value) {\n            xhr[key] = value;\n          });\n        }\n\n        eventParams.xhr = xhr;\n        eventParams.options = options;\n        var xhrTimeout;\n\n        xhr.onload = function () {\n          if (xhrTimeout) {\n            clearTimeout(xhrTimeout);\n          } // 包含成功或错误代码的字符串\n\n\n          var textStatus; // AJAX 返回的 HTTP 响应码是否表示成功\n\n          var isHttpStatusSuccess = xhr.status >= 200 && xhr.status < 300 || xhr.status === 0;\n          var responseData;\n\n          if (isHttpStatusSuccess) {\n            if (xhr.status === 204 || method === 'HEAD') {\n              textStatus = 'nocontent';\n            } else if (xhr.status === 304) {\n              textStatus = 'notmodified';\n            } else {\n              textStatus = 'success';\n            }\n\n            if (options.dataType === 'json') {\n              try {\n                responseData = JSON.parse(xhr.responseText);\n                eventParams.data = responseData;\n              } catch (err) {\n                textStatus = 'parsererror';\n                triggerEvent(ajaxEvent.ajaxError, eventParams);\n                triggerCallback('error', xhr, textStatus);\n              }\n\n              if (textStatus !== 'parsererror') {\n                triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n                triggerCallback('success', responseData, textStatus, xhr);\n              }\n            } else {\n              responseData = xhr.responseType === 'text' || xhr.responseType === '' ? xhr.responseText : xhr.response;\n              eventParams.data = responseData;\n              triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n              triggerCallback('success', responseData, textStatus, xhr);\n            }\n          } else {\n            textStatus = 'error';\n            triggerEvent(ajaxEvent.ajaxError, eventParams);\n            triggerCallback('error', xhr, textStatus);\n          } // statusCode\n\n\n          each([globals.statusCode, options.statusCode], function (i, func) {\n            if (func && func[xhr.status]) {\n              if (isHttpStatusSuccess) {\n                func[xhr.status](responseData, textStatus, xhr);\n              } else {\n                func[xhr.status](xhr, textStatus);\n              }\n            }\n          });\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', xhr, textStatus);\n        };\n\n        xhr.onerror = function () {\n          if (xhrTimeout) {\n            clearTimeout(xhrTimeout);\n          }\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', xhr, xhr.statusText);\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', xhr, 'error');\n        };\n\n        xhr.onabort = function () {\n          var textStatus = 'abort';\n\n          if (xhrTimeout) {\n            textStatus = 'timeout';\n            clearTimeout(xhrTimeout);\n          }\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', xhr, textStatus);\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', xhr, textStatus);\n        }; // ajax start 回调\n\n\n        triggerEvent(ajaxEvent.ajaxStart, eventParams);\n        triggerCallback('beforeSend', xhr);\n\n        if (isCanceled) {\n          return xhr;\n        } // Timeout\n\n\n        if (options.timeout > 0) {\n          xhrTimeout = setTimeout(function () {\n            xhr.abort();\n          }, options.timeout);\n        } // 发送 XHR\n\n\n        xhr.send(sendData);\n        return xhr;\n      }\n    }); // 监听全局事件\n    //\n    // 通过 $(document).on('success.mdui.ajax', function (event, params) {}) 调用时，包含两个参数\n    // event: 事件对象\n    // params: {\n    //   xhr: XMLHttpRequest 对象\n    //   options: ajax 请求的配置参数\n    //   data: ajax 请求返回的数据\n    // }\n    // 全局 Ajax 事件快捷方法\n    // $(document).ajaxStart(function (event, xhr, options) {})\n    // $(document).ajaxSuccess(function (event, xhr, options, data) {})\n    // $(document).ajaxError(function (event, xhr, options) {})\n    // $(document).ajaxComplete(function (event, xhr, options) {})\n\n    each(ajaxEvent, function (name, eventName) {\n      $$1.fn[name] = function (fn) {\n        return this.on(eventName, function (e, params) {\n          fn(e, params.xhr, params.options, params.data);\n        });\n      };\n    });\n    return $$1;\n  }();\n  /**\n   * =============================================================================\n   * ************   定义全局变量   ************\n   * =============================================================================\n   */\n\n\n  var $document = $(document);\n  var $window = $(window);\n  /**\n   * 队列 -- 当前队列的 api 和 jquery 不一样，所以不打包进 mdui.JQ 里\n   */\n\n  var queue = {};\n\n  (function () {\n    var queueData = [];\n    /**\n     * 写入队列\n     * @param queueName 对列名\n     * @param func 函数名，该参数为空时，返回所有队列\n     */\n\n    queue.queue = function (queueName, func) {\n      if (queueData[queueName] === undefined) {\n        queueData[queueName] = [];\n      }\n\n      if (func === undefined) {\n        return queueData[queueName];\n      }\n\n      queueData[queueName].push(func);\n    };\n    /**\n     * 从队列中移除第一个函数，并执行该函数\n     * @param queueName\n     */\n\n\n    queue.dequeue = function (queueName) {\n      if (queueData[queueName] !== undefined && queueData[queueName].length) {\n        queueData[queueName].shift()();\n      }\n    };\n  })();\n  /**\n   * touch 事件后的 500ms 内禁用 mousedown 事件\n   *\n   * 不支持触控的屏幕上事件顺序为 mousedown -> mouseup -> click\n   * 支持触控的屏幕上事件顺序为 touchstart -> touchend -> mousedown -> mouseup -> click\n   */\n\n\n  var TouchHandler = {\n    touches: 0,\n\n    /**\n     * 该事件是否被允许\n     * 在执行事件前调用该方法判断事件是否可以执行\n     * @param e\n     * @returns {boolean}\n     */\n    isAllow: function isAllow(e) {\n      var allow = true;\n\n      if (TouchHandler.touches && ['mousedown', 'mouseup', 'mousemove', 'click', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'].indexOf(e.type) > -1) {\n        // 触发了 touch 事件后阻止鼠标事件\n        allow = false;\n      }\n\n      return allow;\n    },\n\n    /**\n     * 在 touchstart 和 touchmove、touchend、touchcancel 事件中调用该方法注册事件\n     * @param e\n     */\n    register: function register(e) {\n      if (e.type === 'touchstart') {\n        // 触发了 touch 事件\n        TouchHandler.touches += 1;\n      } else if (['touchmove', 'touchend', 'touchcancel'].indexOf(e.type) > -1) {\n        // touch 事件结束 500ms 后解除对鼠标事件的阻止\n        setTimeout(function () {\n          if (TouchHandler.touches) {\n            TouchHandler.touches -= 1;\n          }\n        }, 500);\n      }\n    },\n    start: 'touchstart mousedown',\n    move: 'touchmove mousemove',\n    end: 'touchend mouseup',\n    cancel: 'touchcancel mouseleave',\n    unlock: 'touchend touchmove touchcancel'\n  }; // 测试事件\n  // 在每一个事件中都使用 TouchHandler.isAllow(e) 判断事件是否可执行\n  // 在 touchstart 和 touchmove、touchend、touchcancel\n  // (function () {\n  //\n  //   $document\n  //     .on(TouchHandler.start, function (e) {\n  //       if (!TouchHandler.isAllow(e)) {\n  //         return;\n  //       }\n  //       TouchHandler.register(e);\n  //       console.log(e.type);\n  //     })\n  //     .on(TouchHandler.move, function (e) {\n  //       if (!TouchHandler.isAllow(e)) {\n  //         return;\n  //       }\n  //       console.log(e.type);\n  //     })\n  //     .on(TouchHandler.end, function (e) {\n  //       if (!TouchHandler.isAllow(e)) {\n  //         return;\n  //       }\n  //       console.log(e.type);\n  //     })\n  //     .on(TouchHandler.unlock, TouchHandler.register);\n  // })();\n\n  $(function () {\n    // 避免页面加载完后直接执行css动画\n    // https://css-tricks.com/transitions-only-after-page-load/\n    setTimeout(function () {\n      $('body').addClass('mdui-loaded');\n    }, 0);\n  });\n  /**\n   * =============================================================================\n   * ************   MDUI 内部使用的函数   ************\n   * =============================================================================\n   */\n\n  /**\n   * 解析 DATA API 的参数\n   * @param str\n   * @returns {*}\n   */\n\n  var parseOptions = function parseOptions(str) {\n    var options = {};\n\n    if (str === null || !str) {\n      return options;\n    }\n\n    if (_typeof(str) === 'object') {\n      return str;\n    }\n    /* jshint ignore:start */\n\n\n    var start = str.indexOf('{');\n\n    try {\n      options = new Function('', 'var json = ' + str.substr(start) + '; return JSON.parse(JSON.stringify(json));')();\n    } catch (e) {}\n    /* jshint ignore:end */\n\n\n    return options;\n  };\n  /**\n   * 绑定组件的事件\n   * @param eventName 事件名\n   * @param pluginName 插件名\n   * @param inst 插件实例\n   * @param trigger 在该元素上触发\n   * @param obj 事件参数\n   */\n\n\n  var componentEvent = function componentEvent(eventName, pluginName, inst, trigger, obj) {\n    if (!obj) {\n      obj = {};\n    }\n\n    obj.inst = inst;\n    var fullEventName = eventName + '.mdui.' + pluginName; // jQuery 事件\n\n    if (typeof jQuery !== 'undefined') {\n      jQuery(trigger).trigger(fullEventName, obj);\n    } // JQ 事件\n\n\n    $(trigger).trigger(fullEventName, obj);\n  };\n  /**\n   * =============================================================================\n   * ************   开放的常用方法   ************\n   * =============================================================================\n   */\n\n\n  $.fn.extend({\n    /**\n     * 执行强制重绘\n     */\n    reflow: function reflow() {\n      return this.each(function () {\n        return this.clientLeft;\n      });\n    },\n\n    /**\n     * 设置 transition 时间\n     * @param duration\n     */\n    transition: function transition(duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + 'ms';\n      }\n\n      return this.each(function () {\n        this.style.webkitTransitionDuration = duration;\n        this.style.transitionDuration = duration;\n      });\n    },\n\n    /**\n     * transition 动画结束回调\n     * @param callback\n     * @returns {transitionEnd}\n     */\n    transitionEnd: function transitionEnd(callback) {\n      var events = ['webkitTransitionEnd', 'transitionend'];\n      var i;\n\n      var _this = this;\n\n      function fireCallBack(e) {\n        if (e.target !== this) {\n          return;\n        }\n\n        callback.call(this, e);\n\n        for (i = 0; i < events.length; i++) {\n          _this.off(events[i], fireCallBack);\n        }\n      }\n\n      if (callback) {\n        for (i = 0; i < events.length; i++) {\n          _this.on(events[i], fireCallBack);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * 设置 transform-origin 属性\n     * @param transformOrigin\n     */\n    transformOrigin: function transformOrigin(_transformOrigin) {\n      return this.each(function () {\n        this.style.webkitTransformOrigin = _transformOrigin;\n        this.style.transformOrigin = _transformOrigin;\n      });\n    },\n\n    /**\n     * 设置 transform 属性\n     * @param transform\n     */\n    transform: function transform(_transform) {\n      return this.each(function () {\n        this.style.webkitTransform = _transform;\n        this.style.transform = _transform;\n      });\n    }\n  });\n  $.extend({\n    /**\n     * 创建并显示遮罩\n     * @param zIndex 遮罩层的 z-index\n     */\n    showOverlay: function showOverlay(zIndex) {\n      var $overlay = $('.mdui-overlay');\n\n      if ($overlay.length) {\n        $overlay.data('isDeleted', 0);\n\n        if (zIndex !== undefined) {\n          $overlay.css('z-index', zIndex);\n        }\n      } else {\n        if (zIndex === undefined) {\n          zIndex = 2000;\n        }\n\n        $overlay = $('<div class=\"mdui-overlay\">').appendTo(document.body).reflow().css('z-index', zIndex);\n      }\n\n      var level = $overlay.data('overlay-level') || 0;\n      return $overlay.data('overlay-level', ++level).addClass('mdui-overlay-show');\n    },\n\n    /**\n     * 隐藏遮罩层\n     * @param force 是否强制隐藏遮罩\n     */\n    hideOverlay: function hideOverlay(force) {\n      var $overlay = $('.mdui-overlay');\n\n      if (!$overlay.length) {\n        return;\n      }\n\n      var level = force ? 1 : $overlay.data('overlay-level');\n\n      if (level > 1) {\n        $overlay.data('overlay-level', --level);\n        return;\n      }\n\n      $overlay.data('overlay-level', 0).removeClass('mdui-overlay-show').data('isDeleted', 1).transitionEnd(function () {\n        if ($overlay.data('isDeleted')) {\n          $overlay.remove();\n        }\n      });\n    },\n\n    /**\n     * 锁定屏幕\n     */\n    lockScreen: function lockScreen() {\n      var $body = $('body'); // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n\n      var newBodyWidth = $body.width();\n      $body.addClass('mdui-locked').width(newBodyWidth);\n      var level = $body.data('lockscreen-level') || 0;\n      $body.data('lockscreen-level', ++level);\n    },\n\n    /**\n     * 解除屏幕锁定\n     * @param force 是否强制解锁屏幕\n     */\n    unlockScreen: function unlockScreen(force) {\n      var $body = $('body');\n      var level = force ? 1 : $body.data('lockscreen-level');\n\n      if (level > 1) {\n        $body.data('lockscreen-level', --level);\n        return;\n      }\n\n      $body.data('lockscreen-level', 0).removeClass('mdui-locked').width('');\n    },\n\n    /**\n     * 函数节流\n     * @param fn\n     * @param delay\n     * @returns {Function}\n     */\n    throttle: function throttle(fn, delay) {\n      var timer = null;\n\n      if (!delay || delay < 16) {\n        delay = 16;\n      }\n\n      return function () {\n        var _this = this;\n\n        var args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            fn.apply(_this, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  });\n  /**\n   * 生成唯一 id\n   * @param string name id的名称，若该名称对于的guid不存在，则生成新的guid并返回；若已存在，则返回原有guid\n   * @returns {string}\n   */\n\n  (function () {\n    var GUID = {};\n    $.extend({\n      guid: function guid(name) {\n        if (typeof name !== 'undefined' && typeof GUID[name] !== 'undefined') {\n          return GUID[name];\n        }\n\n        function s4() {\n          return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        }\n\n        var guid = s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\n        if (typeof name !== 'undefined') {\n          GUID[name] = guid;\n        }\n\n        return guid;\n      }\n    });\n  })();\n  /**\n   * =============================================================================\n   * ************   Mutation   ************\n   * =============================================================================\n   */\n\n\n  (function () {\n    /**\n     * API 初始化代理, 当 DOM 突变再次执行代理的初始化函数. 使用方法:\n     *\n     * 1. 代理组件 API 执行初始化函数, selector 必须为字符串.\n     *    mdui.mutation(selector, apiInit);\n     *    mutation 会执行 $(selector).each(apiInit)\n     *\n     * 2. 突变时, 再次执行代理的初始化函数\n     *    mdui.mutation()        等价 $(document).mutation()\n     *    $(selector).mutation() 在 selector 节点内进行 API 初始化\n     *\n     * 原理:\n     *\n     *    mutation 执行了 $().data('mdui.mutation', [selector]).\n     *    当元素被重构时, 该数据会丢失, 由此判断是否突变.\n     *\n     * 提示:\n     *\n     *    类似 Drawer 可以使用委托事件完成.\n     *    类似 Collapse 需要知道 DOM 发生突变, 并再次进行初始化.\n     */\n    var entries = {};\n\n    function _mutation(selector, apiInit, that, i, item) {\n      var $this = $(that);\n      var m = $this.data('mdui.mutation');\n\n      if (!m) {\n        m = [];\n        $this.data('mdui.mutation', m);\n      }\n\n      if (m.indexOf(selector) === -1) {\n        m.push(selector);\n        apiInit.call(that, i, item);\n      }\n    }\n\n    $.fn.extend({\n      mutation: function mutation() {\n        return this.each(function (i, item) {\n          var $this = $(this);\n          $.each(entries, function (selector, apiInit) {\n            if ($this.is(selector)) {\n              _mutation(selector, apiInit, $this[0], i, item);\n            }\n\n            $this.find(selector).each(function (i, item) {\n              _mutation(selector, apiInit, this, i, item);\n            });\n          });\n        });\n      }\n    });\n\n    mdui.mutation = function (selector, apiInit) {\n      if (typeof selector !== 'string' || typeof apiInit !== 'function') {\n        $(document).mutation();\n        return;\n      }\n\n      entries[selector] = apiInit;\n      $(selector).each(function (i, item) {\n        _mutation(selector, apiInit, this, i, item);\n      });\n    };\n  })();\n  /**\n   * =============================================================================\n   * ************   Headroom.js   ************\n   * =============================================================================\n   */\n\n\n  mdui.Headroom = function () {\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      tolerance: 5,\n      // 滚动条滚动多少距离开始隐藏或显示元素，{down: num, up: num}，或数字\n      offset: 0,\n      // 在页面顶部多少距离内滚动不会隐藏元素\n      initialClass: 'mdui-headroom',\n      // 初始化时添加的类\n      pinnedClass: 'mdui-headroom-pinned-top',\n      // 元素固定时添加的类\n      unpinnedClass: 'mdui-headroom-unpinned-top' // 元素隐藏时添加的类\n\n    };\n    /**\n     * Headroom\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n\n    function Headroom(selector, opts) {\n      var _this = this;\n\n      _this.$headroom = $(selector).eq(0);\n\n      if (!_this.$headroom.length) {\n        return;\n      } // 已通过自定义属性实例化过，不再重复实例化\n\n\n      var oldInst = _this.$headroom.data('mdui.headroom');\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {}); // 数值转为 {down: bum, up: num}\n\n      var tolerance = _this.options.tolerance;\n\n      if (tolerance !== Object(tolerance)) {\n        _this.options.tolerance = {\n          down: tolerance,\n          up: tolerance\n        };\n      }\n\n      _this._init();\n    }\n    /**\n     * 初始化\n     * @private\n     */\n\n\n    Headroom.prototype._init = function () {\n      var _this = this;\n\n      _this.state = 'pinned';\n\n      _this.$headroom.addClass(_this.options.initialClass).removeClass(_this.options.pinnedClass + ' ' + _this.options.unpinnedClass);\n\n      _this.inited = false;\n      _this.lastScrollY = 0;\n\n      _this._attachEvent();\n    };\n    /**\n     * 监听滚动事件\n     * @private\n     */\n\n\n    Headroom.prototype._attachEvent = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this.lastScrollY = window.pageYOffset;\n        _this.inited = true;\n        $window.on('scroll', function () {\n          _this._scroll();\n        });\n      }\n    };\n    /**\n     * 滚动时的处理\n     * @private\n     */\n\n\n    Headroom.prototype._scroll = function () {\n      var _this = this;\n\n      _this.rafId = window.requestAnimationFrame(function () {\n        var currentScrollY = window.pageYOffset;\n        var direction = currentScrollY > _this.lastScrollY ? 'down' : 'up';\n\n        var toleranceExceeded = Math.abs(currentScrollY - _this.lastScrollY) >= _this.options.tolerance[direction];\n\n        if (currentScrollY > _this.lastScrollY && currentScrollY >= _this.options.offset && toleranceExceeded) {\n          _this.unpin();\n        } else if (currentScrollY < _this.lastScrollY && toleranceExceeded || currentScrollY <= _this.options.offset) {\n          _this.pin();\n        }\n\n        _this.lastScrollY = currentScrollY;\n      });\n    };\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n\n\n    var transitionEnd = function transitionEnd(inst) {\n      if (inst.state === 'pinning') {\n        inst.state = 'pinned';\n        componentEvent('pinned', 'headroom', inst, inst.$headroom);\n      }\n\n      if (inst.state === 'unpinning') {\n        inst.state = 'unpinned';\n        componentEvent('unpinned', 'headroom', inst, inst.$headroom);\n      }\n    };\n    /**\n     * 固定住\n     */\n\n\n    Headroom.prototype.pin = function () {\n      var _this = this;\n\n      if (_this.state === 'pinning' || _this.state === 'pinned' || !_this.$headroom.hasClass(_this.options.initialClass)) {\n        return;\n      }\n\n      componentEvent('pin', 'headroom', _this, _this.$headroom);\n      _this.state = 'pinning';\n\n      _this.$headroom.removeClass(_this.options.unpinnedClass).addClass(_this.options.pinnedClass).transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n    /**\n     * 不固定住\n     */\n\n\n    Headroom.prototype.unpin = function () {\n      var _this = this;\n\n      if (_this.state === 'unpinning' || _this.state === 'unpinned' || !_this.$headroom.hasClass(_this.options.initialClass)) {\n        return;\n      }\n\n      componentEvent('unpin', 'headroom', _this, _this.$headroom);\n      _this.state = 'unpinning';\n\n      _this.$headroom.removeClass(_this.options.pinnedClass).addClass(_this.options.unpinnedClass).transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n    /**\n     * 启用\n     */\n\n\n    Headroom.prototype.enable = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this._init();\n      }\n    };\n    /**\n     * 禁用\n     */\n\n\n    Headroom.prototype.disable = function () {\n      var _this = this;\n\n      if (_this.inited) {\n        _this.inited = false;\n\n        _this.$headroom.removeClass([_this.options.initialClass, _this.options.pinnedClass, _this.options.unpinnedClass].join(' '));\n\n        $window.off('scroll', function () {\n          _this._scroll();\n        });\n        window.cancelAnimationFrame(_this.rafId);\n      }\n    };\n    /**\n     * 获取当前状态 pinning | pinned | unpinning | unpinned\n     */\n\n\n    Headroom.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Headroom;\n  }();\n  /**\n   * =============================================================================\n   * ************   Headroom 自定义属性 API   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    mdui.mutation('[mdui-headroom]', function () {\n      var $this = $(this);\n      var options = parseOptions($this.attr('mdui-headroom'));\n      var inst = $this.data('mdui.headroom');\n\n      if (!inst) {\n        inst = new mdui.Headroom($this, options);\n        $this.data('mdui.headroom', inst);\n      }\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   供 Collapse、 Panel 调用的折叠内容块插件   ************\n   * =============================================================================\n   */\n\n  var CollapsePrivate = function () {\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      accordion: false // 是否使用手风琴效果\n\n    };\n    /**\n     * 折叠内容块\n     * @param selector\n     * @param opts\n     * @param namespace\n     * @constructor\n     */\n\n    function Collapse(selector, opts, namespace) {\n      var _this = this; // 命名空间\n\n\n      _this.ns = namespace; // 类名\n\n      var classpPefix = 'mdui-' + _this.ns + '-item';\n      _this.class_item = classpPefix;\n      _this.class_item_open = classpPefix + '-open';\n      _this.class_header = classpPefix + '-header';\n      _this.class_body = classpPefix + '-body'; // 折叠面板元素\n\n      _this.$collapse = $(selector).eq(0);\n\n      if (!_this.$collapse.length) {\n        return;\n      } // 已通过自定义属性实例化过，不再重复实例化\n\n\n      var oldInst = _this.$collapse.data('mdui.' + _this.ns);\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {});\n\n      _this.$collapse.on('click', '.' + _this.class_header, function () {\n        var $item = $(this).parent('.' + _this.class_item);\n\n        if (_this.$collapse.children($item).length) {\n          _this.toggle($item);\n        }\n      }); // 绑定关闭按钮\n\n\n      _this.$collapse.on('click', '[mdui-' + _this.ns + '-item-close]', function () {\n        var $item = $(this).parents('.' + _this.class_item).eq(0);\n\n        if (_this._isOpen($item)) {\n          _this.close($item);\n        }\n      });\n    }\n    /**\n     * 指定 item 是否处于打开状态\n     * @param $item\n     * @returns {boolean}\n     * @private\n     */\n\n\n    Collapse.prototype._isOpen = function ($item) {\n      return $item.hasClass(this.class_item_open);\n    };\n    /**\n     * 获取指定 item\n     * @param item\n     * @returns {*}\n     * @private\n     */\n\n\n    Collapse.prototype._getItem = function (item) {\n      var _this = this;\n\n      if (parseInt(item) === item) {\n        // item 是索引号\n        return _this.$collapse.children('.' + _this.class_item).eq(item);\n      }\n\n      return $(item).eq(0);\n    };\n    /**\n     * 动画结束回调\n     * @param inst\n     * @param $content\n     * @param $item\n     */\n\n\n    var transitionEnd = function transitionEnd(inst, $content, $item) {\n      if (inst._isOpen($item)) {\n        $content.transition(0).height('auto').reflow().transition('');\n        componentEvent('opened', inst.ns, inst, $item[0]);\n      } else {\n        $content.height('');\n        componentEvent('closed', inst.ns, inst, $item[0]);\n      }\n    };\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n\n\n    Collapse.prototype.open = function (item) {\n      var _this = this;\n\n      var $item = _this._getItem(item);\n\n      if (_this._isOpen($item)) {\n        return;\n      } // 关闭其他项\n\n\n      if (_this.options.accordion) {\n        _this.$collapse.children('.' + _this.class_item_open).each(function () {\n          var $tmpItem = $(this);\n\n          if ($tmpItem !== $item) {\n            _this.close($tmpItem);\n          }\n        });\n      }\n\n      var $content = $item.children('.' + _this.class_body);\n      $content.height($content[0].scrollHeight).transitionEnd(function () {\n        transitionEnd(_this, $content, $item);\n      });\n      componentEvent('open', _this.ns, _this, $item[0]);\n      $item.addClass(_this.class_item_open);\n    };\n    /**\n     * 关闭指定项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n\n\n    Collapse.prototype.close = function (item) {\n      var _this = this;\n\n      var $item = _this._getItem(item);\n\n      if (!_this._isOpen($item)) {\n        return;\n      }\n\n      var $content = $item.children('.' + _this.class_body);\n      componentEvent('close', _this.ns, _this, $item[0]);\n      $item.removeClass(_this.class_item_open);\n      $content.transition(0).height($content[0].scrollHeight).reflow().transition('').height('').transitionEnd(function () {\n        transitionEnd(_this, $content, $item);\n      });\n    };\n    /**\n     * 切换指定项的状态\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器或 JQ 对象\n     */\n\n\n    Collapse.prototype.toggle = function (item) {\n      var _this = this;\n\n      var $item = _this._getItem(item);\n\n      if (_this._isOpen($item)) {\n        _this.close($item);\n      } else {\n        _this.open($item);\n      }\n    };\n    /**\n     * 打开所有项\n     */\n\n\n    Collapse.prototype.openAll = function () {\n      var _this = this;\n\n      _this.$collapse.children('.' + _this.class_item).each(function () {\n        var $tmpItem = $(this);\n\n        if (!_this._isOpen($tmpItem)) {\n          _this.open($tmpItem);\n        }\n      });\n    };\n    /**\n     * 关闭所有项\n     */\n\n\n    Collapse.prototype.closeAll = function () {\n      var _this = this;\n\n      _this.$collapse.children('.' + _this.class_item).each(function () {\n        var $tmpItem = $(this);\n\n        if (_this._isOpen($tmpItem)) {\n          _this.close($tmpItem);\n        }\n      });\n    };\n\n    return Collapse;\n  }();\n  /**\n   * =============================================================================\n   * ************   Collapse 折叠内容块插件   ************\n   * =============================================================================\n   */\n\n\n  mdui.Collapse = function () {\n    function Collapse(selector, opts) {\n      return new CollapsePrivate(selector, opts, 'collapse');\n    }\n\n    return Collapse;\n  }();\n  /**\n   * =============================================================================\n   * ************   Collapse 自定义属性   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    mdui.mutation('[mdui-collapse]', function () {\n      var $target = $(this);\n      var inst = $target.data('mdui.collapse');\n\n      if (!inst) {\n        var options = parseOptions($target.attr('mdui-collapse'));\n        inst = new mdui.Collapse($target, options);\n        $target.data('mdui.collapse', inst);\n      }\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Table 表格   ************\n   * =============================================================================\n   */\n\n  (function () {\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag\n     * @returns {string}\n     */\n    var checkboxHTML = function checkboxHTML(tag) {\n      return '<' + tag + ' class=\"mdui-table-cell-checkbox\">' + '<label class=\"mdui-checkbox\">' + '<input type=\"checkbox\"/>' + '<i class=\"mdui-checkbox-icon\"></i>' + '</label>' + '</' + tag + '>';\n    };\n    /**\n     * Table 表格\n     * @param selector\n     * @constructor\n     */\n\n\n    function Table(selector) {\n      var _this = this;\n\n      _this.$table = $(selector).eq(0);\n\n      if (!_this.$table.length) {\n        return;\n      }\n\n      _this.init();\n    }\n    /**\n     * 初始化\n     */\n\n\n    Table.prototype.init = function () {\n      var _this = this;\n\n      _this.$thRow = _this.$table.find('thead tr');\n      _this.$tdRows = _this.$table.find('tbody tr');\n      _this.$tdCheckboxs = $();\n      _this.selectable = _this.$table.hasClass('mdui-table-selectable');\n      _this.selectedRow = 0;\n\n      _this._updateThCheckbox();\n\n      _this._updateTdCheckbox();\n\n      _this._updateNumericCol();\n    };\n    /**\n     * 更新表格行的 checkbox\n     */\n\n\n    Table.prototype._updateTdCheckbox = function () {\n      var _this = this;\n\n      _this.$tdRows.each(function () {\n        var $tdRow = $(this); // 移除旧的 checkbox\n\n        $tdRow.find('.mdui-table-cell-checkbox').remove();\n\n        if (!_this.selectable) {\n          return;\n        } // 创建 DOM\n\n\n        var $checkbox = $(checkboxHTML('td')).prependTo($tdRow).find('input[type=\"checkbox\"]'); // 默认选中的行\n\n        if ($tdRow.hasClass('mdui-table-row-selected')) {\n          $checkbox[0].checked = true;\n          _this.selectedRow++;\n        } // 所有行都选中后，选中表头；否则，不选中表头\n\n\n        _this.$thCheckbox[0].checked = _this.selectedRow === _this.$tdRows.length; // 绑定事件\n\n        $checkbox.on('change', function () {\n          if ($checkbox[0].checked) {\n            $tdRow.addClass('mdui-table-row-selected');\n            _this.selectedRow++;\n          } else {\n            $tdRow.removeClass('mdui-table-row-selected');\n            _this.selectedRow--;\n          } // 所有行都选中后，选中表头；否则，不选中表头\n\n\n          _this.$thCheckbox[0].checked = _this.selectedRow === _this.$tdRows.length;\n        });\n        _this.$tdCheckboxs = _this.$tdCheckboxs.add($checkbox);\n      });\n    };\n    /**\n     * 更新表头的 checkbox\n     */\n\n\n    Table.prototype._updateThCheckbox = function () {\n      var _this = this; // 移除旧的 checkbox\n\n\n      _this.$thRow.find('.mdui-table-cell-checkbox').remove();\n\n      if (!_this.selectable) {\n        return;\n      }\n\n      _this.$thCheckbox = $(checkboxHTML('th')).prependTo(_this.$thRow).find('input[type=\"checkbox\"]').on('change', function () {\n        var isCheckedAll = _this.$thCheckbox[0].checked;\n        _this.selectedRow = isCheckedAll ? _this.$tdRows.length : 0;\n\n        _this.$tdCheckboxs.each(function (i, checkbox) {\n          checkbox.checked = isCheckedAll;\n        });\n\n        _this.$tdRows.each(function (i, row) {\n          $(row)[isCheckedAll ? 'addClass' : 'removeClass']('mdui-table-row-selected');\n        });\n      });\n    };\n    /**\n     * 更新数值列\n     */\n\n\n    Table.prototype._updateNumericCol = function () {\n      var _this = this;\n\n      var $th;\n      var $tdRow;\n\n      _this.$thRow.find('th').each(function (i, th) {\n        $th = $(th);\n\n        _this.$tdRows.each(function () {\n          $tdRow = $(this);\n          var method = $th.hasClass('mdui-table-col-numeric') ? 'addClass' : 'removeClass';\n          $tdRow.find('td').eq(i)[method]('mdui-table-col-numeric');\n        });\n      });\n    };\n    /**\n     * 初始化表格\n     */\n\n\n    mdui.mutation('.mdui-table', function () {\n      var $table = $(this);\n\n      if (!$table.data('mdui.table')) {\n        $table.data('mdui.table', new Table($table));\n      }\n    });\n    /**\n     * 更新表格\n     */\n\n    mdui.updateTables = function () {\n      $(arguments.length ? arguments[0] : '.mdui-table').each(function () {\n        var $table = $(this);\n        var inst = $table.data('mdui.table');\n\n        if (inst) {\n          inst.init();\n        } else {\n          $table.data('mdui.table', new Table($table));\n        }\n      });\n    };\n  })();\n  /**\n   * =============================================================================\n   * ************   涟漪   ************\n   * =============================================================================\n   *\n   * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n   * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n   *\n   * Inspired by https://github.com/fians/Waves\n   */\n\n\n  (function () {\n    var Ripple = {\n      /**\n       * 延时，避免手指滑动时也触发涟漪（单位：毫秒）\n       */\n      delay: 200,\n\n      /**\n       * 显示涟漪动画\n       * @param e\n       * @param $ripple\n       */\n      show: function show(e, $ripple) {\n        // 鼠标右键不产生涟漪\n        if (e.button === 2) {\n          return;\n        } // 点击位置坐标\n\n\n        var tmp;\n\n        if ('touches' in e && e.touches.length) {\n          tmp = e.touches[0];\n        } else {\n          tmp = e;\n        }\n\n        var touchStartX = tmp.pageX;\n        var touchStartY = tmp.pageY; // 涟漪位置\n\n        var offset = $ripple.offset();\n        var center = {\n          x: touchStartX - offset.left,\n          y: touchStartY - offset.top\n        };\n        var height = $ripple.innerHeight();\n        var width = $ripple.innerWidth();\n        var diameter = Math.max(Math.pow(Math.pow(height, 2) + Math.pow(width, 2), 0.5), 48); // 涟漪扩散动画\n\n        var translate = 'translate3d(' + (-center.x + width / 2) + 'px, ' + (-center.y + height / 2) + 'px, 0) ' + 'scale(1)'; // 涟漪的 DOM 结构\n\n        $('<div class=\"mdui-ripple-wave\" style=\"' + 'width: ' + diameter + 'px; ' + 'height: ' + diameter + 'px; ' + 'margin-top:-' + diameter / 2 + 'px; ' + 'margin-left:-' + diameter / 2 + 'px; ' + 'left:' + center.x + 'px; ' + 'top:' + center.y + 'px;\">' + '</div>') // 缓存动画效果\n        .data('translate', translate).prependTo($ripple).reflow().transform(translate);\n      },\n\n      /**\n       * 隐藏涟漪动画\n       */\n      hide: function hide(e, element) {\n        var $ripple = $(element || this);\n        $ripple.children('.mdui-ripple-wave').each(function () {\n          removeRipple($(this));\n        });\n        $ripple.off('touchmove touchend touchcancel mousemove mouseup mouseleave', Ripple.hide);\n      }\n    };\n    /**\n     * 隐藏并移除涟漪\n     * @param $wave\n     */\n\n    function removeRipple($wave) {\n      if (!$wave.length || $wave.data('isRemoved')) {\n        return;\n      }\n\n      $wave.data('isRemoved', true);\n      var removeTimeout = setTimeout(function () {\n        $wave.remove();\n      }, 400);\n      var translate = $wave.data('translate');\n      $wave.addClass('mdui-ripple-wave-fill').transform(translate.replace('scale(1)', 'scale(1.01)')).transitionEnd(function () {\n        clearTimeout(removeTimeout);\n        $wave.addClass('mdui-ripple-wave-out').transform(translate.replace('scale(1)', 'scale(1.01)'));\n        removeTimeout = setTimeout(function () {\n          $wave.remove();\n        }, 700);\n        setTimeout(function () {\n          $wave.transitionEnd(function () {\n            clearTimeout(removeTimeout);\n            $wave.remove();\n          });\n        }, 0);\n      });\n    }\n    /**\n     * 显示涟漪，并绑定 touchend 等事件\n     * @param e\n     */\n\n\n    function showRipple(e) {\n      if (!TouchHandler.isAllow(e)) {\n        return;\n      }\n\n      TouchHandler.register(e); // Chrome 59 点击滚动条时，会在 document 上触发事件\n\n      if (e.target === document) {\n        return;\n      }\n\n      var $ripple;\n      var $target = $(e.target); // 获取含 .mdui-ripple 类的元素\n\n      if ($target.hasClass('mdui-ripple')) {\n        $ripple = $target;\n      } else {\n        $ripple = $target.parents('.mdui-ripple').eq(0);\n      }\n\n      if ($ripple.length) {\n        // 禁用状态的元素上不产生涟漪效果\n        if ($ripple[0].disabled || $ripple.attr('disabled') !== null) {\n          return;\n        }\n\n        if (e.type === 'touchstart') {\n          var hidden = false; // toucstart 触发指定时间后开始涟漪动画\n\n          var timer = setTimeout(function () {\n            timer = null;\n            Ripple.show(e, $ripple);\n          }, Ripple.delay);\n\n          var hideRipple = function hideRipple(hideEvent) {\n            // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n            if (timer) {\n              clearTimeout(timer);\n              timer = null;\n              Ripple.show(e, $ripple);\n            }\n\n            if (!hidden) {\n              hidden = true;\n              Ripple.hide(hideEvent, $ripple);\n            }\n          }; // 手指移动后，移除涟漪动画\n\n\n          var touchMove = function touchMove(moveEvent) {\n            if (timer) {\n              clearTimeout(timer);\n              timer = null;\n            }\n\n            hideRipple(moveEvent);\n          };\n\n          $ripple.on('touchmove', touchMove).on('touchend touchcancel', hideRipple);\n        } else {\n          Ripple.show(e, $ripple);\n          $ripple.on('touchmove touchend touchcancel mousemove mouseup mouseleave', Ripple.hide);\n        }\n      }\n    } // 初始化绑定的事件\n\n\n    $document.on(TouchHandler.start, showRipple).on(TouchHandler.unlock, TouchHandler.register);\n  })();\n  /**\n   * =============================================================================\n   * ************   Text Field 文本框   ************\n   * =============================================================================\n   */\n\n\n  (function () {\n    var getProp = function getProp(obj, prop) {\n      return _typeof(obj) === 'object' && obj !== null && obj[prop] !== undefined && obj[prop] ? obj[prop] : false;\n    };\n    /**\n     * 输入框事件\n     * @param e\n     */\n\n\n    var inputEvent = function inputEvent(e) {\n      var input = e.target;\n      var $input = $(input);\n      var event = e.type;\n      var value = $input.val(); // reInit 为 true 时，需要重新初始化文本框\n\n      var reInit = getProp(e.detail, 'reInit'); // domLoadedEvent 为 true 时，为 DOM 加载完毕后自动触发的事件\n\n      var domLoadedEvent = getProp(e.detail, 'domLoadedEvent'); // 文本框类型\n\n      var type = $input.attr('type') || '';\n\n      if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(type) >= 0) {\n        return;\n      }\n\n      var $textField = $input.parent('.mdui-textfield'); // 输入框是否聚焦\n\n      if (event === 'focus') {\n        $textField.addClass('mdui-textfield-focus');\n      }\n\n      if (event === 'blur') {\n        $textField.removeClass('mdui-textfield-focus');\n      } // 输入框是否为空\n\n\n      if (event === 'blur' || event === 'input') {\n        $textField[value && value !== '' ? 'addClass' : 'removeClass']('mdui-textfield-not-empty');\n      } // 输入框是否禁用\n\n\n      $textField[input.disabled ? 'addClass' : 'removeClass']('mdui-textfield-disabled'); // 表单验证\n\n      if ((event === 'input' || event === 'blur') && !domLoadedEvent) {\n        if (input.validity) {\n          var method = input.validity.valid ? 'removeClass' : 'addClass';\n          $textField[method]('mdui-textfield-invalid-html5');\n        }\n      } // textarea 高度自动调整\n\n\n      if (e.target.nodeName.toLowerCase() === 'textarea') {\n        // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n        //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n        var inputValue = $input.val();\n        var hasExtraSpace = false;\n\n        if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n          $input.val(' ' + inputValue);\n          hasExtraSpace = true;\n        } // 设置 textarea 高度\n\n\n        $input.height('');\n        var height = $input.height();\n        var scrollHeight = input.scrollHeight;\n\n        if (scrollHeight > height) {\n          $input.height(scrollHeight);\n        } // 计算完，还原 textarea 的值\n\n\n        if (hasExtraSpace) {\n          $input.val(inputValue);\n        }\n      } // 实时字数统计\n\n\n      if (reInit) {\n        $textField.find('.mdui-textfield-counter').remove();\n      }\n\n      var maxlength = $input.attr('maxlength');\n\n      if (maxlength) {\n        if (reInit || domLoadedEvent) {\n          $('<div class=\"mdui-textfield-counter\">' + '<span class=\"mdui-textfield-counter-inputed\"></span> / ' + maxlength + '</div>').appendTo($textField);\n        }\n\n        $textField.find('.mdui-textfield-counter-inputed').text(value.length.toString());\n      } // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n\n\n      if ($textField.find('.mdui-textfield-helper').length || $textField.find('.mdui-textfield-error').length || maxlength) {\n        $textField.addClass('mdui-textfield-has-bottom');\n      }\n    }; // 绑定事件\n\n\n    $document.on('input focus blur', '.mdui-textfield-input', {\n      useCapture: true\n    }, inputEvent); // 可展开文本框展开\n\n    $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n      $(this) // 展开文本框\n      .parents('.mdui-textfield').addClass('mdui-textfield-expanded') // 聚焦到输入框\n      .find('.mdui-textfield-input')[0].focus();\n    }); // 可展开文本框关闭\n\n    $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n      $(this) // 关闭文本框\n      .parents('.mdui-textfield').removeClass('mdui-textfield-expanded') // 清空输入框\n      .find('.mdui-textfield-input').val('');\n    });\n    /**\n     * 通过 JS 更新了表单内容，需要重新进行表单处理\n     * @param- 如果传入了 .mdui-textfield 所在的 DOM 元素，则更新该文本框；否则，更新所有文本框\n     */\n\n    mdui.updateTextFields = function () {\n      $(arguments.length ? arguments[0] : '.mdui-textfield').each(function () {\n        $(this).find('.mdui-textfield-input').trigger('input', {\n          reInit: true\n        });\n      });\n    };\n  })();\n\n  $(function () {\n    /**\n     * 初始化文本框\n     */\n    mdui.mutation('.mdui-textfield', function () {\n      $(this).find('.mdui-textfield-input').trigger('input', {\n        domLoadedEvent: true\n      });\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Slider 滑块   ************\n   * =============================================================================\n   */\n\n  (function () {\n    /**\n     * 滑块的值变更后修改滑块样式\n     * @param $slider\n     */\n    var updateValueStyle = function updateValueStyle($slider) {\n      var data = $slider.data();\n      var $track = data.$track;\n      var $fill = data.$fill;\n      var $thumb = data.$thumb;\n      var $input = data.$input;\n      var min = data.min;\n      var max = data.max;\n      var isDisabled = data.disabled;\n      var isDiscrete = data.discrete;\n      var $thumbText = data.$thumbText;\n      var value = $input.val();\n      var percent = (value - min) / (max - min) * 100;\n      $fill.width(percent + '%');\n      $track.width(100 - percent + '%');\n\n      if (isDisabled) {\n        $fill.css('padding-right', '6px');\n        $track.css('padding-left', '6px');\n      }\n\n      $thumb.css('left', percent + '%');\n\n      if (isDiscrete) {\n        $thumbText.text(value);\n      }\n\n      $slider[parseFloat(percent) === 0 ? 'addClass' : 'removeClass']('mdui-slider-zero');\n    };\n    /**\n     * 重新初始化\n     * @param $slider\n     */\n\n\n    var reInit = function reInit($slider) {\n      var $track = $('<div class=\"mdui-slider-track\"></div>');\n      var $fill = $('<div class=\"mdui-slider-fill\"></div>');\n      var $thumb = $('<div class=\"mdui-slider-thumb\"></div>');\n      var $input = $slider.find('input[type=\"range\"]'); // 禁用状态\n\n      var isDisabled = $input[0].disabled;\n      $slider[isDisabled ? 'addClass' : 'removeClass']('mdui-slider-disabled'); // 重新填充 HTML\n\n      $slider.find('.mdui-slider-track').remove();\n      $slider.find('.mdui-slider-fill').remove();\n      $slider.find('.mdui-slider-thumb').remove();\n      $slider.append($track).append($fill).append($thumb); // 间续型滑块\n\n      var isDiscrete = $slider.hasClass('mdui-slider-discrete');\n      var $thumbText;\n\n      if (isDiscrete) {\n        $thumbText = $('<span></span>');\n        $thumb.empty().append($thumbText);\n      }\n\n      $slider.data({\n        $track: $track,\n        $fill: $fill,\n        $thumb: $thumb,\n        $input: $input,\n        min: $input.attr('min'),\n        // 滑块最小值\n        max: $input.attr('max'),\n        // 滑块最大值\n        disabled: isDisabled,\n        // 是否禁用状态\n        discrete: isDiscrete,\n        // 是否是间续型滑块\n        $thumbText: $thumbText // 间续型滑块的数值\n\n      }); // 设置默认值\n\n      updateValueStyle($slider);\n    };\n\n    var rangeSelector = '.mdui-slider input[type=\"range\"]';\n    $document // 滑动滑块事件\n    .on('input change', rangeSelector, function () {\n      var $slider = $(this).parent();\n      updateValueStyle($slider);\n    }) // 开始触摸滑块事件\n    .on(TouchHandler.start, rangeSelector, function (e) {\n      if (!TouchHandler.isAllow(e)) {\n        return;\n      }\n\n      TouchHandler.register(e);\n\n      if (!this.disabled) {\n        var $slider = $(this).parent();\n        $slider.addClass('mdui-slider-focus');\n      }\n    }) // 结束触摸滑块事件\n    .on(TouchHandler.end, rangeSelector, function (e) {\n      if (!TouchHandler.isAllow(e)) {\n        return;\n      }\n\n      if (!this.disabled) {\n        var $slider = $(this).parent();\n        $slider.removeClass('mdui-slider-focus');\n      }\n    }).on(TouchHandler.unlock, rangeSelector, TouchHandler.register);\n    /**\n     * 重新初始化滑块（强制重新初始化）\n     */\n\n    mdui.updateSliders = function () {\n      $(arguments.length ? arguments[0] : '.mdui-slider').each(function () {\n        reInit($(this));\n      });\n    };\n\n    $(function () {\n      /**\n       * 页面加载完后自动初始化（未初始化时，可以调用该方法初始化）\n       */\n      mdui.mutation('.mdui-slider', function () {\n        reInit($(this));\n      });\n    });\n  })();\n  /**\n   * =============================================================================\n   * ************   Fab 浮动操作按钮   ************\n   * =============================================================================\n   */\n\n\n  mdui.Fab = function () {\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      trigger: 'hover' // 触发方式 ['hover', 'click']\n\n    };\n    /**\n     * 浮动操作按钮实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素或 JQ 对象\n     * @param opts\n     * @constructor\n     */\n\n    function Fab(selector, opts) {\n      var _this = this;\n\n      _this.$fab = $(selector).eq(0);\n\n      if (!_this.$fab.length) {\n        return;\n      } // 已通过 data 属性实例化过，不再重复实例化\n\n\n      var oldInst = _this.$fab.data('mdui.fab');\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {});\n      _this.state = 'closed';\n      _this.$btn = _this.$fab.find('.mdui-fab');\n      _this.$dial = _this.$fab.find('.mdui-fab-dial');\n      _this.$dialBtns = _this.$dial.find('.mdui-fab');\n\n      if (_this.options.trigger === 'hover') {\n        _this.$btn.on('touchstart mouseenter', function () {\n          _this.open();\n        });\n\n        _this.$fab.on('mouseleave', function () {\n          _this.close();\n        });\n      }\n\n      if (_this.options.trigger === 'click') {\n        _this.$btn.on(TouchHandler.start, function () {\n          _this.open();\n        });\n      } // 触摸屏幕其他地方关闭快速拨号\n\n\n      $document.on(TouchHandler.start, function (e) {\n        if (!$(e.target).parents('.mdui-fab-wrapper').length) {\n          _this.close();\n        }\n      });\n    }\n    /**\n     * 打开菜单\n     */\n\n\n    Fab.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      } // 为菜单中的按钮添加不同的 transition-delay\n\n\n      _this.$dialBtns.each(function (index, btn) {\n        btn.style['transition-delay'] = btn.style['-webkit-transition-delay'] = 15 * (_this.$dialBtns.length - index) + 'ms';\n      });\n\n      _this.$dial.css('height', 'auto').addClass('mdui-fab-dial-show'); // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n\n\n      if (_this.$btn.find('.mdui-fab-opened').length) {\n        _this.$btn.addClass('mdui-fab-opened');\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'fab', _this, _this.$fab); // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n\n      _this.$dialBtns.eq(0).transitionEnd(function () {\n        if (_this.$btn.hasClass('mdui-fab-opened')) {\n          _this.state = 'opened';\n          componentEvent('opened', 'fab', _this, _this.$fab);\n        }\n      });\n    };\n    /**\n     * 关闭菜单\n     */\n\n\n    Fab.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      } // 为菜单中的按钮添加不同的 transition-delay\n\n\n      _this.$dialBtns.each(function (index, btn) {\n        btn.style['transition-delay'] = btn.style['-webkit-transition-delay'] = 15 * index + 'ms';\n      });\n\n      _this.$dial.removeClass('mdui-fab-dial-show');\n\n      _this.$btn.removeClass('mdui-fab-opened');\n\n      _this.state = 'closing';\n      componentEvent('close', 'fab', _this, _this.$fab); // 从上往下依次关闭，最后一个关闭后才表示动画完成\n\n      _this.$dialBtns.eq(-1).transitionEnd(function () {\n        if (!_this.$btn.hasClass('mdui-fab-opened')) {\n          _this.state = 'closed';\n          componentEvent('closed', 'fab', _this, _this.$fab);\n\n          _this.$dial.css('height', 0);\n        }\n      });\n    };\n    /**\n     * 切换菜单的打开状态\n     */\n\n\n    Fab.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n    /**\n     * 获取当前菜单状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n\n\n    Fab.prototype.getState = function () {\n      return this.state;\n    };\n    /**\n     * 以动画的形式显示浮动操作按钮\n     */\n\n\n    Fab.prototype.show = function () {\n      this.$fab.removeClass('mdui-fab-hide');\n    };\n    /**\n     * 以动画的形式隐藏浮动操作按钮\n     */\n\n\n    Fab.prototype.hide = function () {\n      this.$fab.addClass('mdui-fab-hide');\n    };\n\n    return Fab;\n  }();\n  /**\n   * =============================================================================\n   * ************   Fab DATA API   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n    $document.on('touchstart mousedown mouseover', '[mdui-fab]', function (e) {\n      var $this = $(this);\n      var inst = $this.data('mdui.fab');\n\n      if (!inst) {\n        var options = parseOptions($this.attr('mdui-fab'));\n        inst = new mdui.Fab($this, options);\n        $this.data('mdui.fab', inst);\n      }\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Select 下拉选择   ************\n   * =============================================================================\n   */\n\n  mdui.Select = function () {\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',\n      // 下拉框位置，auto、bottom、top\n      gutter: 16 // 菜单与窗口上下边框至少保持多少间距\n\n    };\n    /**\n     * 调整菜单位置\n     * @param _this Select 实例\n     */\n\n    var readjustMenu = function readjustMenu(_this) {\n      // 窗口高度\n      var windowHeight = $window.height(); // 配置参数\n\n      var gutter = _this.options.gutter;\n      var position = _this.options.position; // mdui-select 高度\n\n      var selectHeight = parseInt(_this.$select.height()); // 菜单项高度\n\n      var $menuItemFirst = _this.$items.eq(0);\n\n      var menuItemHeight = parseInt($menuItemFirst.height());\n      var menuItemMargin = parseInt($menuItemFirst.css('margin-top')); // 菜单高度\n\n      var menuWidth = parseFloat(_this.$select.width() + 0.01); // 必须比真实宽度多一点，不然会出现省略号\n\n      var menuHeight = menuItemHeight * _this.size + menuItemMargin * 2; // var menuRealHeight = menuItemHeight * _this.$items.length + menuItemMargin * 2;\n      // 菜单是否出现了滚动条\n      //var isMenuScrollable = menuRealHeight > menuHeight;\n      // select 在窗口中的位置\n\n      var selectTop = _this.$select[0].getBoundingClientRect().top;\n\n      var transformOriginY;\n      var menuMarginTop; // position 为 auto 时\n\n      if (position === 'auto') {\n        // 菜单高度不能超过窗口高度\n        var heightTemp = windowHeight - gutter * 2;\n\n        if (menuHeight > heightTemp) {\n          menuHeight = heightTemp;\n        } // 菜单的 margin-top\n\n\n        menuMarginTop = -(menuItemMargin + _this.selectedIndex * menuItemHeight + (menuItemHeight - selectHeight) / 2);\n        var menuMarginTopMax = -(menuItemMargin + (_this.size - 1) * menuItemHeight + (menuItemHeight - selectHeight) / 2);\n\n        if (menuMarginTop < menuMarginTopMax) {\n          menuMarginTop = menuMarginTopMax;\n        } // 菜单不能超出窗口\n\n\n        var menuTop = selectTop + menuMarginTop;\n\n        if (menuTop < gutter) {\n          // 不能超出窗口上方\n          menuMarginTop = -(selectTop - gutter);\n        } else if (menuTop + menuHeight + gutter > windowHeight) {\n          // 不能超出窗口下方\n          menuMarginTop = -(selectTop + menuHeight + gutter - windowHeight);\n        } // transform 的 Y 轴坐标\n\n\n        transformOriginY = _this.selectedIndex * menuItemHeight + menuItemHeight / 2 + menuItemMargin + 'px';\n      } else if (position === 'bottom') {\n        menuMarginTop = selectHeight;\n        transformOriginY = '0px';\n      } else if (position === 'top') {\n        menuMarginTop = -menuHeight - 1;\n        transformOriginY = '100%';\n      } // 设置样式\n\n\n      _this.$select.width(menuWidth);\n\n      _this.$menu.width(menuWidth).height(menuHeight).css({\n        'margin-top': menuMarginTop + 'px',\n        'transform-origin': 'center ' + transformOriginY + ' 0'\n      });\n    };\n    /**\n     * 下拉选择\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n\n\n    function Select(selector, opts) {\n      var _this = this;\n\n      var $selectNative = _this.$selectNative = $(selector).eq(0);\n\n      if (!$selectNative.length) {\n        return;\n      } // 已通过自定义属性实例化过，不再重复实例化\n\n\n      var oldInst = $selectNative.data('mdui.select');\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      $selectNative.hide();\n      _this.options = $.extend({}, DEFAULT, opts || {}); // 为当前 select 生成唯一 ID\n\n      _this.uniqueID = $.guid();\n      _this.state = 'closed'; // 生成 select\n\n      _this.handleUpdate(); // 点击 select 外面区域关闭\n\n\n      $document.on('click touchstart', function (e) {\n        var $target = $(e.target);\n\n        if ((_this.state === 'opening' || _this.state === 'opened') && !$target.is(_this.$select) && !$.contains(_this.$select[0], $target[0])) {\n          _this.close();\n        }\n      });\n    }\n    /**\n     * 对原生 select 组件进行了修改后，需要调用该方法\n     */\n\n\n    Select.prototype.handleUpdate = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      }\n\n      var $selectNative = _this.$selectNative; // 当前的值和文本\n\n      _this.value = $selectNative.val();\n      _this.text = ''; // 生成 HTML\n      // 菜单项\n\n      _this.$items = $();\n      $selectNative.find('option').each(function (index, option) {\n        var data = {\n          value: option.value,\n          text: option.textContent,\n          disabled: option.disabled,\n          selected: _this.value === option.value,\n          index: index\n        };\n\n        if (_this.value === data.value) {\n          _this.text = data.text;\n          _this.selectedIndex = index;\n        }\n\n        _this.$items = _this.$items.add($('<div class=\"mdui-select-menu-item mdui-ripple\"' + (data.disabled ? ' disabled' : '') + (data.selected ? ' selected' : '') + '>' + data.text + '</div>').data(data));\n      }); // selected\n\n      _this.$selected = $('<span class=\"mdui-select-selected\">' + _this.text + '</span>'); // select\n\n      _this.$select = $('<div class=\"mdui-select mdui-select-position-' + _this.options.position + '\" ' + 'style=\"' + _this.$selectNative.attr('style') + '\" ' + 'id=\"' + _this.uniqueID + '\"></div>').show().append(_this.$selected); // menu\n\n      _this.$menu = $('<div class=\"mdui-select-menu\"></div>').appendTo(_this.$select).append(_this.$items);\n      $('#' + _this.uniqueID).remove();\n      $selectNative.after(_this.$select); // 根据 select 的 size 属性设置高度，默认为 6\n\n      _this.size = _this.$selectNative.attr('size');\n\n      if (!_this.size) {\n        _this.size = _this.$items.length;\n\n        if (_this.size > 8) {\n          _this.size = 8;\n        }\n      }\n\n      if (_this.size < 2) {\n        _this.size = 2;\n      } // 点击选项时关闭下拉菜单\n\n\n      _this.$items.on('click', function () {\n        if (_this.state === 'closing') {\n          return;\n        }\n\n        var $item = $(this);\n\n        if ($item.data('disabled')) {\n          return;\n        }\n\n        var itemData = $item.data();\n\n        _this.$selected.text(itemData.text);\n\n        $selectNative.val(itemData.value);\n\n        _this.$items.removeAttr('selected');\n\n        $item.attr('selected', '');\n        _this.selectedIndex = itemData.index;\n        _this.value = itemData.value;\n        _this.text = itemData.text;\n        $selectNative.trigger('change');\n\n        _this.close();\n      }); // 点击 select 时打开下拉菜单\n\n\n      _this.$select.on('click', function (e) {\n        var $target = $(e.target); // 在菜单上点击时不打开\n\n        if ($target.is('.mdui-select-menu') || $target.is('.mdui-select-menu-item')) {\n          return;\n        }\n\n        _this.toggle();\n      });\n    };\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n\n\n    var transitionEnd = function transitionEnd(inst) {\n      inst.$select.removeClass('mdui-select-closing');\n\n      if (inst.state === 'opening') {\n        inst.state = 'opened';\n        componentEvent('opened', 'select', inst, inst.$selectNative);\n        inst.$menu.css('overflow-y', 'auto');\n      }\n\n      if (inst.state === 'closing') {\n        inst.state = 'closed';\n        componentEvent('closed', 'select', inst, inst.$selectNative); // 恢复样式\n\n        inst.$select.width('');\n        inst.$menu.css({\n          'margin-top': '',\n          height: '',\n          width: ''\n        });\n      }\n    };\n    /**\n     * 打开 Select\n     */\n\n\n    Select.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'select', _this, _this.$selectNative);\n      readjustMenu(_this);\n\n      _this.$select.addClass('mdui-select-open');\n\n      _this.$menu.transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n    /**\n     * 关闭 Select\n     */\n\n\n    Select.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'select', _this, _this.$selectNative);\n\n      _this.$menu.css('overflow-y', '');\n\n      _this.$select.removeClass('mdui-select-open').addClass('mdui-select-closing');\n\n      _this.$menu.transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n    /**\n     * 切换 Select 显示状态\n     */\n\n\n    Select.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    return Select;\n  }();\n  /**\n   * =============================================================================\n   * ************   Select 下拉选择   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    mdui.mutation('[mdui-select]', function () {\n      var $this = $(this);\n      var inst = $this.data('mdui.select');\n\n      if (!inst) {\n        inst = new mdui.Select($this, parseOptions($this.attr('mdui-select')));\n        $this.data('mdui.select', inst);\n      }\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Appbar   ************\n   * =============================================================================\n   * 滚动时自动隐藏应用栏\n   * mdui-appbar-scroll-hide\n   * mdui-appbar-scroll-toolbar-hide\n   */\n\n  $(function () {\n    // 滚动时隐藏应用栏\n    mdui.mutation('.mdui-appbar-scroll-hide', function () {\n      var $this = $(this);\n      $this.data('mdui.headroom', new mdui.Headroom($this));\n    }); // 滚动时只隐藏应用栏中的工具栏\n\n    mdui.mutation('.mdui-appbar-scroll-toolbar-hide', function () {\n      var $this = $(this);\n      var inst = new mdui.Headroom($this, {\n        pinnedClass: 'mdui-headroom-pinned-toolbar',\n        unpinnedClass: 'mdui-headroom-unpinned-toolbar'\n      });\n      $this.data('mdui.headroom', inst);\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Tab   ************\n   * =============================================================================\n   */\n\n  mdui.Tab = function () {\n    var DEFAULT = {\n      trigger: 'click',\n      // 触发方式 click: 鼠标点击切换 hover: 鼠标悬浮切换\n      //animation: false,       // 切换时是否显示动画\n      loop: false // 为true时，在最后一个选项卡时调用 next() 方法会回到第一个选项卡\n\n    }; // 元素是否已禁用\n\n    var isDisabled = function isDisabled($ele) {\n      return $ele[0].disabled || $ele.attr('disabled') !== null;\n    };\n    /**\n     * 选项卡\n     * @param selector\n     * @param opts\n     * @returns {*}\n     * @constructor\n     */\n\n\n    function Tab(selector, opts) {\n      var _this = this;\n\n      _this.$tab = $(selector).eq(0);\n\n      if (!_this.$tab.length) {\n        return;\n      } // 已通过自定义属性实例化过，不再重复实例化\n\n\n      var oldInst = _this.$tab.data('mdui.tab');\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {});\n      _this.$tabs = _this.$tab.children('a');\n      _this.$indicator = $('<div class=\"mdui-tab-indicator\"></div>').appendTo(_this.$tab);\n      _this.activeIndex = false; // 为 false 时表示没有激活的选项卡，或不存在选项卡\n      // 根据 url hash 获取默认激活的选项卡\n\n      var hash = location.hash;\n\n      if (hash) {\n        _this.$tabs.each(function (i, tab) {\n          if ($(tab).attr('href') === hash) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      } // 含 mdui-tab-active 的元素默认激活\n\n\n      if (_this.activeIndex === false) {\n        _this.$tabs.each(function (i, tab) {\n          if ($(tab).hasClass('mdui-tab-active')) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      } // 存在选项卡时，默认激活第一个选项卡\n\n\n      if (_this.$tabs.length && _this.activeIndex === false) {\n        _this.activeIndex = 0;\n      } // 设置激活状态选项卡\n\n\n      _this._setActive(); // 监听窗口大小变化事件，调整指示器位置\n\n\n      $window.on('resize', $.throttle(function () {\n        _this._setIndicatorPosition();\n      }, 100)); // 监听点击选项卡事件\n\n      _this.$tabs.each(function (i, tab) {\n        _this._bindTabEvent(tab);\n      });\n    }\n    /**\n     * 绑定在 Tab 上点击或悬浮的事件\n     * @private\n     */\n\n\n    Tab.prototype._bindTabEvent = function (tab) {\n      var _this = this;\n\n      var $tab = $(tab); // 点击或鼠标移入触发的事件\n\n      var clickEvent = function clickEvent(e) {\n        // 禁用状态的选项无法选中\n        if (isDisabled($tab)) {\n          e.preventDefault();\n          return;\n        }\n\n        _this.activeIndex = _this.$tabs.index(tab);\n\n        _this._setActive();\n      }; // 无论 trigger 是 click 还是 hover，都会响应 click 事件\n\n\n      $tab.on('click', clickEvent); // trigger 为 hover 时，额外响应 mouseenter 事件\n\n      if (_this.options.trigger === 'hover') {\n        $tab.on('mouseenter', clickEvent);\n      }\n\n      $tab.on('click', function (e) {\n        // 阻止链接的默认点击动作\n        if ($tab.attr('href').indexOf('#') === 0) {\n          e.preventDefault();\n        }\n      });\n    };\n    /**\n     * 设置激活状态的选项卡\n     * @private\n     */\n\n\n    Tab.prototype._setActive = function () {\n      var _this = this;\n\n      _this.$tabs.each(function (i, tab) {\n        var $tab = $(tab);\n        var targetId = $tab.attr('href'); // 设置选项卡激活状态\n\n        if (i === _this.activeIndex && !isDisabled($tab)) {\n          if (!$tab.hasClass('mdui-tab-active')) {\n            componentEvent('change', 'tab', _this, _this.$tab, {\n              index: _this.activeIndex,\n              id: targetId.substr(1)\n            });\n            componentEvent('show', 'tab', _this, $tab);\n            $tab.addClass('mdui-tab-active');\n          }\n\n          $(targetId).show();\n\n          _this._setIndicatorPosition();\n        } else {\n          $tab.removeClass('mdui-tab-active');\n          $(targetId).hide();\n        }\n      });\n    };\n    /**\n     * 设置选项卡指示器的位置\n     */\n\n\n    Tab.prototype._setIndicatorPosition = function () {\n      var _this = this;\n\n      var $activeTab;\n      var activeTabOffset; // 选项卡数量为 0 时，不显示指示器\n\n      if (_this.activeIndex === false) {\n        _this.$indicator.css({\n          left: 0,\n          width: 0\n        });\n\n        return;\n      }\n\n      $activeTab = _this.$tabs.eq(_this.activeIndex);\n\n      if (isDisabled($activeTab)) {\n        return;\n      }\n\n      activeTabOffset = $activeTab.offset();\n\n      _this.$indicator.css({\n        left: activeTabOffset.left + _this.$tab[0].scrollLeft - _this.$tab[0].getBoundingClientRect().left + 'px',\n        width: $activeTab.width() + 'px'\n      });\n    };\n    /**\n     * 切换到下一个选项卡\n     */\n\n\n    Tab.prototype.next = function () {\n      var _this = this;\n\n      if (_this.activeIndex === false) {\n        return;\n      }\n\n      if (_this.$tabs.length > _this.activeIndex + 1) {\n        _this.activeIndex++;\n      } else if (_this.options.loop) {\n        _this.activeIndex = 0;\n      }\n\n      _this._setActive();\n    };\n    /**\n     * 切换到上一个选项卡\n     */\n\n\n    Tab.prototype.prev = function () {\n      var _this = this;\n\n      if (_this.activeIndex === false) {\n        return;\n      }\n\n      if (_this.activeIndex > 0) {\n        _this.activeIndex--;\n      } else if (_this.options.loop) {\n        _this.activeIndex = _this.$tabs.length - 1;\n      }\n\n      _this._setActive();\n    };\n    /**\n     * 显示指定序号或指定id的选项卡\n     * @param index 从0开始的序号，或以#开头的id\n     */\n\n\n    Tab.prototype.show = function (index) {\n      var _this = this;\n\n      if (_this.activeIndex === false) {\n        return;\n      }\n\n      if (parseInt(index) === index) {\n        _this.activeIndex = index;\n      } else {\n        _this.$tabs.each(function (i, tab) {\n          if (tab.id === index) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      _this._setActive();\n    };\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     * 在添加或删除选项卡时，需要调用该方法\n     */\n\n\n    Tab.prototype.handleUpdate = function () {\n      var _this = this;\n\n      var $oldTabs = _this.$tabs; // 旧的 tabs JQ对象\n\n      var $newTabs = _this.$tab.children('a'); // 新的 tabs JQ对象\n\n\n      var oldTabsEle = $oldTabs.get(); // 旧 tabs 的元素数组\n\n      var newTabsEle = $newTabs.get(); // 新的 tabs 元素数组\n\n      if (!$newTabs.length) {\n        _this.activeIndex = false;\n        _this.$tabs = $newTabs;\n\n        _this._setIndicatorPosition();\n\n        return;\n      } // 重新遍历选项卡，找出新增的选项卡\n\n\n      $newTabs.each(function (i, tab) {\n        // 有新增的选项卡\n        if (oldTabsEle.indexOf(tab) < 0) {\n          _this._bindTabEvent(tab);\n\n          if (_this.activeIndex === false) {\n            _this.activeIndex = 0;\n          } else if (i <= _this.activeIndex) {\n            _this.activeIndex++;\n          }\n        }\n      }); // 找出被移除的选项卡\n\n      $oldTabs.each(function (i, tab) {\n        // 有被移除的选项卡\n        if (newTabsEle.indexOf(tab) < 0) {\n          if (i < _this.activeIndex) {\n            _this.activeIndex--;\n          } else if (i === _this.activeIndex) {\n            _this.activeIndex = 0;\n          }\n        }\n      });\n      _this.$tabs = $newTabs;\n\n      _this._setActive();\n    };\n\n    return Tab;\n  }();\n  /**\n   * =============================================================================\n   * ************   Tab 自定义属性 API   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    mdui.mutation('[mdui-tab]', function () {\n      var $this = $(this);\n      var inst = $this.data('mdui.tab');\n\n      if (!inst) {\n        inst = new mdui.Tab($this, parseOptions($this.attr('mdui-tab')));\n        $this.data('mdui.tab', inst);\n      }\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Drawer 抽屉栏   ************\n   * =============================================================================\n   *\n   * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n   * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n   */\n\n  mdui.Drawer = function () {\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      // 在桌面设备上是否显示遮罩层。手机和平板不受这个参数影响，始终会显示遮罩层\n      overlay: false,\n      // 是否开启手势\n      swipe: false\n    };\n\n    var isDesktop = function isDesktop() {\n      return $window.width() >= 1024;\n    };\n    /**\n     * 抽屉栏实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n\n\n    function Drawer(selector, opts) {\n      var _this = this;\n\n      _this.$drawer = $(selector).eq(0);\n\n      if (!_this.$drawer.length) {\n        return;\n      }\n\n      var oldInst = _this.$drawer.data('mdui.drawer');\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {});\n      _this.overlay = false; // 是否显示着遮罩层\n\n      _this.position = _this.$drawer.hasClass('mdui-drawer-right') ? 'right' : 'left';\n\n      if (_this.$drawer.hasClass('mdui-drawer-close')) {\n        _this.state = 'closed';\n      } else if (_this.$drawer.hasClass('mdui-drawer-open')) {\n        _this.state = 'opened';\n      } else if (isDesktop()) {\n        _this.state = 'opened';\n      } else {\n        _this.state = 'closed';\n      } // 浏览器窗口大小调整时\n\n\n      $window.on('resize', $.throttle(function () {\n        // 由手机平板切换到桌面时\n        if (isDesktop()) {\n          // 如果显示着遮罩，则隐藏遮罩\n          if (_this.overlay && !_this.options.overlay) {\n            $.hideOverlay();\n            _this.overlay = false;\n            $.unlockScreen();\n          } // 没有强制关闭，则状态为打开状态\n\n\n          if (!_this.$drawer.hasClass('mdui-drawer-close')) {\n            _this.state = 'opened';\n          }\n        } // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n        else {\n            if (!_this.overlay && _this.state === 'opened') {\n              // 抽屉栏处于强制打开状态，添加遮罩\n              if (_this.$drawer.hasClass('mdui-drawer-open')) {\n                $.showOverlay();\n                _this.overlay = true;\n                $.lockScreen();\n                $('.mdui-overlay').one('click', function () {\n                  _this.close();\n                });\n              } else {\n                _this.state = 'closed';\n              }\n            }\n          }\n      }, 100)); // 绑定关闭按钮事件\n\n      _this.$drawer.find('[mdui-drawer-close]').each(function () {\n        $(this).on('click', function () {\n          _this.close();\n        });\n      });\n\n      swipeSupport(_this);\n    }\n    /**\n     * 滑动手势支持\n     * @param _this\n     */\n\n\n    var swipeSupport = function swipeSupport(_this) {\n      // 抽屉栏滑动手势控制\n      var openNavEventHandler;\n      var touchStartX;\n      var touchStartY;\n      var swipeStartX;\n      var swiping = false;\n      var maybeSwiping = false;\n      var $body = $('body'); // 手势触发的范围\n\n      var swipeAreaWidth = 24;\n\n      function enableSwipeHandling() {\n        if (!openNavEventHandler) {\n          $body.on('touchstart', onBodyTouchStart);\n          openNavEventHandler = onBodyTouchStart;\n        }\n      }\n\n      function setPosition(translateX, closeTransform) {\n        var rtlTranslateMultiplier = _this.position === 'right' ? -1 : 1;\n        var transformCSS = 'translate(' + -1 * rtlTranslateMultiplier * translateX + 'px, 0) !important;';\n\n        _this.$drawer.css('cssText', 'transform:' + transformCSS + (closeTransform ? 'transition: initial !important;' : ''));\n      }\n\n      function cleanPosition() {\n        _this.$drawer.css({\n          transform: '',\n          transition: ''\n        });\n      }\n\n      function getMaxTranslateX() {\n        return _this.$drawer.width() + 10;\n      }\n\n      function getTranslateX(currentX) {\n        return Math.min(Math.max(swiping === 'closing' ? swipeStartX - currentX : getMaxTranslateX() + swipeStartX - currentX, 0), getMaxTranslateX());\n      }\n\n      function onBodyTouchStart(event) {\n        touchStartX = event.touches[0].pageX;\n\n        if (_this.position === 'right') {\n          touchStartX = $body.width() - touchStartX;\n        }\n\n        touchStartY = event.touches[0].pageY;\n\n        if (_this.state !== 'opened') {\n          if (touchStartX > swipeAreaWidth || openNavEventHandler !== onBodyTouchStart) {\n            return;\n          }\n        }\n\n        maybeSwiping = true;\n        $body.on({\n          touchmove: onBodyTouchMove,\n          touchend: onBodyTouchEnd,\n          touchcancel: onBodyTouchMove\n        });\n      }\n\n      function onBodyTouchMove(event) {\n        var touchX = event.touches[0].pageX;\n\n        if (_this.position === 'right') {\n          touchX = $body.width() - touchX;\n        }\n\n        var touchY = event.touches[0].pageY;\n\n        if (swiping) {\n          setPosition(getTranslateX(touchX), true);\n        } else if (maybeSwiping) {\n          var dXAbs = Math.abs(touchX - touchStartX);\n          var dYAbs = Math.abs(touchY - touchStartY);\n          var threshold = 8;\n\n          if (dXAbs > threshold && dYAbs <= threshold) {\n            swipeStartX = touchX;\n            swiping = _this.state === 'opened' ? 'closing' : 'opening';\n            $.lockScreen();\n            setPosition(getTranslateX(touchX), true);\n          } else if (dXAbs <= threshold && dYAbs > threshold) {\n            onBodyTouchEnd();\n          }\n        }\n      }\n\n      function onBodyTouchEnd(event) {\n        if (swiping) {\n          var touchX = event.changedTouches[0].pageX;\n\n          if (_this.position === 'right') {\n            touchX = $body.width() - touchX;\n          }\n\n          var translateRatio = getTranslateX(touchX) / getMaxTranslateX();\n          maybeSwiping = false;\n          var swipingState = swiping;\n          swiping = null;\n\n          if (swipingState === 'opening') {\n            if (translateRatio < 0.92) {\n              cleanPosition();\n\n              _this.open();\n            } else {\n              cleanPosition();\n            }\n          } else {\n            if (translateRatio > 0.08) {\n              cleanPosition();\n\n              _this.close();\n            } else {\n              cleanPosition();\n            }\n          }\n\n          $.unlockScreen();\n        } else {\n          maybeSwiping = false;\n        }\n\n        $body.off({\n          touchmove: onBodyTouchMove,\n          touchend: onBodyTouchEnd,\n          touchcancel: onBodyTouchMove\n        });\n      }\n\n      if (_this.options.swipe) {\n        enableSwipeHandling();\n      }\n    };\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n\n\n    var transitionEnd = function transitionEnd(inst) {\n      if (inst.$drawer.hasClass('mdui-drawer-open')) {\n        inst.state = 'opened';\n        componentEvent('opened', 'drawer', inst, inst.$drawer);\n      } else {\n        inst.state = 'closed';\n        componentEvent('closed', 'drawer', inst, inst.$drawer);\n      }\n    };\n    /**\n     * 打开抽屉栏\n     */\n\n\n    Drawer.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'drawer', _this, _this.$drawer);\n\n      if (!_this.options.overlay) {\n        $('body').addClass('mdui-drawer-body-' + _this.position);\n      }\n\n      _this.$drawer.removeClass('mdui-drawer-close').addClass('mdui-drawer-open').transitionEnd(function () {\n        transitionEnd(_this);\n      });\n\n      if (!isDesktop() || _this.options.overlay) {\n        _this.overlay = true;\n        $.showOverlay().one('click', function () {\n          _this.close();\n        });\n        $.lockScreen();\n      }\n    };\n    /**\n     * 关闭抽屉栏\n     */\n\n\n    Drawer.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'drawer', _this, _this.$drawer);\n\n      if (!_this.options.overlay) {\n        $('body').removeClass('mdui-drawer-body-' + _this.position);\n      }\n\n      _this.$drawer.addClass('mdui-drawer-close').removeClass('mdui-drawer-open').transitionEnd(function () {\n        transitionEnd(_this);\n      });\n\n      if (_this.overlay) {\n        $.hideOverlay();\n        _this.overlay = false;\n        $.unlockScreen();\n      }\n    };\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n\n\n    Drawer.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n    /**\n     * 获取抽屉栏状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n\n\n    Drawer.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Drawer;\n  }();\n  /**\n   * =============================================================================\n   * ************   Drawer 自定义属性 API   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    mdui.mutation('[mdui-drawer]', function () {\n      var $this = $(this);\n      var options = parseOptions($this.attr('mdui-drawer'));\n      var selector = options.target;\n      delete options.target;\n      var $drawer = $(selector).eq(0);\n      var inst = $drawer.data('mdui.drawer');\n\n      if (!inst) {\n        inst = new mdui.Drawer($drawer, options);\n        $drawer.data('mdui.drawer', inst);\n      }\n\n      $this.on('click', function () {\n        inst.toggle();\n      });\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Dialog 对话框   ************\n   * =============================================================================\n   */\n\n  mdui.Dialog = function () {\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      history: true,\n      // 监听 hashchange 事件\n      overlay: true,\n      // 打开对话框时是否显示遮罩\n      modal: false,\n      // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true,\n      // 按下 esc 关闭对话框\n      closeOnCancel: true,\n      // 按下取消按钮时关闭对话框\n      closeOnConfirm: true,\n      // 按下确认按钮时关闭对话框\n      destroyOnClosed: false // 关闭后销毁\n\n    };\n    /**\n     * 遮罩层元素\n     */\n\n    var $overlay;\n    /**\n     * 窗口是否已锁定\n     */\n\n    var isLockScreen;\n    /**\n     * 当前对话框实例\n     */\n\n    var currentInst;\n    /**\n     * 队列名\n     */\n\n    var queueName = '__md_dialog';\n    /**\n     * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n     */\n\n    var readjust = function readjust() {\n      if (!currentInst) {\n        return;\n      }\n\n      var $dialog = currentInst.$dialog;\n      var $dialogTitle = $dialog.children('.mdui-dialog-title');\n      var $dialogContent = $dialog.children('.mdui-dialog-content');\n      var $dialogActions = $dialog.children('.mdui-dialog-actions'); // 调整 dialog 的 top 和 height 值\n\n      $dialog.height('');\n      $dialogContent.height('');\n      var dialogHeight = $dialog.height();\n      $dialog.css({\n        top: ($window.height() - dialogHeight) / 2 + 'px',\n        height: dialogHeight + 'px'\n      }); // 调整 mdui-dialog-content 的高度\n\n      $dialogContent.height(dialogHeight - ($dialogTitle.height() || 0) - ($dialogActions.height() || 0));\n    };\n    /**\n     * hashchange 事件触发时关闭对话框\n     */\n\n\n    var hashchangeEvent = function hashchangeEvent() {\n      if (location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n        currentInst.close(true);\n      }\n    };\n    /**\n     * 点击遮罩层关闭对话框\n     * @param e\n     */\n\n\n    var overlayClick = function overlayClick(e) {\n      if ($(e.target).hasClass('mdui-overlay') && currentInst) {\n        currentInst.close();\n      }\n    };\n    /**\n     * 对话框实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n\n\n    function Dialog(selector, opts) {\n      var _this = this; // 对话框元素\n\n\n      _this.$dialog = $(selector).eq(0);\n\n      if (!_this.$dialog.length) {\n        return;\n      } // 已通过 data 属性实例化过，不再重复实例化\n\n\n      var oldInst = _this.$dialog.data('mdui.dialog');\n\n      if (oldInst) {\n        return oldInst;\n      } // 如果对话框元素没有在当前文档中，则需要添加\n\n\n      if (!$.contains(document.body, _this.$dialog[0])) {\n        _this.append = true;\n        $('body').append(_this.$dialog);\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {});\n      _this.state = 'closed'; // 绑定取消按钮事件\n\n      _this.$dialog.find('[mdui-dialog-cancel]').each(function () {\n        $(this).on('click', function () {\n          componentEvent('cancel', 'dialog', _this, _this.$dialog);\n\n          if (_this.options.closeOnCancel) {\n            _this.close();\n          }\n        });\n      }); // 绑定确认按钮事件\n\n\n      _this.$dialog.find('[mdui-dialog-confirm]').each(function () {\n        $(this).on('click', function () {\n          componentEvent('confirm', 'dialog', _this, _this.$dialog);\n\n          if (_this.options.closeOnConfirm) {\n            _this.close();\n          }\n        });\n      }); // 绑定关闭按钮事件\n\n\n      _this.$dialog.find('[mdui-dialog-close]').each(function () {\n        $(this).on('click', function () {\n          _this.close();\n        });\n      });\n    }\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n\n\n    var transitionEnd = function transitionEnd(inst) {\n      if (inst.$dialog.hasClass('mdui-dialog-open')) {\n        inst.state = 'opened';\n        componentEvent('opened', 'dialog', inst, inst.$dialog);\n      } else {\n        inst.state = 'closed';\n        componentEvent('closed', 'dialog', inst, inst.$dialog);\n        inst.$dialog.hide(); // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n\n        if (queue.queue(queueName).length === 0 && !currentInst && isLockScreen) {\n          $.unlockScreen();\n          isLockScreen = false;\n        }\n\n        $window.off('resize', $.throttle(function () {\n          readjust();\n        }, 100));\n\n        if (inst.options.destroyOnClosed) {\n          inst.destroy();\n        }\n      }\n    };\n    /**\n     * 打开指定对话框\n     * @private\n     */\n\n\n    Dialog.prototype._doOpen = function () {\n      var _this = this;\n\n      currentInst = _this;\n\n      if (!isLockScreen) {\n        $.lockScreen();\n        isLockScreen = true;\n      }\n\n      _this.$dialog.show();\n\n      readjust();\n      $window.on('resize', $.throttle(function () {\n        readjust();\n      }, 100)); // 打开消息框\n\n      _this.state = 'opening';\n      componentEvent('open', 'dialog', _this, _this.$dialog);\n\n      _this.$dialog.addClass('mdui-dialog-open').transitionEnd(function () {\n        transitionEnd(_this);\n      }); // 不存在遮罩层元素时，添加遮罩层\n\n\n      if (!$overlay) {\n        $overlay = $.showOverlay(5100);\n      }\n\n      $overlay // 点击遮罩层时是否关闭对话框\n      [_this.options.modal ? 'off' : 'on']('click', overlayClick) // 是否显示遮罩层，不显示时，把遮罩层背景透明\n      .css('opacity', _this.options.overlay ? '' : 0);\n\n      if (_this.options.history) {\n        // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n        // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n        var hash = location.hash.substring(1);\n\n        if (hash.indexOf('mdui-dialog') > -1) {\n          hash = hash.replace(/[&?]?mdui-dialog/g, '');\n        } // 后退按钮关闭对话框\n\n\n        if (hash) {\n          location.hash = hash + (hash.indexOf('?') > -1 ? '&' : '?') + 'mdui-dialog';\n        } else {\n          location.hash = 'mdui-dialog';\n        }\n\n        $window.on('hashchange', hashchangeEvent);\n      }\n    };\n    /**\n     * 打开对话框\n     */\n\n\n    Dialog.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      } // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n\n\n      if (currentInst && (currentInst.state === 'opening' || currentInst.state === 'opened') || queue.queue(queueName).length) {\n        queue.queue(queueName, function () {\n          _this._doOpen();\n        });\n        return;\n      }\n\n      _this._doOpen();\n    };\n    /**\n     * 关闭对话框\n     */\n\n\n    Dialog.prototype.close = function () {\n      var _this = this;\n\n      var _arguments = arguments; // setTimeout 的作用是：\n      // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n\n      setTimeout(function () {\n        if (_this.state === 'closing' || _this.state === 'closed') {\n          return;\n        }\n\n        currentInst = null;\n        _this.state = 'closing';\n        componentEvent('close', 'dialog', _this, _this.$dialog); // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n\n        if (queue.queue(queueName).length === 0 && $overlay) {\n          $.hideOverlay();\n          $overlay = null;\n        }\n\n        _this.$dialog.removeClass('mdui-dialog-open').transitionEnd(function () {\n          transitionEnd(_this);\n        });\n\n        if (_this.options.history && queue.queue(queueName).length === 0) {\n          // 是否需要后退历史纪录，默认为 false。\n          // 为 false 时是通过 js 关闭，需要后退一个历史记录\n          // 为 true 时是通过后退按钮关闭，不需要后退历史记录\n          if (!_arguments[0]) {\n            window.history.back();\n          }\n\n          $window.off('hashchange', hashchangeEvent);\n        } // 关闭旧对话框，打开新对话框。\n        // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n\n\n        setTimeout(function () {\n          queue.dequeue(queueName);\n        }, 100);\n      }, 0);\n    };\n    /**\n     * 切换对话框打开/关闭状态\n     */\n\n\n    Dialog.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n    /**\n     * 获取对话框状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n\n\n    Dialog.prototype.getState = function () {\n      return this.state;\n    };\n    /**\n     * 销毁对话框\n     */\n\n\n    Dialog.prototype.destroy = function () {\n      var _this = this;\n\n      if (_this.append) {\n        _this.$dialog.remove();\n      }\n\n      _this.$dialog.removeData('mdui.dialog');\n\n      if (queue.queue(queueName).length === 0 && !currentInst) {\n        if ($overlay) {\n          $.hideOverlay();\n          $overlay = null;\n        }\n\n        if (isLockScreen) {\n          $.unlockScreen();\n          isLockScreen = false;\n        }\n      }\n    };\n    /**\n     * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n     */\n\n\n    Dialog.prototype.handleUpdate = function () {\n      readjust();\n    }; // esc 按下时关闭对话框\n\n\n    $document.on('keydown', function (e) {\n      if (currentInst && currentInst.options.closeOnEsc && currentInst.state === 'opened' && e.keyCode === 27) {\n        currentInst.close();\n      }\n    });\n    return Dialog;\n  }();\n  /**\n   * =============================================================================\n   * ************   Dialog DATA API   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    $document.on('click', '[mdui-dialog]', function () {\n      var $this = $(this);\n      var options = parseOptions($this.attr('mdui-dialog'));\n      var selector = options.target;\n      delete options.target;\n      var $dialog = $(selector).eq(0);\n      var inst = $dialog.data('mdui.dialog');\n\n      if (!inst) {\n        inst = new mdui.Dialog($dialog, options);\n        $dialog.data('mdui.dialog', inst);\n      }\n\n      inst.open();\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   mdui.dialog(options)   ************\n   * =============================================================================\n   */\n\n  mdui.dialog = function (options) {\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      title: '',\n      // 标题\n      content: '',\n      // 文本\n      buttons: [],\n      // 按钮\n      stackedButtons: false,\n      // 垂直排列按钮\n      cssClass: '',\n      // 在 Dialog 上添加的 CSS 类\n      history: true,\n      // 监听 hashchange 事件\n      overlay: true,\n      // 是否显示遮罩\n      modal: false,\n      // 是否模态化对话框\n      closeOnEsc: true,\n      // 按下 esc 时关闭对话框\n      destroyOnClosed: true,\n      // 关闭后销毁\n      onOpen: function onOpen() {// 打开动画开始时的回调\n      },\n      onOpened: function onOpened() {// 打开动画结束后的回调\n      },\n      onClose: function onClose() {// 关闭动画开始时的回调\n      },\n      onClosed: function onClosed() {// 关闭动画结束时的回调\n      }\n    };\n    /**\n     * 按钮的默认参数\n     */\n\n    var DEFAULT_BUTTON = {\n      text: '',\n      // 按钮文本\n      bold: false,\n      // 按钮文本是否加粗\n      close: true,\n      // 点击按钮后关闭对话框\n      onClick: function onClick(inst) {// 点击按钮的回调\n      }\n    }; // 合并参数\n\n    options = $.extend({}, DEFAULT, options || {});\n    $.each(options.buttons, function (i, button) {\n      options.buttons[i] = $.extend({}, DEFAULT_BUTTON, button);\n    }); // 按钮的 HTML\n\n    var buttonsHTML = '';\n\n    if (options.buttons.length) {\n      buttonsHTML = '<div class=\"mdui-dialog-actions ' + (options.stackedButtons ? 'mdui-dialog-actions-stacked' : '') + '\">';\n      $.each(options.buttons, function (i, button) {\n        buttonsHTML += '<a href=\"javascript:void(0)\" ' + 'class=\"mdui-btn mdui-ripple mdui-text-color-primary ' + (button.bold ? 'mdui-btn-bold' : '') + '\">' + button.text + '</a>';\n      });\n      buttonsHTML += '</div>';\n    } // Dialog 的 HTML\n\n\n    var HTML = '<div class=\"mdui-dialog ' + options.cssClass + '\">' + (options.title ? '<div class=\"mdui-dialog-title\">' + options.title + '</div>' : '') + (options.content ? '<div class=\"mdui-dialog-content\">' + options.content + '</div>' : '') + buttonsHTML + '</div>'; // 实例化 Dialog\n\n    var inst = new mdui.Dialog(HTML, {\n      history: options.history,\n      overlay: options.overlay,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      destroyOnClosed: options.destroyOnClosed\n    }); // 绑定按钮事件\n\n    if (options.buttons.length) {\n      inst.$dialog.find('.mdui-dialog-actions .mdui-btn').each(function (i, button) {\n        $(button).on('click', function () {\n          if (typeof options.buttons[i].onClick === 'function') {\n            options.buttons[i].onClick(inst);\n          }\n\n          if (options.buttons[i].close) {\n            inst.close();\n          }\n        });\n      });\n    } // 绑定打开关闭事件\n\n\n    if (typeof options.onOpen === 'function') {\n      inst.$dialog.on('open.mdui.dialog', function () {\n        options.onOpen(inst);\n      }).on('opened.mdui.dialog', function () {\n        options.onOpened(inst);\n      }).on('close.mdui.dialog', function () {\n        options.onClose(inst);\n      }).on('closed.mdui.dialog', function () {\n        options.onClosed(inst);\n      });\n    }\n\n    inst.open();\n    return inst;\n  };\n  /**\n   * =============================================================================\n   * ************   mdui.alert(text, title, onConfirm, options)   ************\n   * ************   mdui.alert(text, onConfirm, options)   ************\n   * =============================================================================\n   */\n\n\n  mdui.alert = function (text, title, onConfirm, options) {\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      options = arguments[2];\n    }\n\n    if (onConfirm === undefined) {\n      onConfirm = function onConfirm() {};\n    }\n\n    if (options === undefined) {\n      options = {};\n    }\n    /**\n     * 默认参数\n     */\n\n\n    var DEFAULT = {\n      confirmText: 'ok',\n      // 按钮上的文本\n      history: true,\n      // 监听 hashchange 事件\n      modal: false,\n      // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true // 按下 esc 关闭对话框\n\n    };\n    options = $.extend({}, DEFAULT, options);\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [{\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: onConfirm\n      }],\n      cssClass: 'mdui-dialog-alert',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc\n    });\n  };\n  /**\n   * =============================================================================\n   * ************   mdui.confirm(text, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.confirm(text, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n\n  mdui.confirm = function (text, title, onConfirm, onCancel, options) {\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (onConfirm === undefined) {\n      onConfirm = function onConfirm() {};\n    }\n\n    if (onCancel === undefined) {\n      onCancel = function onCancel() {};\n    }\n\n    if (options === undefined) {\n      options = {};\n    }\n    /**\n     * 默认参数\n     */\n\n\n    var DEFAULT = {\n      confirmText: 'ok',\n      // 确认按钮的文本\n      cancelText: 'cancel',\n      // 取消按钮的文本\n      history: true,\n      // 监听 hashchange 事件\n      modal: false,\n      // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true // 按下 esc 关闭对话框\n\n    };\n    options = $.extend({}, DEFAULT, options);\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [{\n        text: options.cancelText,\n        bold: false,\n        close: true,\n        onClick: onCancel\n      }, {\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: onConfirm\n      }],\n      cssClass: 'mdui-dialog-confirm',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc\n    });\n  };\n  /**\n   * =============================================================================\n   * ************   mdui.prompt(label, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.prompt(label, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n\n  mdui.prompt = function (label, title, onConfirm, onCancel, options) {\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (onConfirm === undefined) {\n      onConfirm = function onConfirm() {};\n    }\n\n    if (onCancel === undefined) {\n      onCancel = function onCancel() {};\n    }\n\n    if (options === undefined) {\n      options = {};\n    }\n    /**\n     * 默认参数\n     */\n\n\n    var DEFAULT = {\n      confirmText: 'ok',\n      // 确认按钮的文本\n      cancelText: 'cancel',\n      // 取消按钮的文本\n      history: true,\n      // 监听 hashchange 事件\n      modal: false,\n      // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true,\n      // 按下 esc 关闭对话框\n      type: 'text',\n      // 输入框类型，text: 单行文本框 textarea: 多行文本框\n      maxlength: '',\n      // 最大输入字符数\n      defaultValue: '',\n      // 输入框中的默认文本\n      confirmOnEnter: false // 按下 enter 确认输入内容\n\n    };\n    options = $.extend({}, DEFAULT, options);\n    var content = '<div class=\"mdui-textfield\">' + (label ? '<label class=\"mdui-textfield-label\">' + label + '</label>' : '') + (options.type === 'text' ? '<input class=\"mdui-textfield-input\" type=\"text\" ' + 'value=\"' + options.defaultValue + '\" ' + (options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : '') + '/>' : '') + (options.type === 'textarea' ? '<textarea class=\"mdui-textfield-input\" ' + (options.maxlength ? 'maxlength=\"' + options.maxlength + '\"' : '') + '>' + options.defaultValue + '</textarea>' : '') + '</div>';\n    return mdui.dialog({\n      title: title,\n      content: content,\n      buttons: [{\n        text: options.cancelText,\n        bold: false,\n        close: true,\n        onClick: function onClick(inst) {\n          var value = inst.$dialog.find('.mdui-textfield-input').val();\n          onCancel(value, inst);\n        }\n      }, {\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: function onClick(inst) {\n          var value = inst.$dialog.find('.mdui-textfield-input').val();\n          onConfirm(value, inst);\n        }\n      }],\n      cssClass: 'mdui-dialog-prompt',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      onOpen: function onOpen(inst) {\n        // 初始化输入框\n        var $input = inst.$dialog.find('.mdui-textfield-input');\n        mdui.updateTextFields($input); // 聚焦到输入框\n\n        $input[0].focus(); // 捕捉文本框回车键，在单行文本框的情况下触发回调\n\n        if (options.type === 'text' && options.confirmOnEnter === true) {\n          $input.on('keydown', function (event) {\n            if (event.keyCode === 13) {\n              var value = inst.$dialog.find('.mdui-textfield-input').val();\n              onConfirm(value, inst);\n              inst.close();\n            }\n          });\n        } // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n\n\n        if (options.type === 'textarea') {\n          $input.on('input', function () {\n            inst.handleUpdate();\n          });\n        } // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n\n\n        if (options.maxlength) {\n          inst.handleUpdate();\n        }\n      }\n    });\n  };\n  /**\n   * =============================================================================\n   * ************   ToolTip 工具提示   ************\n   * =============================================================================\n   */\n\n\n  mdui.Tooltip = function () {\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',\n      // 提示所在位置\n      delay: 0,\n      // 延迟，单位毫秒\n      content: '' // 提示文本，允许包含 HTML\n\n    };\n    /**\n     * 是否是桌面设备\n     * @returns {boolean}\n     */\n\n    var isDesktop = function isDesktop() {\n      return $window.width() > 1024;\n    };\n    /**\n     * 设置 Tooltip 的位置\n     * @param inst\n     */\n\n\n    function setPosition(inst) {\n      var marginLeft;\n      var marginTop;\n      var position; // 触发的元素\n\n      var targetProps = inst.$target[0].getBoundingClientRect(); // 触发的元素和 Tooltip 之间的距离\n\n      var targetMargin = isDesktop() ? 14 : 24; // Tooltip 的宽度和高度\n\n      var tooltipWidth = inst.$tooltip[0].offsetWidth;\n      var tooltipHeight = inst.$tooltip[0].offsetHeight; // Tooltip 的方向\n\n      position = inst.options.position; // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n\n      if (['bottom', 'top', 'left', 'right'].indexOf(position) === -1) {\n        if (targetProps.top + targetProps.height + targetMargin + tooltipHeight + 2 < $window.height()) {\n          position = 'bottom';\n        } else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n          position = 'top';\n        } else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n          position = 'left';\n        } else if (targetProps.width + targetMargin + tooltipWidth + 2 < $window.width() - targetProps.left) {\n          position = 'right';\n        } else {\n          position = 'bottom';\n        }\n      } // 设置位置\n\n\n      switch (position) {\n        case 'bottom':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = targetProps.height / 2 + targetMargin;\n          inst.$tooltip.transformOrigin('top center');\n          break;\n\n        case 'top':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = -1 * (tooltipHeight + targetProps.height / 2 + targetMargin);\n          inst.$tooltip.transformOrigin('bottom center');\n          break;\n\n        case 'left':\n          marginLeft = -1 * (tooltipWidth + targetProps.width / 2 + targetMargin);\n          marginTop = -1 * (tooltipHeight / 2);\n          inst.$tooltip.transformOrigin('center right');\n          break;\n\n        case 'right':\n          marginLeft = targetProps.width / 2 + targetMargin;\n          marginTop = -1 * (tooltipHeight / 2);\n          inst.$tooltip.transformOrigin('center left');\n          break;\n      }\n\n      var targetOffset = inst.$target.offset();\n      inst.$tooltip.css({\n        top: targetOffset.top + targetProps.height / 2 + 'px',\n        left: targetOffset.left + targetProps.width / 2 + 'px',\n        'margin-left': marginLeft + 'px',\n        'margin-top': marginTop + 'px'\n      });\n    }\n    /**\n     * Tooltip 实例\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n\n\n    function Tooltip(selector, opts) {\n      var _this = this;\n\n      _this.$target = $(selector).eq(0);\n\n      if (!_this.$target.length) {\n        return;\n      } // 已通过 data 属性实例化过，不再重复实例化\n\n\n      var oldInst = _this.$target.data('mdui.tooltip');\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {});\n      _this.state = 'closed'; // 创建 Tooltip HTML\n\n      _this.$tooltip = $('<div class=\"mdui-tooltip\" id=\"' + $.guid() + '\">' + _this.options.content + '</div>').appendTo(document.body); // 绑定事件。元素处于 disabled 状态时无法触发鼠标事件，为了统一，把 touch 事件也禁用\n\n      _this.$target.on('touchstart mouseenter', function (e) {\n        if (this.disabled) {\n          return;\n        }\n\n        if (!TouchHandler.isAllow(e)) {\n          return;\n        }\n\n        TouchHandler.register(e);\n\n        _this.open();\n      }).on('touchend mouseleave', function (e) {\n        if (this.disabled) {\n          return;\n        }\n\n        if (!TouchHandler.isAllow(e)) {\n          return;\n        }\n\n        _this.close();\n      }).on(TouchHandler.unlock, function (e) {\n        if (this.disabled) {\n          return;\n        }\n\n        TouchHandler.register(e);\n      });\n    }\n    /**\n     * 动画结束回调\n     * @private\n     */\n\n\n    var transitionEnd = function transitionEnd(inst) {\n      if (inst.$tooltip.hasClass('mdui-tooltip-open')) {\n        inst.state = 'opened';\n        componentEvent('opened', 'tooltip', inst, inst.$target);\n      } else {\n        inst.state = 'closed';\n        componentEvent('closed', 'tooltip', inst, inst.$target);\n      }\n    };\n    /**\n     * 执行打开 Tooltip\n     * @private\n     */\n\n\n    Tooltip.prototype._doOpen = function () {\n      var _this = this;\n\n      _this.state = 'opening';\n      componentEvent('open', 'tooltip', _this, _this.$target);\n\n      _this.$tooltip.addClass('mdui-tooltip-open').transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n    /**\n     * 打开 Tooltip\n     * @param opts 允许每次打开时设置不同的参数\n     */\n\n\n    Tooltip.prototype.open = function (opts) {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      var oldOpts = $.extend({}, _this.options); // 合并 data 属性参数\n\n      $.extend(_this.options, parseOptions(_this.$target.attr('mdui-tooltip')));\n\n      if (opts) {\n        $.extend(_this.options, opts);\n      } // tooltip 的内容有更新\n\n\n      if (oldOpts.content !== _this.options.content) {\n        _this.$tooltip.html(_this.options.content);\n      }\n\n      setPosition(_this);\n\n      if (_this.options.delay) {\n        _this.timeoutId = setTimeout(function () {\n          _this._doOpen();\n        }, _this.options.delay);\n      } else {\n        _this.timeoutId = false;\n\n        _this._doOpen();\n      }\n    };\n    /**\n     * 关闭 Tooltip\n     */\n\n\n    Tooltip.prototype.close = function () {\n      var _this = this;\n\n      if (_this.timeoutId) {\n        clearTimeout(_this.timeoutId);\n        _this.timeoutId = false;\n      }\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'tooltip', _this, _this.$target);\n\n      _this.$tooltip.removeClass('mdui-tooltip-open').transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n    /**\n     * 切换 Tooltip 状态\n     */\n\n\n    Tooltip.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n    /**\n     * 获取 Tooltip 状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n\n\n    Tooltip.prototype.getState = function () {\n      return this.state;\n    };\n    /**\n     * 销毁 Tooltip\n     */\n\n    /*Tooltip.prototype.destroy = function () {\n      var _this = this;\n      clearTimeout(_this.timeoutId);\n      $.data(_this.target, 'mdui.tooltip', null);\n      $.remove(_this.tooltip);\n    };*/\n\n\n    return Tooltip;\n  }();\n  /**\n   * =============================================================================\n   * ************   Tooltip DATA API   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    $document.on('touchstart mouseover', '[mdui-tooltip]', function () {\n      var $this = $(this);\n      var inst = $this.data('mdui.tooltip');\n\n      if (!inst) {\n        var options = parseOptions($this.attr('mdui-tooltip'));\n        inst = new mdui.Tooltip($this, options);\n        $this.data('mdui.tooltip', inst);\n      }\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Snackbar   ************\n   * =============================================================================\n   */\n\n  (function () {\n    /**\n     * 当前打开着的 Snackbar\n     */\n    var currentInst;\n    /**\n     * 对列名\n     * @type {string}\n     */\n\n    var queueName = '__md_snackbar';\n    var DEFAULT = {\n      timeout: 4000,\n      // 在用户没有操作时多长时间自动隐藏\n      buttonText: '',\n      // 按钮的文本\n      buttonColor: '',\n      // 按钮的颜色，支持 blue #90caf9 rgba(...)\n      position: 'bottom',\n      // 位置 bottom、top、left-top、left-bottom、right-top、right-bottom\n      closeOnButtonClick: true,\n      // 点击按钮时关闭\n      closeOnOutsideClick: true,\n      // 触摸或点击屏幕其他地方时关闭\n      onClick: function onClick() {// 在 Snackbar 上点击的回调\n      },\n      onButtonClick: function onButtonClick() {// 点击按钮的回调\n      },\n      onOpen: function onOpen() {// 打开动画开始时的回调\n      },\n      onOpened: function onOpened() {// 打开动画结束时的回调\n      },\n      onClose: function onClose() {// 关闭动画开始时的回调\n      },\n      onClosed: function onClosed() {// 打开动画结束时的回调\n      }\n    };\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param e\n     */\n\n    var closeOnOutsideClick = function closeOnOutsideClick(e) {\n      var $target = $(e.target);\n\n      if (!$target.hasClass('mdui-snackbar') && !$target.parents('.mdui-snackbar').length) {\n        currentInst.close();\n      }\n    };\n    /**\n     * Snackbar 实例\n     * @param message\n     * @param opts\n     * @constructor\n     */\n\n\n    function Snackbar(message, opts) {\n      var _this = this;\n\n      _this.message = message;\n      _this.options = $.extend({}, DEFAULT, opts || {}); // message 参数必须\n\n      if (!_this.message) {\n        return;\n      }\n\n      _this.state = 'closed';\n      _this.timeoutId = false; // 按钮颜色\n\n      var buttonColorStyle = '';\n      var buttonColorClass = '';\n\n      if (_this.options.buttonColor.indexOf('#') === 0 || _this.options.buttonColor.indexOf('rgb') === 0) {\n        buttonColorStyle = 'style=\"color:' + _this.options.buttonColor + '\"';\n      } else if (_this.options.buttonColor !== '') {\n        buttonColorClass = 'mdui-text-color-' + _this.options.buttonColor;\n      } // 添加 HTML\n\n\n      _this.$snackbar = $('<div class=\"mdui-snackbar\">' + '<div class=\"mdui-snackbar-text\">' + _this.message + '</div>' + (_this.options.buttonText ? '<a href=\"javascript:void(0)\" ' + 'class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ' + buttonColorClass + '\" ' + buttonColorStyle + '>' + _this.options.buttonText + '</a>' : '') + '</div>').appendTo(document.body); // 设置位置\n\n      _this._setPosition('close');\n\n      _this.$snackbar.reflow().addClass('mdui-snackbar-' + _this.options.position);\n    }\n    /**\n     * 设置 Snackbar 的位置\n     * @param state\n     * @private\n     */\n\n\n    Snackbar.prototype._setPosition = function (state) {\n      var _this = this;\n\n      var snackbarHeight = _this.$snackbar[0].clientHeight;\n      var position = _this.options.position;\n      var translateX;\n      var translateY; // translateX\n\n      if (position === 'bottom' || position === 'top') {\n        translateX = '-50%';\n      } else {\n        translateX = '0';\n      } // translateY\n\n\n      if (state === 'open') {\n        translateY = '0';\n      } else {\n        if (position === 'bottom') {\n          translateY = snackbarHeight;\n        }\n\n        if (position === 'top') {\n          translateY = -snackbarHeight;\n        }\n\n        if (position === 'left-top' || position === 'right-top') {\n          translateY = -snackbarHeight - 24;\n        }\n\n        if (position === 'left-bottom' || position === 'right-bottom') {\n          translateY = snackbarHeight + 24;\n        }\n      }\n\n      _this.$snackbar.transform('translate(' + translateX + ',' + translateY + 'px)');\n    };\n    /**\n     * 打开 Snackbar\n     */\n\n\n    Snackbar.prototype.open = function () {\n      var _this = this;\n\n      if (!_this.message) {\n        return;\n      }\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      } // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n\n\n      if (currentInst) {\n        queue.queue(queueName, function () {\n          _this.open();\n        });\n        return;\n      }\n\n      currentInst = _this; // 开始打开\n\n      _this.state = 'opening';\n\n      _this.options.onOpen();\n\n      _this._setPosition('open');\n\n      _this.$snackbar.transitionEnd(function () {\n        if (_this.state !== 'opening') {\n          return;\n        }\n\n        _this.state = 'opened';\n\n        _this.options.onOpened(); // 有按钮时绑定事件\n\n\n        if (_this.options.buttonText) {\n          _this.$snackbar.find('.mdui-snackbar-action').on('click', function () {\n            _this.options.onButtonClick();\n\n            if (_this.options.closeOnButtonClick) {\n              _this.close();\n            }\n          });\n        } // 点击 snackbar 的事件\n\n\n        _this.$snackbar.on('click', function (e) {\n          if (!$(e.target).hasClass('mdui-snackbar-action')) {\n            _this.options.onClick();\n          }\n        }); // 点击 Snackbar 外面的区域关闭\n\n\n        if (_this.options.closeOnOutsideClick) {\n          $document.on(TouchHandler.start, closeOnOutsideClick);\n        } // 超时后自动关闭\n\n\n        if (_this.options.timeout) {\n          _this.timeoutId = setTimeout(function () {\n            _this.close();\n          }, _this.options.timeout);\n        }\n      });\n    };\n    /**\n     * 关闭 Snackbar\n     */\n\n\n    Snackbar.prototype.close = function () {\n      var _this = this;\n\n      if (!_this.message) {\n        return;\n      }\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      if (_this.timeoutId) {\n        clearTimeout(_this.timeoutId);\n      }\n\n      if (_this.options.closeOnOutsideClick) {\n        $document.off(TouchHandler.start, closeOnOutsideClick);\n      }\n\n      _this.state = 'closing';\n\n      _this.options.onClose();\n\n      _this._setPosition('close');\n\n      _this.$snackbar.transitionEnd(function () {\n        if (_this.state !== 'closing') {\n          return;\n        }\n\n        currentInst = null;\n        _this.state = 'closed';\n\n        _this.options.onClosed();\n\n        _this.$snackbar.remove();\n\n        queue.dequeue(queueName);\n      });\n    };\n    /**\n     * 打开 Snackbar\n     * @param message\n     * @param opts\n     */\n\n\n    mdui.snackbar = function (message, opts) {\n      if (typeof message !== 'string') {\n        opts = message;\n        message = opts.message;\n      }\n\n      var inst = new Snackbar(message, opts);\n      inst.open();\n      return inst;\n    };\n  })();\n  /**\n   * =============================================================================\n   * ************   Bottom navigation 底部导航栏   ************\n   * =============================================================================\n   */\n\n\n  (function () {\n    // 切换导航项\n    $document.on('click', '.mdui-bottom-nav>a', function () {\n      var $this = $(this);\n      var $bottomNav = $this.parent();\n      var isThis;\n      $bottomNav.children('a').each(function (i, item) {\n        isThis = $this.is(item);\n\n        if (isThis) {\n          componentEvent('change', 'bottomNav', null, $bottomNav, {\n            index: i\n          });\n        }\n\n        $(item)[isThis ? 'addClass' : 'removeClass']('mdui-bottom-nav-active');\n      });\n    }); // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n\n    mdui.mutation('.mdui-bottom-nav-scroll-hide', function () {\n      var $this = $(this);\n      var inst = new mdui.Headroom($this, {\n        pinnedClass: 'mdui-headroom-pinned-down',\n        unpinnedClass: 'mdui-headroom-unpinned-down'\n      });\n      $this.data('mdui.headroom', inst);\n    });\n  })();\n  /**\n   * =============================================================================\n   * ************   Spinner 圆形进度条   ************\n   * =============================================================================\n   */\n\n\n  (function () {\n    /**\n     * layer 的 HTML 结构\n     */\n    var layerHTML = function layerHTML() {\n      var i = arguments.length ? arguments[0] : false;\n      return '<div class=\"mdui-spinner-layer ' + (i ? 'mdui-spinner-layer-' + i : '') + '\">' + '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' + '<div class=\"mdui-spinner-circle\"></div>' + '</div>' + '<div class=\"mdui-spinner-gap-patch\">' + '<div class=\"mdui-spinner-circle\"></div>' + '</div>' + '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' + '<div class=\"mdui-spinner-circle\"></div>' + '</div>' + '</div>';\n    };\n    /**\n     * 填充 HTML\n     * @param spinner\n     */\n\n\n    var fillHTML = function fillHTML(spinner) {\n      var $spinner = $(spinner);\n      var layer;\n\n      if ($spinner.hasClass('mdui-spinner-colorful')) {\n        layer = layerHTML('1') + layerHTML('2') + layerHTML('3') + layerHTML('4');\n      } else {\n        layer = layerHTML();\n      }\n\n      $spinner.html(layer);\n    };\n    /**\n     * 页面加载完后自动填充 HTML 结构\n     */\n\n\n    mdui.mutation('.mdui-spinner', function () {\n      fillHTML(this);\n    });\n    /**\n     * 更新圆形进度条\n     */\n\n    mdui.updateSpinners = function () {\n      $(arguments.length ? arguments[0] : '.mdui-spinner').each(function () {\n        fillHTML(this);\n      });\n    };\n  })();\n  /**\n   * =============================================================================\n   * ************   Expansion panel 可扩展面板   ************\n   * =============================================================================\n   */\n\n\n  mdui.Panel = function () {\n    function Panel(selector, opts) {\n      return new CollapsePrivate(selector, opts, 'panel');\n    }\n\n    return Panel;\n  }();\n  /**\n   * =============================================================================\n   * ************   Expansion panel 自定义属性   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    mdui.mutation('[mdui-panel]', function () {\n      var $target = $(this);\n      var inst = $target.data('mdui.panel');\n\n      if (!inst) {\n        var options = parseOptions($target.attr('mdui-panel'));\n        inst = new mdui.Panel($target, options);\n        $target.data('mdui.panel', inst);\n      }\n    });\n  });\n  /**\n   * =============================================================================\n   * ************   Menu 菜单   ************\n   * =============================================================================\n   */\n\n  mdui.Menu = function () {\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',\n      // 菜单位置 top、bottom、center、auto\n      align: 'auto',\n      // 菜单和触发它的元素的对齐方式 left、right、center、auto\n      gutter: 16,\n      // 菜单距离窗口边缘的最小距离，单位 px\n      fixed: false,\n      // 是否使菜单固定在窗口，不随滚动条滚动\n      covered: 'auto',\n      // 菜单是否覆盖在触发它的元素上，true、false。auto 时简单菜单覆盖，级联菜单不覆盖\n      subMenuTrigger: 'hover',\n      // 子菜单的触发方式 hover、click\n      subMenuDelay: 200 // 子菜单的触发延时，仅在 submenuTrigger 为 hover 有效\n\n    };\n    /**\n     * 调整主菜单位置\n     * @param _this 实例\n     */\n\n    var readjust = function readjust(_this) {\n      var menuLeft;\n      var menuTop; // 菜单位置和方向\n\n      var position;\n      var align; // window 窗口的宽度和高度\n\n      var windowHeight = $window.height();\n      var windowWidth = $window.width(); // 配置参数\n\n      var gutter = _this.options.gutter;\n      var isCovered = _this.isCovered;\n      var isFixed = _this.options.fixed; // 动画方向参数\n\n      var transformOriginX;\n      var transformOriginY; // 菜单的原始宽度和高度\n\n      var menuWidth = _this.$menu.width();\n\n      var menuHeight = _this.$menu.height();\n\n      var $anchor = _this.$anchor; // 触发菜单的元素在窗口中的位置\n\n      var anchorTmp = $anchor[0].getBoundingClientRect();\n      var anchorTop = anchorTmp.top;\n      var anchorLeft = anchorTmp.left;\n      var anchorHeight = anchorTmp.height;\n      var anchorWidth = anchorTmp.width;\n      var anchorBottom = windowHeight - anchorTop - anchorHeight;\n      var anchorRight = windowWidth - anchorLeft - anchorWidth; // 触发元素相对其拥有定位属性的父元素的位置\n\n      var anchorOffsetTop = $anchor[0].offsetTop;\n      var anchorOffsetLeft = $anchor[0].offsetLeft; // ===============================\n      // ================= 自动判断菜单位置\n      // ===============================\n\n      if (_this.options.position === 'auto') {\n        // 判断下方是否放得下菜单\n        if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n          position = 'bottom';\n        } // 判断上方是否放得下菜单\n        else if (anchorTop + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n            position = 'top';\n          } // 上下都放不下，居中显示\n          else {\n              position = 'center';\n            }\n      } else {\n        position = _this.options.position;\n      } // ===============================\n      // ============== 自动判断菜单对齐方式\n      // ===============================\n\n\n      if (_this.options.align === 'auto') {\n        // 判断右侧是否放得下菜单\n        if (anchorRight + anchorWidth > menuWidth + gutter) {\n          align = 'left';\n        } // 判断左侧是否放得下菜单\n        else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n            align = 'right';\n          } // 左右都放不下，居中显示\n          else {\n              align = 'center';\n            }\n      } else {\n        align = _this.options.align;\n      } // ===============================\n      // ==================== 设置菜单位置\n      // ===============================\n\n\n      if (position === 'bottom') {\n        transformOriginY = '0';\n        menuTop = (isCovered ? 0 : anchorHeight) + (isFixed ? anchorTop : anchorOffsetTop);\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n        menuTop = (isCovered ? anchorHeight : 0) + (isFixed ? anchorTop - menuHeight : anchorOffsetTop - menuHeight);\n      } else {\n        transformOriginY = '50%'; // =====================在窗口中居中\n        // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n        // 级联菜单内部不允许出现滚动条\n\n        var menuHeightTemp = menuHeight; // 简单菜单比窗口高时，限制菜单高度\n\n        if (!_this.isCascade) {\n          if (menuHeight + gutter * 2 > windowHeight) {\n            menuHeightTemp = windowHeight - gutter * 2;\n\n            _this.$menu.height(menuHeightTemp);\n          }\n        }\n\n        menuTop = (windowHeight - menuHeightTemp) / 2 + (isFixed ? 0 : anchorOffsetTop - anchorTop);\n      }\n\n      _this.$menu.css('top', menuTop + 'px'); // ===============================\n      // ================= 设置菜单对齐方式\n      // ===============================\n\n\n      if (align === 'left') {\n        transformOriginX = '0';\n        menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n        menuLeft = isFixed ? anchorLeft + anchorWidth - menuWidth : anchorOffsetLeft + anchorWidth - menuWidth;\n      } else {\n        transformOriginX = '50%'; //=======================在窗口中居中\n        // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n\n        var menuWidthTemp = menuWidth; // 菜单比窗口宽，限制菜单宽度\n\n        if (menuWidth + gutter * 2 > windowWidth) {\n          menuWidthTemp = windowWidth - gutter * 2;\n\n          _this.$menu.width(menuWidthTemp);\n        }\n\n        menuLeft = (windowWidth - menuWidthTemp) / 2 + (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n      }\n\n      _this.$menu.css('left', menuLeft + 'px'); // 设置菜单动画方向\n\n\n      _this.$menu.transformOrigin(transformOriginX + ' ' + transformOriginY);\n    };\n    /**\n     * 调整子菜单的位置\n     * @param $submenu\n     */\n\n\n    var readjustSubmenu = function readjustSubmenu($submenu) {\n      var $item = $submenu.parent('.mdui-menu-item');\n      var submenuTop;\n      var submenuLeft; // 子菜单位置和方向\n\n      var position; // top、bottom\n\n      var align; // left、right\n      // window 窗口的宽度和高度\n\n      var windowHeight = $window.height();\n      var windowWidth = $window.width(); // 动画方向参数\n\n      var transformOriginX;\n      var transformOriginY; // 子菜单的原始宽度和高度\n\n      var submenuWidth = $submenu.width();\n      var submenuHeight = $submenu.height(); // 触发子菜单的菜单项的宽度高度\n\n      var itemTmp = $item[0].getBoundingClientRect();\n      var itemWidth = itemTmp.width;\n      var itemHeight = itemTmp.height;\n      var itemLeft = itemTmp.left;\n      var itemTop = itemTmp.top; // ===================================\n      // ===================== 判断菜单上下位置\n      // ===================================\n      // 判断下方是否放得下菜单\n\n      if (windowHeight - itemTop > submenuHeight) {\n        position = 'bottom';\n      } // 判断上方是否放得下菜单\n      else if (itemTop + itemHeight > submenuHeight) {\n          position = 'top';\n        } // 默认放在下方\n        else {\n            position = 'bottom';\n          } // ====================================\n      // ====================== 判断菜单左右位置\n      // ====================================\n      // 判断右侧是否放得下菜单\n\n\n      if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n        align = 'left';\n      } // 判断左侧是否放得下菜单\n      else if (itemLeft > submenuWidth) {\n          align = 'right';\n        } // 默认放在右侧\n        else {\n            align = 'left';\n          } // ===================================\n      // ======================== 设置菜单位置\n      // ===================================\n\n\n      if (position === 'bottom') {\n        transformOriginY = '0';\n        submenuTop = '0';\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n        submenuTop = -submenuHeight + itemHeight;\n      }\n\n      $submenu.css('top', submenuTop + 'px'); // ===================================\n      // ===================== 设置菜单对齐方式\n      // ===================================\n\n      if (align === 'left') {\n        transformOriginX = '0';\n        submenuLeft = itemWidth;\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n        submenuLeft = -submenuWidth;\n      }\n\n      $submenu.css('left', submenuLeft + 'px'); // 设置菜单动画方向\n\n      $submenu.transformOrigin(transformOriginX + ' ' + transformOriginY);\n    };\n    /**\n     * 打开子菜单\n     * @param $submenu\n     */\n\n\n    var openSubMenu = function openSubMenu($submenu) {\n      readjustSubmenu($submenu);\n      $submenu.addClass('mdui-menu-open').parent('.mdui-menu-item').addClass('mdui-menu-item-active');\n    };\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param $submenu\n     */\n\n\n    var closeSubMenu = function closeSubMenu($submenu) {\n      // 关闭子菜单\n      $submenu.removeClass('mdui-menu-open').addClass('mdui-menu-closing').transitionEnd(function () {\n        $submenu.removeClass('mdui-menu-closing');\n      }) // 移除激活状态的样式\n      .parent('.mdui-menu-item').removeClass('mdui-menu-item-active'); // 循环关闭嵌套的子菜单\n\n      $submenu.find('.mdui-menu').each(function () {\n        var $subSubmenu = $(this);\n        $subSubmenu.removeClass('mdui-menu-open').addClass('mdui-menu-closing').transitionEnd(function () {\n          $subSubmenu.removeClass('mdui-menu-closing');\n        }).parent('.mdui-menu-item').removeClass('mdui-menu-item-active');\n      });\n    };\n    /**\n     * 切换子菜单状态\n     * @param $submenu\n     */\n\n\n    var toggleSubMenu = function toggleSubMenu($submenu) {\n      if ($submenu.hasClass('mdui-menu-open')) {\n        closeSubMenu($submenu);\n      } else {\n        openSubMenu($submenu);\n      }\n    };\n    /**\n     * 绑定子菜单事件\n     * @param inst 实例\n     */\n\n\n    var bindSubMenuEvent = function bindSubMenuEvent(inst) {\n      // 点击打开子菜单\n      inst.$menu.on('click', '.mdui-menu-item', function (e) {\n        var $this = $(this);\n        var $target = $(e.target); // 禁用状态菜单不操作\n\n        if ($this.attr('disabled') !== null) {\n          return;\n        } // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n\n\n        if ($target.is('.mdui-menu') || $target.is('.mdui-divider')) {\n          return;\n        } // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n\n\n        if (!$target.parents('.mdui-menu-item').eq(0).is($this)) {\n          return;\n        } // 当前菜单的子菜单\n\n\n        var $submenu = $this.children('.mdui-menu'); // 先关闭除当前子菜单外的所有同级子菜单\n\n        $this.parent('.mdui-menu').children('.mdui-menu-item').each(function () {\n          var $tmpSubmenu = $(this).children('.mdui-menu');\n\n          if ($tmpSubmenu.length && (!$submenu.length || !$tmpSubmenu.is($submenu))) {\n            closeSubMenu($tmpSubmenu);\n          }\n        }); // 切换当前子菜单\n\n        if ($submenu.length) {\n          toggleSubMenu($submenu);\n        }\n      });\n\n      if (inst.options.subMenuTrigger === 'hover') {\n        // 临时存储 setTimeout 对象\n        var timeout;\n        var timeoutOpen;\n        var timeoutClose;\n        inst.$menu.on('mouseover mouseout', '.mdui-menu-item', function (e) {\n          var $this = $(this);\n          var eventType = e.type;\n          var $relatedTarget = $(e.relatedTarget); // 禁用状态的菜单不操作\n\n          if ($this.attr('disabled') !== null) {\n            return;\n          } // 用 mouseover 模拟 mouseenter\n\n\n          if (eventType === 'mouseover') {\n            if (!$this.is($relatedTarget) && $.contains($this[0], $relatedTarget[0])) {\n              return;\n            }\n          } // 用 mouseout 模拟 mouseleave\n          else if (eventType === 'mouseout') {\n              if ($this.is($relatedTarget) || $.contains($this[0], $relatedTarget[0])) {\n                return;\n              }\n            } // 当前菜单项下的子菜单，未必存在\n\n\n          var $submenu = $this.children('.mdui-menu'); // 鼠标移入菜单项时，显示菜单项下的子菜单\n\n          if (eventType === 'mouseover') {\n            if ($submenu.length) {\n              // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n              var tmpClose = $submenu.data('timeoutClose.mdui.menu');\n\n              if (tmpClose) {\n                clearTimeout(tmpClose);\n              } // 如果当前子菜单已经打开，不操作\n\n\n              if ($submenu.hasClass('mdui-menu-open')) {\n                return;\n              } // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n\n\n              clearTimeout(timeoutOpen); // 准备打开当前子菜单\n\n              timeout = timeoutOpen = setTimeout(function () {\n                openSubMenu($submenu);\n              }, inst.options.subMenuDelay);\n              $submenu.data('timeoutOpen.mdui.menu', timeout);\n            }\n          } // 鼠标移出菜单项时，关闭菜单项下的子菜单\n          else if (eventType === 'mouseout') {\n              if ($submenu.length) {\n                // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n                var tmpOpen = $submenu.data('timeoutOpen.mdui.menu');\n\n                if (tmpOpen) {\n                  clearTimeout(tmpOpen);\n                } // 准备关闭当前子菜单\n\n\n                timeout = timeoutClose = setTimeout(function () {\n                  closeSubMenu($submenu);\n                }, inst.options.subMenuDelay);\n                $submenu.data('timeoutClose.mdui.menu', timeout);\n              }\n            }\n        });\n      }\n    };\n    /**\n     * 菜单\n     * @param anchorSelector 点击该元素触发菜单\n     * @param menuSelector 菜单\n     * @param opts 配置项\n     * @constructor\n     */\n\n\n    function Menu(anchorSelector, menuSelector, opts) {\n      var _this = this; // 触发菜单的元素\n\n\n      _this.$anchor = $(anchorSelector).eq(0);\n\n      if (!_this.$anchor.length) {\n        return;\n      } // 已通过自定义属性实例化过，不再重复实例化\n\n\n      var oldInst = _this.$anchor.data('mdui.menu');\n\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.$menu = $(menuSelector).eq(0); // 触发菜单的元素 和 菜单必须是同级的元素，否则菜单可能不能定位\n\n      if (!_this.$anchor.siblings(_this.$menu).length) {\n        return;\n      }\n\n      _this.options = $.extend({}, DEFAULT, opts || {});\n      _this.state = 'closed'; // 是否是级联菜单\n\n      _this.isCascade = _this.$menu.hasClass('mdui-menu-cascade'); // covered 参数处理\n\n      if (_this.options.covered === 'auto') {\n        _this.isCovered = !_this.isCascade;\n      } else {\n        _this.isCovered = _this.options.covered;\n      } // 点击触发菜单切换\n\n\n      _this.$anchor.on('click', function () {\n        _this.toggle();\n      }); // 点击菜单外面区域关闭菜单\n\n\n      $document.on('click touchstart', function (e) {\n        var $target = $(e.target);\n\n        if ((_this.state === 'opening' || _this.state === 'opened') && !$target.is(_this.$menu) && !$.contains(_this.$menu[0], $target[0]) && !$target.is(_this.$anchor) && !$.contains(_this.$anchor[0], $target[0])) {\n          _this.close();\n        }\n      }); // 点击不含子菜单的菜单条目关闭菜单\n\n      $document.on('click', '.mdui-menu-item', function (e) {\n        var $this = $(this);\n\n        if (!$this.find('.mdui-menu').length && $this.attr('disabled') === null) {\n          _this.close();\n        }\n      }); // 绑定点击或鼠标移入含子菜单的条目的事件\n\n      bindSubMenuEvent(_this); // 窗口大小变化时，重新调整菜单位置\n\n      $window.on('resize', $.throttle(function () {\n        readjust(_this);\n      }, 100));\n    }\n    /**\n     * 切换菜单状态\n     */\n\n\n    Menu.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n\n\n    var transitionEnd = function transitionEnd(inst) {\n      inst.$menu.removeClass('mdui-menu-closing');\n\n      if (inst.state === 'opening') {\n        inst.state = 'opened';\n        componentEvent('opened', 'menu', inst, inst.$menu);\n      }\n\n      if (inst.state === 'closing') {\n        inst.state = 'closed';\n        componentEvent('closed', 'menu', inst, inst.$menu); // 关闭后，恢复菜单样式到默认状态，并恢复 fixed 定位\n\n        inst.$menu.css({\n          top: '',\n          left: '',\n          width: '',\n          position: 'fixed'\n        });\n      }\n    };\n    /**\n     * 打开菜单\n     */\n\n\n    Menu.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'menu', _this, _this.$menu); // 调整菜单位置\n\n      readjust(_this);\n\n      _this.$menu // 菜单隐藏状态使用使用 fixed 定位。\n      .css('position', _this.options.fixed ? 'fixed' : 'absolute') // 打开菜单\n      .addClass('mdui-menu-open') // 打开动画完成后\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n    /**\n     * 关闭菜单\n     */\n\n\n    Menu.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'menu', _this, _this.$menu); // 菜单开始关闭时，关闭所有子菜单\n\n      _this.$menu.find('.mdui-menu').each(function () {\n        closeSubMenu($(this));\n      });\n\n      _this.$menu.removeClass('mdui-menu-open').addClass('mdui-menu-closing').transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n\n    return Menu;\n  }();\n  /**\n   * =============================================================================\n   * ************   Menu 自定义属性 API   ************\n   * =============================================================================\n   */\n\n\n  $(function () {\n    $document.on('click', '[mdui-menu]', function () {\n      var $this = $(this);\n      var inst = $this.data('mdui.menu');\n\n      if (!inst) {\n        var options = parseOptions($this.attr('mdui-menu'));\n        var menuSelector = options.target;\n        delete options.target;\n        inst = new mdui.Menu($this, menuSelector, options);\n        $this.data('mdui.menu', inst);\n        inst.toggle();\n      }\n    });\n  });\n  /* jshint ignore:start */\n\n  mdui.JQ = $;\n  return mdui;\n});\n/* jshint ignore:end */",{"version":3,"sources":["/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/src/assets/js/mdui.js"],"names":["global","factory","exports","module","define","amd","mdui","lastTime","window","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","$","JQ","arr","self","i","length","$$1","selector","html","trim","toCreate","indexOf","tempParent","document","createElement","innerHTML","childNodes","push","elems","match","getElementById","slice","querySelectorAll","i$1","ready","nodeType","i$2","fn","prototype","extend","this$1","args","len","arguments","Object","keys","forEach","prop","target","shift","loop","isNodeName","ele","name","nodeName","toLowerCase","isObjectLike","obj","isFunction","isString","isWindow","win","isDocument","doc","DOCUMENT_NODE","isArrayLike","each","call","map","ref","value","ret","elem","undefined","concat","apply","merge","first","second","val","unique","result","elementDisplay","defaultDisplay","display","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","contains","parent","node","documentElement","param","destructure","key","keyTmp","v","Array","isArray","encodeURIComponent","join","each$1","map$1","el","get","index","filter","$selector","not","$excludes","offset","getBoundingClientRect","left","pageXOffset","top","pageYOffset","width","height","offsetParent","css","position","parentOffset","show","style","hide","toggle","hasClass","className","classList","removeAttr","attr","removeAttribute","removeProp","e","eq","last","children","is","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","$compareWith","find","foundElements","_this","_","__","childNode","has","$targets","siblings","prevAll","add","nextAll","closest","parents","remove","empty","clone","cloneNode","replaceWith","newContent","before","serializeArray","elements","$elem","type","disabled","checked","serialize","nameIndex","props","defaults","set","setAttribute","getAttribute","argLength","k","classes","split","j","cls","Width","Height","IEFixValue","isWidth","parseFloat","isNaN","Number","dir","nodes","$nodes","reverse","newChild","newChilds","copyByClone","tempDiv","child","insertBefore","nextSibling","appendTo","prependTo","after","replaceAll","original","dataNS","data","attributes","attribute","replace","u","charAt","toUpperCase","dataKey","removeData","n","bubbles","cancelable","t","createEvent","initMouseEvent","Event","MouseEvent","CustomEvent","detail","initCustomEvent","handlers","mduiElementId","fnFalse","getElementId","getHandlers","eventName","func","handler","toString","sel","elementId","useCapture","event","callFn","_detail","preventDefault","stopPropagation","proxyfn","_data","proxy","addEventListener","removeEventListener","test","readyState","on","one","origCallback","off","eName","trigger","isMouseEvent","evt","dispatchEvent","globalOptions","jsonpID","ajaxEvent","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","isQueryStringData","method","appendQuery","url","query","ajaxSetup","options","ajax","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","jsonp","jsonpCallback","now","contentType","timeout","callbacks","isCanceled","globals","eventParams","triggerEvent","xhr","triggerCallback","result1","result2","location","sendData","ArrayBuffer","Blob","Document","FormData","constructor","callbackName","requestUrl","abortTimeout","script","onerror","src","append","XMLHttpRequest","open","setRequestHeader","crossDomain","RegExp","$2","host","xhrTimeout","onload","textStatus","isHttpStatusSuccess","status","responseData","JSON","parse","responseText","err","responseType","response","statusText","onabort","abort","send","params","$document","$window","queue","queueData","queueName","dequeue","TouchHandler","touches","isAllow","allow","register","start","move","end","cancel","unlock","addClass","parseOptions","str","Function","substr","componentEvent","pluginName","inst","fullEventName","jQuery","reflow","clientLeft","transition","duration","webkitTransitionDuration","transitionDuration","transitionEnd","events","fireCallBack","transformOrigin","webkitTransformOrigin","transform","webkitTransform","showOverlay","zIndex","$overlay","level","hideOverlay","force","removeClass","lockScreen","$body","newBodyWidth","unlockScreen","throttle","delay","timer","GUID","guid","s4","floor","random","substring","entries","mutation","apiInit","that","item","$this","m","Headroom","DEFAULT","tolerance","initialClass","pinnedClass","unpinnedClass","opts","$headroom","oldInst","down","up","_init","state","inited","lastScrollY","_attachEvent","_scroll","rafId","currentScrollY","direction","toleranceExceeded","abs","unpin","pin","enable","disable","getState","CollapsePrivate","accordion","Collapse","namespace","ns","classpPefix","class_item","class_item_open","class_header","class_body","$collapse","$item","_isOpen","close","_getItem","parseInt","$content","$tmpItem","scrollHeight","openAll","closeAll","$target","checkboxHTML","tag","Table","$table","init","$thRow","$tdRows","$tdCheckboxs","selectable","selectedRow","_updateThCheckbox","_updateTdCheckbox","_updateNumericCol","$tdRow","$checkbox","$thCheckbox","isCheckedAll","checkbox","row","$th","th","updateTables","Ripple","$ripple","button","tmp","touchStartX","pageX","touchStartY","pageY","center","x","y","innerHeight","innerWidth","diameter","pow","translate","removeRipple","$wave","removeTimeout","showRipple","hidden","hideRipple","hideEvent","touchMove","moveEvent","getProp","inputEvent","input","$input","reInit","domLoadedEvent","$textField","validity","valid","inputValue","hasExtraSpace","maxlength","text","focus","updateTextFields","updateValueStyle","$slider","$track","$fill","$thumb","min","isDisabled","isDiscrete","discrete","$thumbText","percent","rangeSelector","updateSliders","Fab","$fab","$btn","$dial","$dialBtns","btn","Select","gutter","readjustMenu","windowHeight","selectHeight","$select","$menuItemFirst","$items","menuItemHeight","menuItemMargin","menuWidth","menuHeight","size","selectTop","transformOriginY","menuMarginTop","heightTemp","selectedIndex","menuMarginTopMax","menuTop","$menu","$selectNative","uniqueID","handleUpdate","option","textContent","selected","$selected","itemData","Tab","$ele","$tab","$tabs","$indicator","activeIndex","hash","tab","_setActive","_setIndicatorPosition","_bindTabEvent","clickEvent","targetId","$activeTab","activeTabOffset","scrollLeft","next","prev","$oldTabs","$newTabs","oldTabsEle","newTabsEle","Drawer","overlay","swipe","isDesktop","$drawer","swipeSupport","openNavEventHandler","swipeStartX","swiping","maybeSwiping","swipeAreaWidth","enableSwipeHandling","onBodyTouchStart","setPosition","translateX","closeTransform","rtlTranslateMultiplier","transformCSS","cleanPosition","getMaxTranslateX","getTranslateX","currentX","touchmove","onBodyTouchMove","touchend","onBodyTouchEnd","touchcancel","touchX","touchY","dXAbs","dYAbs","threshold","changedTouches","translateRatio","swipingState","Dialog","history","modal","closeOnEsc","closeOnCancel","closeOnConfirm","destroyOnClosed","isLockScreen","currentInst","readjust","$dialog","$dialogTitle","$dialogContent","$dialogActions","dialogHeight","hashchangeEvent","overlayClick","destroy","_doOpen","_arguments","back","keyCode","dialog","title","content","buttons","stackedButtons","cssClass","onOpen","onOpened","onClose","onClosed","DEFAULT_BUTTON","bold","onClick","buttonsHTML","HTML","alert","onConfirm","confirmText","confirm","onCancel","cancelText","prompt","label","defaultValue","confirmOnEnter","Tooltip","marginLeft","marginTop","targetProps","targetMargin","tooltipWidth","$tooltip","offsetWidth","tooltipHeight","offsetHeight","targetOffset","oldOpts","timeoutId","buttonText","buttonColor","closeOnButtonClick","closeOnOutsideClick","onButtonClick","Snackbar","message","buttonColorStyle","buttonColorClass","$snackbar","_setPosition","snackbarHeight","clientHeight","translateY","snackbar","$bottomNav","isThis","layerHTML","fillHTML","spinner","$spinner","layer","updateSpinners","Panel","Menu","align","fixed","covered","subMenuTrigger","subMenuDelay","menuLeft","windowWidth","isCovered","isFixed","transformOriginX","$anchor","anchorTmp","anchorTop","anchorLeft","anchorHeight","anchorWidth","anchorBottom","anchorRight","anchorOffsetTop","offsetTop","anchorOffsetLeft","offsetLeft","menuHeightTemp","isCascade","menuWidthTemp","readjustSubmenu","$submenu","submenuTop","submenuLeft","submenuWidth","submenuHeight","itemTmp","itemWidth","itemHeight","itemLeft","itemTop","openSubMenu","closeSubMenu","$subSubmenu","toggleSubMenu","bindSubMenuEvent","$tmpSubmenu","timeoutOpen","timeoutClose","eventType","$relatedTarget","relatedTarget","tmpClose","tmpOpen","anchorSelector","menuSelector"],"mappings":"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","sourcesContent":["/*!\n * mdui v0.4.2 (https://mdui.org)\n * Copyright 2016-2018 zdhxiong\n * Licensed under MIT\n */\n/* jshint ignore:start */\n;(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.mdui = factory());\n}(this, (function() {\n  'use strict';\n\n  /* jshint ignore:end */\n  var mdui = {};\n\n  /**\n   * =============================================================================\n   * ************   浏览器兼容性问题修复   ************\n   * =============================================================================\n   */\n\n  /**\n   * requestAnimationFrame\n   * cancelAnimationFrame\n   */\n  (function () {\n    var lastTime = 0;\n\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = window.webkitRequestAnimationFrame;\n      window.cancelAnimationFrame = window.webkitCancelAnimationFrame;\n    }\n\n    if (!window.requestAnimationFrame) {\n      window.requestAnimationFrame = function (callback, element) {\n        var currTime = new Date().getTime();\n        var timeToCall = Math.max(0, 16.7 - (currTime - lastTime));\n\n        var id = window.setTimeout(function () {\n            callback(currTime + timeToCall);\n          }, timeToCall);\n\n        lastTime = currTime + timeToCall;\n        return id;\n      };\n    }\n\n    if (!window.cancelAnimationFrame) {\n      window.cancelAnimationFrame = function (id) {\n        clearTimeout(id);\n      };\n    }\n  })();\n\n\n  /**\n   * JQ 1.0.0 (https://github.com/zdhxiong/mdui.JQ#readme)\n   * Copyright 2018-2018 zdhxiong\n   * Licensed under MIT\n   */\n  var $ = (function () {\n    'use strict';\n\n    var JQ = function JQ(arr) {\n      var self = this;\n\n      for (var i = 0; i < arr.length; i += 1) {\n        self[i] = arr[i];\n      }\n\n      self.length = arr.length;\n\n      return this;\n    };\n\n    function $$1(selector) {\n      var arr = [];\n\n      if (!selector) {\n        return new JQ(arr);\n      }\n\n      if (selector instanceof JQ) {\n        return selector;\n      }\n\n      if (typeof selector === 'string') {\n        var html = selector.trim();\n\n        if (html[0] === '<' && html[html.length - 1] === '>') {\n          // 创建 HTML 字符串\n          var toCreate = 'div';\n\n          if (html.indexOf('<li') === 0) {\n            toCreate = 'ul';\n          }\n\n          if (html.indexOf('<tr') === 0) {\n            toCreate = 'tbody';\n          }\n\n          if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\n            toCreate = 'tr';\n          }\n\n          if (html.indexOf('<tbody') === 0) {\n            toCreate = 'table';\n          }\n\n          if (html.indexOf('<option') === 0) {\n            toCreate = 'select';\n          }\n\n          var tempParent = document.createElement(toCreate);\n          tempParent.innerHTML = html;\n\n          for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n            arr.push(tempParent.childNodes[i]);\n          }\n        } else {\n          // 选择器\n          var elems = selector[0] === '#' && !selector.match(/[ .<>:~]/)\n            ? [document.getElementById(selector.slice(1))]\n            : document.querySelectorAll(selector);\n\n          for (var i$1 = 0; i$1 < elems.length; i$1 += 1) {\n            if (elems[i$1]) {\n              arr.push(elems[i$1]);\n            }\n          }\n        }\n      } else if (typeof selector === 'function') {\n        // function\n        return $$1(document).ready(selector);\n      } else if (selector.nodeType || selector === window || selector === document) {\n        // Node\n        arr.push(selector);\n      } else if (selector.length > 0 && selector[0].nodeType) {\n        // NodeList\n        for (var i$2 = 0; i$2 < selector.length; i$2 += 1) {\n          arr.push(selector[i$2]);\n        }\n      }\n\n      return new JQ(arr);\n    }\n\n    $$1.fn = JQ.prototype;\n\n    function extend() {\n      var this$1 = this;\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (!args.length) {\n        return this;\n      }\n\n      // $.extend(obj)\n      if (args.length === 1) {\n        Object.keys(args[0]).forEach(function (prop) {\n          this$1[prop] = args[0][prop];\n        });\n\n        return this;\n      }\n\n      // $.extend({}, defaults[, obj])\n      var target = args.shift();\n\n      var loop = function ( i ) {\n        Object.keys(args[i]).forEach(function (prop) {\n          target[prop] = args[i][prop];\n        });\n      };\n\n      for (var i = 0; i < args.length; i += 1) loop( i );\n\n      return target;\n    }\n\n    $$1.fn.extend = extend;\n    $$1.extend = extend;\n\n    /**\n     * 判断一个节点名\n     * @param ele\n     * @param name\n     * @returns {boolean}\n     */\n    function isNodeName(ele, name) {\n      return ele.nodeName && ele.nodeName.toLowerCase() === name.toLowerCase();\n    }\n\n    /**\n     * 除去 null 后的 object 类型\n     * @param obj\n     * @returns {*|boolean}\n     */\n    function isObjectLike(obj) {\n      return typeof obj === 'object' && obj !== null;\n    }\n\n    function isFunction(fn) {\n      return typeof fn === 'function';\n    }\n\n    function isString(obj) {\n      return typeof obj === 'string';\n    }\n\n    function isWindow(win) {\n      return win && win === win.window;\n    }\n\n    function isDocument(doc) {\n      return doc && doc.nodeType === doc.DOCUMENT_NODE;\n    }\n\n    function isArrayLike(obj) {\n      return typeof obj.length === 'number';\n    }\n\n    /**\n     * 循环数组或对象\n     * @param obj\n     * @param callback\n     * @returns {*}\n     */\n    function each(obj, callback) {\n      if (isArrayLike(obj)) {\n        for (var i = 0; i < obj.length; i += 1) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            return obj;\n          }\n        }\n      } else {\n        var keys = Object.keys(obj);\n        for (var i$1 = 0; i$1 < keys.length; i$1 += 1) {\n          if (callback.call(obj[keys[i$1]], keys[i$1], obj[keys[i$1]]) === false) {\n            return obj;\n          }\n        }\n      }\n\n      return obj;\n    }\n\n    /**\n     * 遍历数组或对象，通过函数返回一个新的数组或对象，null 和 undefined 将被过滤掉。\n     * @param elems\n     * @param callback\n     * @returns {Array}\n     */\n    function map(elems, callback) {\n      var ref;\n\n      var value;\n      var ret = [];\n\n      each(elems, function (i, elem) {\n        value = callback(elem, i);\n\n        if (value !== null && value !== undefined) {\n          ret.push(value);\n        }\n      });\n\n      return (ref = []).concat.apply(ref, ret);\n    }\n\n    /**\n     * 把对象合并到第一个参数中，并返回第一个参数\n     * @param first\n     * @param second\n     * @returns {*}\n     */\n    function merge(first, second) {\n      each(second, function (i, val) {\n        first.push(val);\n      });\n\n      return first;\n    }\n\n    /**\n     * 删除数组中重复元素\n     * @param arr {Array}\n     * @returns {Array}\n     */\n    function unique(arr) {\n      var result = [];\n\n      for (var i = 0; i < arr.length; i += 1) {\n        if (result.indexOf(arr[i]) === -1) {\n          result.push(arr[i]);\n        }\n      }\n\n      return result;\n    }\n\n    var elementDisplay = {};\n\n    /**\n     * 获取元素的默认 display 样式值，用于 .show() 方法\n     * @param nodeName\n     * @returns {*}\n     */\n    function defaultDisplay(nodeName) {\n      var element;\n      var display;\n\n      if (!elementDisplay[nodeName]) {\n        element = document.createElement(nodeName);\n        document.body.appendChild(element);\n        display = getComputedStyle(element, '').getPropertyValue('display');\n        element.parentNode.removeChild(element);\n        if (display === 'none') {\n          display = 'block';\n        }\n\n        elementDisplay[nodeName] = display;\n      }\n\n      return elementDisplay[nodeName];\n    }\n\n    $$1.extend({\n      each: each,\n      merge: merge,\n      unique: unique,\n      map: map,\n\n      /**\n       * 一个 DOM 节点是否包含另一个 DOM 节点\n       * @param parent {Node} 父节点\n       * @param node {Node} 子节点\n       * @returns {Boolean}\n       */\n      contains: function contains(parent, node) {\n        if (parent && !node) {\n          return document.documentElement.contains(parent);\n        }\n\n        return parent !== node && parent.contains(node);\n      },\n\n      /**\n       * 将数组或对象序列化\n       * @param obj\n       * @returns {String}\n       */\n      param: function param(obj) {\n        if (!isObjectLike(obj)) {\n          return '';\n        }\n\n        var args = [];\n\n        function destructure(key, value) {\n          var keyTmp;\n\n          if (isObjectLike(value)) {\n            each(value, function (i, v) {\n              if (Array.isArray(value) && !isObjectLike(v)) {\n                keyTmp = '';\n              } else {\n                keyTmp = i;\n              }\n\n              destructure((key + \"[\" + keyTmp + \"]\"), v);\n            });\n          } else {\n            if (value !== null && value !== '') {\n              keyTmp = \"=\" + (encodeURIComponent(value));\n            } else {\n              keyTmp = '';\n            }\n\n            args.push(encodeURIComponent(key) + keyTmp);\n          }\n        }\n\n        each(obj, function (key, value) {\n          destructure(key, value);\n        });\n\n        return args.join('&');\n      },\n    });\n\n    $$1.fn.extend({\n      /**\n       * 遍历对象\n       * @param callback {Function}\n       * @return {JQ}\n       */\n      each: function each$1(callback) {\n        return each(this, callback);\n      },\n\n      /**\n       * 通过遍历集合中的节点对象，通过函数返回一个新的对象，null 或 undefined 将被过滤掉。\n       * @param callback {Function}\n       * @returns {JQ}\n       */\n      map: function map$1(callback) {\n        return new JQ(map(this, function (el, i) { return callback.call(el, i, el); }));\n      },\n\n      /**\n       * 获取指定 DOM 元素，没有 index 参数时，获取所有 DOM 的数组\n       * @param index {Number=}\n       * @returns {Node|Array}\n       */\n      get: function get(index) {\n        return index === undefined\n          ? [].slice.call(this)\n          : this[index >= 0 ? index : index + this.length];\n      },\n\n      /**\n       * array中提取的方法。从start开始，如果end 指出。提取不包含end位置的元素。\n       * @param args {start, end}\n       * @returns {JQ}\n       */\n      slice: function slice() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new JQ([].slice.apply(this, args));\n      },\n\n      /**\n       * 筛选元素集合\n       * @param selector {String|JQ|Node|Function}\n       * @returns {JQ}\n       */\n      filter: function filter(selector) {\n        if (isFunction(selector)) {\n          return this.map(function (index, ele) { return (selector.call(ele, index, ele) ? ele : undefined); });\n        }\n\n        var $selector = $$1(selector);\n\n        return this.map(function (index, ele) { return ($selector.index(ele) > -1 ? ele : undefined); });\n      },\n\n      /**\n       * 从元素集合中删除指定的元素\n       * @param selector {String|Node|JQ|Function}\n       * @return {JQ}\n       */\n      not: function not(selector) {\n        var $excludes = this.filter(selector);\n\n        return this.map(function (index, ele) { return ($excludes.index(ele) > -1 ? undefined : ele); });\n      },\n\n      /**\n       * 获取元素相对于 document 的偏移\n       * @returns {Object}\n       */\n      offset: function offset() {\n        if (this[0]) {\n          var offset = this[0].getBoundingClientRect();\n\n          return {\n            left: offset.left + window.pageXOffset,\n            top: offset.top + window.pageYOffset,\n            width: offset.width,\n            height: offset.height,\n          };\n        }\n\n        return null;\n      },\n\n      /**\n       * 返回最近的用于定位的父元素\n       * @returns {*|JQ}\n       */\n      offsetParent: function offsetParent() {\n        return this.map(function () {\n          var parent = this.offsetParent;\n\n          while (parent && $$1(parent).css('position') === 'static') {\n            parent = parent.offsetParent;\n          }\n\n          return parent || document.documentElement;\n        });\n      },\n\n      /**\n       * 获取元素相对于父元素的偏移\n       * @return {Object}\n       */\n      position: function position() {\n        var self = this;\n\n        if (!self[0]) {\n          return null;\n        }\n\n        var offsetParent;\n        var offset;\n        var parentOffset = {\n          top: 0,\n          left: 0,\n        };\n\n        if (self.css('position') === 'fixed') {\n          offset = self[0].getBoundingClientRect();\n        } else {\n          offsetParent = self.offsetParent();\n          offset = self.offset();\n          if (!isNodeName(offsetParent[0], 'html')) {\n            parentOffset = offsetParent.offset();\n          }\n\n          parentOffset = {\n            top: parentOffset.top + offsetParent.css('borderTopWidth'),\n            left: parentOffset.left + offsetParent.css('borderLeftWidth'),\n          };\n        }\n\n        return {\n          top: offset.top - parentOffset.top - self.css('marginTop'),\n          left: offset.left - parentOffset.left - self.css('marginLeft'),\n          width: offset.width,\n          height: offset.height,\n        };\n      },\n\n      /**\n       * 显示指定元素\n       * @returns {JQ}\n       */\n      show: function show() {\n        return this.each(function () {\n          if (this.style.display === 'none') {\n            this.style.display = '';\n          }\n\n          if (window.getComputedStyle(this, '').getPropertyValue('display') === 'none') {\n            this.style.display = defaultDisplay(this.nodeName);\n          }\n        });\n      },\n\n      /**\n       * 隐藏指定元素\n       * @returns {JQ}\n       */\n      hide: function hide() {\n        return this.each(function () {\n          this.style.display = 'none';\n        });\n      },\n\n      /**\n       * 切换元素的显示状态\n       * @returns {JQ}\n       */\n      toggle: function toggle() {\n        return this.each(function () {\n          this.style.display = this.style.display === 'none' ? '' : 'none';\n        });\n      },\n\n      /**\n       * 是否含有指定的 CSS 类\n       * @param className {String}\n       * @returns {boolean}\n       */\n      hasClass: function hasClass(className) {\n        if (!this[0] || !className) {\n          return false;\n        }\n\n        return this[0].classList.contains(className);\n      },\n\n      /**\n       * 移除指定属性\n       * @param attr {String}\n       * @returns {JQ}\n       */\n      removeAttr: function removeAttr(attr) {\n        return this.each(function () {\n          this.removeAttribute(attr);\n        });\n      },\n\n      /**\n       * 删除属性值\n       * @param name {String}\n       * @returns {JQ}\n       */\n      removeProp: function removeProp(name) {\n        return this.each(function () {\n          try {\n            delete this[name];\n          } catch (e) {\n            // empty\n          }\n        });\n      },\n\n      /**\n       * 获取当前对象中第n个元素\n       * @param index {Number}\n       * @returns {JQ}\n       */\n      eq: function eq(index) {\n        var ret = index === -1\n          ? this.slice(index)\n          : this.slice(index, +index + 1);\n\n        return new JQ(ret);\n      },\n\n      /**\n       * 获取对象中第一个元素\n       * @returns {JQ}\n       */\n      first: function first() {\n        return this.eq(0);\n      },\n\n      /**\n       * 获取对象中最后一个元素\n       * @returns {JQ}\n       */\n      last: function last() {\n        return this.eq(-1);\n      },\n\n      /**\n       * 获取一个元素的位置。\n       * 当 elem 参数没有给出时，返回当前元素在兄弟节点中的位置。\n       * 有给出了 elem 参数时，返回 elem 元素在当前对象中的位置\n       * @param elem {Selector|Node=}\n       * @returns {Number}\n       */\n      index: function index(elem) {\n        if (!elem) {\n          // 获取当前 JQ 对象的第一个元素在同辈元素中的位置\n          return this\n            .eq(0)\n            .parent()\n            .children()\n            .get()\n            .indexOf(this[0]);\n        }\n\n        if (isString(elem)) {\n          // 返回当前 JQ 对象的第一个元素在指定选择器对应的元素中的位置\n          return $$1(elem)\n            .eq(0)\n            .parent()\n            .children()\n            .get()\n            .indexOf(this[0]);\n        }\n\n        // 返回指定元素在当前 JQ 对象中的位置\n        return this\n          .get()\n          .indexOf(elem);\n      },\n\n      /**\n       * 根据选择器、DOM元素或 JQ 对象来检测匹配元素集合，\n       * 如果其中至少有一个元素符合这个给定的表达式就返回true\n       * @param selector {String|Node|NodeList|Array|JQ|Window}\n       * @returns boolean\n       */\n      is: function is(selector) {\n        var self = this[0];\n\n        if (!self || selector === undefined || selector === null) {\n          return false;\n        }\n\n        if (isString(selector)) {\n          if (self === document || self === window) {\n            return false;\n          }\n\n          var matchesSelector = self.matches\n            || self.matchesSelector\n            || self.webkitMatchesSelector\n            || self.mozMatchesSelector\n            || self.oMatchesSelector\n            || self.msMatchesSelector;\n\n          return matchesSelector.call(self, selector);\n        }\n\n        if (selector === document || selector === window) {\n          return self === selector;\n        }\n\n        if (selector.nodeType || isArrayLike(selector)) {\n          var $compareWith = selector.nodeType ? [selector] : selector;\n\n          for (var i = 0; i < $compareWith.length; i += 1) {\n            if ($compareWith[i] === self) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n        return false;\n      },\n\n      /**\n       * 根据 CSS 选择器找到后代节点的集合\n       * @param selector {String}\n       * @returns {JQ}\n       */\n      find: function find(selector) {\n        var foundElements = [];\n\n        this.each(function (i, _this) {\n          var nodeType = _this.nodeType;\n\n          if (nodeType !== 1 && nodeType !== 9) {\n            // 不是 element 和 document 则跳过\n            return;\n          }\n\n          merge(foundElements, _this.querySelectorAll(selector));\n        });\n\n        return new JQ(foundElements);\n      },\n\n      /**\n       * 找到直接子元素的元素集合\n       * @param selector {String=}\n       * @returns {JQ}\n       */\n      children: function children(selector) {\n        var children = [];\n\n        this.each(function (_, _this) {\n          each(_this.childNodes, function (__, childNode) {\n            if (childNode.nodeType !== 1) {\n              return;\n            }\n\n            if (!selector || (selector && $$1(childNode).is(selector))) {\n              children.push(childNode);\n            }\n          });\n        });\n\n        return new JQ(unique(children));\n      },\n\n      /**\n       * 保留含有指定子元素的元素，去掉不含有指定子元素的元素\n       * @param selector {String|Node|JQ|NodeList|Array}\n       * @return {JQ}\n       */\n      has: function has(selector) {\n        var $targets = isString(selector) ? this.find(selector) : $$1(selector);\n        var length = $targets.length;\n\n        return this.filter(function () {\n          var this$1 = this;\n\n          for (var i = 0; i < length; i += 1) {\n            if ($$1.contains(this$1, $targets[i])) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n      },\n\n      /**\n       * 取得同辈元素的集合\n       * @param selector {String=}\n       * @returns {JQ}\n       */\n      siblings: function siblings(selector) {\n        return this.prevAll(selector).add(this.nextAll(selector));\n      },\n\n      /**\n       * 返回首先匹配到的父节点，包含父节点\n       * @param selector {String}\n       * @returns {JQ}\n       */\n      closest: function closest(selector) {\n        var self = this;\n\n        if (!self.is(selector)) {\n          self = self.parents(selector).eq(0);\n        }\n\n        return self;\n      },\n\n      /**\n       * 删除所有匹配的元素\n       * @returns {JQ}\n       */\n      remove: function remove() {\n        return this.each(function (i, _this) {\n          if (_this.parentNode) {\n            _this.parentNode.removeChild(_this);\n          }\n        });\n      },\n\n      /**\n       * 添加匹配的元素到当前对象中\n       * @param selector {String|JQ}\n       * @returns {JQ}\n       */\n      add: function add(selector) {\n        return new JQ(unique(merge(this.get(), $$1(selector))));\n      },\n\n      /**\n       * 删除子节点\n       * @returns {JQ}\n       */\n      empty: function empty() {\n        return this.each(function () {\n          this.innerHTML = '';\n        });\n      },\n\n      /**\n       * 通过深度克隆来复制集合中的所有元素。\n       * (通过原生 cloneNode 方法深度克隆来复制集合中的所有元素。此方法不会有数据和事件处理程序复制到新的元素。这点和jquery中利用一个参数来确定是否复制数据和事件处理不相同。)\n       * @returns {JQ}\n       */\n      clone: function clone() {\n        return this.map(function () {\n          return this.cloneNode(true);\n        });\n      },\n\n      /**\n       * 用新元素替换当前元素\n       * @param newContent {String|Node|NodeList|JQ}\n       * @returns {JQ}\n       */\n      replaceWith: function replaceWith(newContent) {\n        return this.before(newContent).remove();\n      },\n\n      /**\n       * 将表单元素的值组合成键值对数组\n       * @returns {Array}\n       */\n      serializeArray: function serializeArray() {\n        var result = [];\n        var elem = this[0];\n\n        if (!elem || !elem.elements) {\n          return result;\n        }\n\n        $$1([].slice.call(elem.elements)).each(function () {\n          var $elem = $$1(this);\n          var type = $elem.attr('type');\n          if (\n            this.nodeName.toLowerCase() !== 'fieldset'\n            && !this.disabled\n            && ['submit', 'reset', 'button'].indexOf(type) === -1\n            && (['radio', 'checkbox'].indexOf(type) === -1 || this.checked)\n          ) {\n            result.push({\n              name: $elem.attr('name'),\n              value: $elem.val(),\n            });\n          }\n        });\n\n        return result;\n      },\n\n      /**\n       * 将表单元素或对象序列化\n       * @returns {String}\n       */\n      serialize: function serialize() {\n        var result = [];\n\n        each(this.serializeArray(), function (i, elem) {\n          result.push(((encodeURIComponent(elem.name)) + \"=\" + (encodeURIComponent(elem.value))));\n        });\n\n        return result.join('&');\n      },\n    });\n\n    /**\n     * val - 获取或设置元素的值\n     * @param value {String=}\n     * @return {*|JQ}\n     */\n    /**\n     * html - 获取或设置元素的 HTML\n     * @param value {String=}\n     * @return {*|JQ}\n     */\n    /**\n     * text - 获取或设置元素的内容\n     * @param value {String=}\n     * @return {*|JQ}\n     */\n    each(['val', 'html', 'text'], function (nameIndex, name) {\n      var props = {\n        0: 'value',\n        1: 'innerHTML',\n        2: 'textContent',\n      };\n\n      var defaults = {\n        0: undefined,\n        1: undefined,\n        2: null,\n      };\n\n      $$1.fn[name] = function (value) {\n        if (value === undefined) {\n          // 获取值\n          return this[0] ? this[0][props[nameIndex]] : defaults[nameIndex];\n        }\n\n        // 设置值\n        return this.each(function (i, elem) {\n          elem[props[nameIndex]] = value;\n        });\n      };\n    });\n\n    /**\n     * attr - 获取或设置元素的属性值\n     * @param {name|props|key,value=}\n     * @return {String|JQ}\n     */\n    /**\n     * prop - 获取或设置元素的属性值\n     * @param {name|props|key,value=}\n     * @return {String|JQ}\n     */\n    /**\n     * css - 获取或设置元素的样式\n     * @param {name|props|key,value=}\n     * @return {String|JQ}\n     */\n    each(['attr', 'prop', 'css'], function (nameIndex, name) {\n      function set(elem, key, value) {\n        if (nameIndex === 0) {\n          elem.setAttribute(key, value);\n        } else if (nameIndex === 1) {\n          elem[key] = value;\n        } else {\n          elem.style[key] = value;\n        }\n      }\n\n      function get(elem, key) {\n        if (!elem) {\n          return undefined;\n        }\n\n        if (nameIndex === 0) {\n          return elem.getAttribute(key);\n        }\n\n        if (nameIndex === 1) {\n          return elem[key];\n        }\n\n        return window.getComputedStyle(elem, null).getPropertyValue(key);\n      }\n\n      $$1.fn[name] = function (key, value) {\n        var argLength = arguments.length;\n\n        if (argLength === 1 && isString(key)) {\n          // 获取值\n          return get(this[0], key);\n        }\n\n        // 设置值\n        return this.each(function (i, elem) {\n          if (argLength === 2) {\n            set(elem, key, value);\n          } else {\n            each(key, function (k, v) {\n              set(elem, k, v);\n            });\n          }\n        });\n      };\n    });\n\n    /**\n     * addClass - 添加 CSS 类，多个类名用空格分割\n     * @param className {String}\n     * @return {JQ}\n     */\n    /**\n     * removeClass - 移除 CSS 类，多个类名用空格分割\n     * @param className {String}\n     * @return {JQ}\n     */\n    /**\n     * toggleClass - 切换 CSS 类名，多个类名用空格分割\n     * @param className {String}\n     * @return {JQ}\n     */\n    each(['add', 'remove', 'toggle'], function (nameIndex, name) {\n      $$1.fn[(name + \"Class\")] = function (className) {\n        if (!className) {\n          return this;\n        }\n\n        var classes = className.split(' ');\n\n        return this.each(function (i, elem) {\n          each(classes, function (j, cls) {\n            elem.classList[name](cls);\n          });\n        });\n      };\n    });\n\n    /**\n     * width - 获取元素的宽度\n     * @return {Number}\n     */\n    /**\n     * height - 获取元素的高度\n     * @return {Number}\n     */\n    each({\n      Width: 'width',\n      Height: 'height',\n    }, function (prop, name) {\n      $$1.fn[name] = function (val) {\n        if (val === undefined) {\n          // 获取\n          var elem = this[0];\n\n          if (isWindow(elem)) {\n            return elem[(\"inner\" + prop)];\n          }\n\n          if (isDocument(elem)) {\n            return elem.documentElement[(\"scroll\" + prop)];\n          }\n\n          var $elem = $$1(elem);\n\n          // IE10、IE11 在 box-sizing:border-box 时，不会包含 padding 和 border，这里进行修复\n          var IEFixValue = 0;\n          var isWidth = name === 'width';\n          if ('ActiveXObject' in window) { // 判断是 IE 浏览器\n            if ($elem.css('box-sizing') === 'border-box') {\n              IEFixValue = parseFloat($elem.css((\"padding-\" + (isWidth ? 'left' : 'top'))))\n                + parseFloat($elem.css((\"padding-\" + ((isWidth ? 'right' : 'bottom')))))\n                + parseFloat($elem.css((\"border-\" + (isWidth ? 'left' : 'top') + \"-width\")))\n                + parseFloat($elem.css((\"border-\" + (isWidth ? 'right' : 'bottom') + \"-width\")));\n            }\n          }\n\n          return parseFloat($$1(elem).css(name)) + IEFixValue;\n        }\n\n        // 设置\n        /* eslint no-restricted-globals: 0 */\n        if (!isNaN(Number(val)) && val !== '') {\n          val += 'px';\n        }\n\n        return this.css(name, val);\n      };\n    });\n\n    /**\n     * innerWidth - 获取元素的宽度，包含内边距\n     * @return {Number}\n     */\n    /**\n     * innerHeight - 获取元素的高度，包含内边距\n     * @return {Number}\n     */\n    each({\n      Width: 'width',\n      Height: 'height',\n    }, function (prop, name) {\n      $$1.fn[(\"inner\" + prop)] = function () {\n        var value = this[name]();\n        var $elem = $$1(this[0]);\n\n        if ($elem.css('box-sizing') !== 'border-box') {\n          value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'left' : 'top'))));\n          value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'right' : 'bottom'))));\n        }\n\n        return value;\n      };\n    });\n\n    function dir(nodes, selector, nameIndex, node) {\n      var ret = [];\n      var elem;\n\n      nodes.each(function (j, _this) {\n        elem = _this[node];\n        while (elem) {\n          if (nameIndex === 2) {\n            // prevUntil\n            if (!selector || (selector && $$1(elem).is(selector))) {\n              break;\n            }\n\n            ret.push(elem);\n          } else if (nameIndex === 0) {\n            // prev\n            if (!selector || (selector && $$1(elem).is(selector))) {\n              ret.push(elem);\n            }\n\n            break;\n          } else if (!selector || (selector && $$1(elem).is(selector))) {\n            // prevAll\n            ret.push(elem);\n          }\n\n          elem = elem[node];\n        }\n      });\n\n      return new JQ(unique(ret));\n    }\n\n    /**\n     * prev - 取得前一个匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    /**\n     * prevAll - 取得前面所有匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    /**\n     * prevUntil - 取得前面的所有元素，直到遇到匹配的元素，不包含匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    each(['', 'All', 'Until'], function (nameIndex, name) {\n      $$1.fn[(\"prev\" + name)] = function (selector) {\n        // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n        var $nodes = nameIndex === 0 ? this : $$1(this.get().reverse());\n\n        return dir($nodes, selector, nameIndex, 'previousElementSibling');\n      };\n    });\n\n    /**\n     * next - 取得后一个匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    /**\n     * nextAll - 取得后面所有匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    /**\n     * nextUntil - 取得后面所有匹配的元素，直到遇到匹配的元素，不包含匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    each(['', 'All', 'Until'], function (nameIndex, name) {\n      $$1.fn[(\"next\" + name)] = function (selector) {\n        return dir(this, selector, nameIndex, 'nextElementSibling');\n      };\n    });\n\n    /**\n     * parent - 取得匹配的直接父元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    /**\n     * parents - 取得所有匹配的父元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    /**\n     * parentUntil - 取得所有的父元素，直到遇到匹配的元素，不包含匹配的元素\n     * @param selector {String=}\n     * @return {JQ}\n     */\n    each(['', 's', 'sUntil'], function (nameIndex, name) {\n      $$1.fn[(\"parent\" + name)] = function (selector) {\n        // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n        var $nodes = nameIndex === 0 ? this : $$1(this.get().reverse());\n\n        return dir($nodes, selector, nameIndex, 'parentNode');\n      };\n    });\n\n    /**\n     * append - 在元素内部追加内容\n     * @param newChild {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    /**\n     * prepend - 在元素内部前置内容\n     * @param newChild {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    each(['append', 'prepend'], function (nameIndex, name) {\n      $$1.fn[name] = function (newChild) {\n        var newChilds;\n        var copyByClone = this.length > 1;\n\n        if (isString(newChild)) {\n          var tempDiv = document.createElement('div');\n          tempDiv.innerHTML = newChild;\n          newChilds = [].slice.call(tempDiv.childNodes);\n        } else {\n          newChilds = $$1(newChild).get();\n        }\n\n        if (nameIndex === 1) {\n          // prepend\n          newChilds.reverse();\n        }\n\n        return this.each(function (i, _this) {\n          each(newChilds, function (j, child) {\n            // 一个元素要同时追加到多个元素中，需要先复制一份，然后追加\n            if (copyByClone && i > 0) {\n              child = child.cloneNode(true);\n            }\n\n            if (nameIndex === 0) {\n              // append\n              _this.appendChild(child);\n            } else {\n              // prepend\n              _this.insertBefore(child, _this.childNodes[0]);\n            }\n          });\n        });\n      };\n    });\n\n    /**\n     * insertBefore - 插入到指定元素的前面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    /**\n     * insertAfter - 插入到指定元素的后面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    each(['insertBefore', 'insertAfter'], function (nameIndex, name) {\n      $$1.fn[name] = function (selector) {\n        var $elem = $$1(selector);\n\n        return this.each(function (i, _this) {\n          $elem.each(function (j, elem) {\n            elem.parentNode.insertBefore(\n              $elem.length === 1 ? _this : _this.cloneNode(true),\n              nameIndex === 0 ? elem : elem.nextSibling\n            );\n          });\n        });\n      };\n    });\n\n    /**\n     * appendTo - 追加到指定元素内容\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    /**\n     * prependTo - 前置到指定元素内部\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    /**\n     * before - 插入到指定元素前面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    /**\n     * after - 插入到指定元素后面\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    /**\n     * replaceAll - 替换掉指定元素\n     * @param selector {String|Node|NodeList|JQ}\n     * @return {JQ}\n     */\n    each({\n      appendTo: 'append',\n      prependTo: 'prepend',\n      before: 'insertBefore',\n      after: 'insertAfter',\n      replaceAll: 'replaceWith',\n    }, function (name, original) {\n      $$1.fn[name] = function (selector) {\n        $$1(selector)[original](this);\n        return this;\n      };\n    });\n\n    var dataNS = 'mduiElementDataStorage';\n\n    $$1.extend({\n      /**\n       * 在指定元素上存储数据，或从指定元素上读取数据\n       * @param elem 必须， DOM 元素\n       * @param key 必须，键名\n       * @param value 可选，值\n       */\n      data: function data(elem, key, value) {\n        var data = {};\n\n        if (value !== undefined) {\n          // 根据 key、value 设置值\n          data[key] = value;\n        } else if (isObjectLike(key)) {\n          // 根据键值对设置值\n          data = key;\n        } else if (key === undefined) {\n          // 获取所有值\n          var result = {};\n\n          each(elem.attributes, function (i, attribute) {\n            var name = attribute.name;\n\n            if (name.indexOf('data-') === 0) {\n              var prop = name.slice(5).replace(/-./g, function (u) { return u.charAt(1).toUpperCase(); });\n\n              result[prop] = attribute.value;\n            }\n          });\n\n          if (elem[dataNS]) {\n            each(elem[dataNS], function (k, v) {\n              result[k] = v;\n            });\n          }\n\n          return result;\n        } else if (elem[dataNS] && (key in elem[dataNS])) {\n          // 获取指定值\n          return elem[dataNS][key];\n        } else {\n          // 从 data- 中获取指定值\n          var dataKey = elem.getAttribute((\"data-\" + key));\n\n          if (dataKey) {\n            return dataKey;\n          }\n\n          return undefined;\n        }\n\n        // 设置值\n        if (!elem[dataNS]) {\n          elem[dataNS] = {};\n        }\n\n        each(data, function (k, v) {\n          elem[dataNS][k] = v;\n        });\n\n        return undefined;\n      },\n\n      /**\n       * 移除指定元素上存放的数据\n       * @param elem 必须，DOM 元素\n       * @param key 必须，键名\n       */\n      removeData: function removeData(elem, key) {\n        if (elem[dataNS] && elem[dataNS][key]) {\n          elem[dataNS][key] = null;\n          delete elem[dataNS][key];\n        }\n      },\n    });\n\n    $$1.fn.extend({\n      /**\n       * 在元素上读取或设置数据\n       * @param key 必须\n       * @param value\n       * @returns {*}\n       */\n      data: function data(key, value) {\n        if (value === undefined) {\n          if (isObjectLike(key)) {\n            // 同时设置多个值\n            return this.each(function (i, elem) {\n              $$1.data(elem, key);\n            });\n          }\n\n          if (this[0]) {\n            // 获取值\n            return $$1.data(this[0], key);\n          }\n\n          return undefined;\n        }\n\n        // 设置值\n        return this.each(function (i, elem) {\n          $$1.data(elem, key, value);\n        });\n      },\n\n      /**\n       * 移除元素上存储的数据\n       * @param key 必须\n       * @returns {*}\n       */\n      removeData: function removeData(key) {\n        return this.each(function (i, elem) {\n          $$1.removeData(elem, key);\n        });\n      },\n    });\n\n    !function(){!function(){try{return new e(\"test\"),!1}catch(e){}var e=function(e,n){n=n||{bubbles:!1,cancelable:!1};var t=document.createEvent(\"MouseEvent\");return t.initMouseEvent(e,n.bubbles,n.cancelable,window,0,0,0,0,0,!1,!1,!1,!1,0,null),t};e.prototype=Event.prototype,window.MouseEvent=e;}();}();\n\n    !function(){!function(){if(\"function\"==typeof window.CustomEvent){ return!1; }function t(t,n){n=n||{bubbles:!1,cancelable:!1,detail:void 0};var e=document.createEvent(\"CustomEvent\");return e.initCustomEvent(t,n.bubbles,n.cancelable,n.detail),e}t.prototype=window.Event.prototype,window.CustomEvent=t;}();}();\n\n  // 存储事件\n    var handlers = {\n      // i: { // 元素ID\n      //   j: { // 事件ID\n      //     e: 事件名\n      //     fn: 事件处理函数\n      //     i: 事件ID\n      //     proxy:\n      //     sel: 选择器\n      //   }\n      // }\n    };\n\n  // 元素ID\n    var mduiElementId = 1;\n\n    function fnFalse() {\n      return false;\n    }\n\n    /**\n     * 为元素赋予一个唯一的ID\n     * @param element\n     * @returns {number|*}\n     */\n    function getElementId(element) {\n      if (!element.mduiElementId) {\n        mduiElementId += 1;\n        element.mduiElementId = mduiElementId;\n      }\n\n      return element.mduiElementId;\n    }\n\n    /**\n     * 获取匹配的事件\n     * @param element\n     * @param eventName\n     * @param func\n     * @param selector\n     * @returns {Array}\n     */\n    function getHandlers(element, eventName, func, selector) {\n      return (handlers[getElementId(element)] || []).filter(function (handler) { return handler\n        && (!eventName || handler.e === eventName)\n        && (!func || handler.fn.toString() === func.toString())\n        && (!selector || handler.sel === selector); });\n    }\n\n    /**\n     * 添加事件监听\n     * @param element\n     * @param eventName\n     * @param func\n     * @param data\n     * @param selector\n     */\n    function add(element, eventName, func, data, selector) {\n      var elementId = getElementId(element);\n\n      if (!handlers[elementId]) {\n        handlers[elementId] = [];\n      }\n\n      // 传入 data.useCapture 来设置 useCapture: true\n      var useCapture = false;\n      if (isObjectLike(data) && data.useCapture) {\n        useCapture = true;\n      }\n\n      eventName.split(' ').forEach(function (event) {\n        var handler = {\n          e: event,\n          fn: func,\n          sel: selector,\n          i: handlers[elementId].length,\n        };\n\n        function callFn(e, elem) {\n          // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n          /* eslint no-underscore-dangle: 0 */\n          var result = func.apply(elem, e._detail === undefined ? [e] : [e].concat(e._detail));\n\n          if (result === false) {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }\n\n        function proxyfn(e) {\n          e._data = data;\n\n          if (selector) {\n            // 事件代理\n            $$1(element)\n              .find(selector)\n              .get()\n              .reverse()\n              .forEach(function (elem) {\n                if (elem === e.target || $$1.contains(elem, e.target)) {\n                  callFn(e, elem);\n                }\n              });\n          } else {\n            // 不使用事件代理\n            callFn(e, element);\n          }\n        }\n\n        handler.proxy = proxyfn;\n        handlers[elementId].push(handler);\n        element.addEventListener(handler.e, proxyfn, useCapture);\n      });\n    }\n\n    /**\n     * 移除事件监听\n     * @param element\n     * @param eventName\n     * @param func\n     * @param selector\n     */\n    function remove(element, eventName, func, selector) {\n      (eventName || '').split(' ').forEach(function (event) {\n        getHandlers(element, event, func, selector).forEach(function (handler) {\n          delete handlers[getElementId(element)][handler.i];\n          element.removeEventListener(handler.e, handler.proxy, false);\n        });\n      });\n    }\n\n    $$1.fn.extend({\n      /**\n       * DOM 加载完毕后调用的函数\n       * @param callback\n       * @returns {ready}\n       */\n      ready: function ready(callback) {\n        if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n          callback($$1);\n        } else {\n          document.addEventListener('DOMContentLoaded', function () {\n            callback($$1);\n          }, false);\n        }\n\n        return this;\n      },\n\n      /**\n       * 绑定事件\n       *\n       * $().on({eventName: fn}, selector, data);\n       * $().on({eventName: fn}, selector)\n       * $().on({eventName: fn})\n       * $().on(eventName, selector, data, fn);\n       * $().on(eventName, selector, fn);\n       * $().on(eventName, data, fn);\n       * $().on(eventName, fn);\n       * $().on(eventName, false);\n       *\n       * @param eventName\n       * @param selector\n       * @param data\n       * @param callback\n       * @param one 是否是 one 方法，只在 JQ 内部使用\n       * @returns\n       */\n      on: function on(eventName, selector, data, callback, one) {\n        var self = this;\n\n        // 默认\n        // $().on(event, selector, data, callback)\n\n        // event 使用 事件:函数 键值对\n        // event = {\n        //   'event1': callback1,\n        //   'event2': callback2\n        // }\n        //\n        // $().on(event, selector, data)\n        if (eventName && !isString(eventName)) {\n          each(eventName, function (type, fn) {\n            self.on(type, selector, data, fn);\n          });\n\n          return self;\n        }\n\n        // selector 不存在\n        // $().on(event, data, callback)\n        if (!isString(selector) && !isFunction(callback) && callback !== false) {\n          callback = data;\n          data = selector;\n          selector = undefined;\n        }\n\n        // data 不存在\n        // $().on(event, callback)\n        if (isFunction(data) || data === false) {\n          callback = data;\n          data = undefined;\n        }\n\n        // callback 为 false\n        // $().on(event, false)\n        if (callback === false) {\n          callback = fnFalse;\n        }\n\n        if (one === 1) {\n          var origCallback = callback;\n          callback = function () {\n            self.off(eventName, selector, callback);\n            /* eslint prefer-rest-params: 0 */\n            return origCallback.apply(this, arguments);\n          };\n        }\n\n        return this.each(function () {\n          add(this, eventName, callback, data, selector);\n        });\n      },\n\n      /**\n       * 绑定事件，只触发一次\n       * @param eventName\n       * @param selector\n       * @param data\n       * @param callback\n       */\n      one: function one(eventName, selector, data, callback) {\n        var self = this;\n\n        if (!isString(eventName)) {\n          each(eventName, function (type, fn) {\n            type.split(' ').forEach(function (eName) {\n              self.on(eName, selector, data, fn, 1);\n            });\n          });\n        } else {\n          eventName.split(' ').forEach(function (eName) {\n            self.on(eName, selector, data, callback, 1);\n          });\n        }\n\n        return this;\n      },\n\n      /**\n       * 取消绑定事件\n       *\n       * $().off(eventName, selector);\n       * $().off(eventName, callback);\n       * $().off(eventName, false);\n       *\n       */\n      off: function off(eventName, selector, callback) {\n        var self = this;\n\n        // event 使用 事件:函数 键值对\n        // event = {\n        //   'event1': callback1,\n        //   'event2': callback2\n        // }\n        //\n        // $().off(event, selector)\n        if (eventName && !isString(eventName)) {\n          each(eventName, function (type, fn) {\n            self.off(type, selector, fn);\n          });\n\n          return self;\n        }\n\n        // selector 不存在\n        // $().off(event, callback)\n        if (!isString(selector) && !isFunction(callback) && callback !== false) {\n          callback = selector;\n          selector = undefined;\n        }\n\n        // callback 为 false\n        // $().off(event, false)\n        if (callback === false) {\n          callback = fnFalse;\n        }\n\n        return self.each(function () {\n          remove(this, eventName, callback, selector);\n        });\n      },\n\n      /**\n       * 触发一个事件\n       * @param eventName\n       * @param data\n       * @returns {*|JQ}\n       */\n      trigger: function trigger(eventName, data) {\n        var isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(eventName) > -1;\n        var evt;\n\n        if (isMouseEvent) {\n          // Note: MouseEvent 无法传入 detail 参数\n          evt = new MouseEvent(eventName, {\n            bubbles: true,\n            cancelable: true,\n          });\n        } else {\n          evt = new CustomEvent(eventName, {\n            detail: data,\n            bubbles: true,\n            cancelable: true,\n          });\n        }\n\n        evt._detail = data;\n\n        return this.each(function () {\n          this.dispatchEvent(evt);\n        });\n      },\n    });\n\n    var globalOptions = {};\n    var jsonpID = 0;\n\n  // 全局事件名\n    var ajaxEvent = {\n      ajaxStart: 'start.mdui.ajax',\n      ajaxSuccess: 'success.mdui.ajax',\n      ajaxError: 'error.mdui.ajax',\n      ajaxComplete: 'complete.mdui.ajax',\n    };\n\n    /**\n     * 判断此请求方法是否通过查询字符串提交参数\n     * @param method 请求方法，大写\n     * @returns {boolean}\n     */\n    function isQueryStringData(method) {\n      return ['GET', 'HEAD'].indexOf(method) >= 0;\n    }\n\n    /**\n     * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n     * @param url\n     * @param query 参数 key=value\n     * @returns {string}\n     */\n    function appendQuery(url, query) {\n      return ((url + \"&\" + query)).replace(/[&?]{1,2}/, '?');\n    }\n\n    $$1.extend({\n\n      /**\n       * 为 ajax 请求设置全局配置参数\n       * @param options\n       */\n      ajaxSetup: function ajaxSetup(options) {\n        $$1.extend(globalOptions, options || {});\n      },\n\n      /**\n       * 发送 ajax 请求\n       * @param options\n       */\n      ajax: function ajax(options) {\n        // 配置参数\n        var defaults = {\n          // 请求方式\n          method: 'GET',\n          // 请求的数据，查询字符串或对象\n          data: false,\n          // 是否把数据转换为查询字符串发送，为 false 时不进行自动转换。\n          processData: true,\n          // 是否为异步请求\n          async: true,\n          // 是否从缓存中读取，只对 GET/HEAD 请求有效，dataType 为 jsonp 时为 false\n          cache: true,\n          // HTTP 访问认证的用户名\n          username: '',\n          // HTTP 访问认证的密码\n          password: '',\n          // 一个键值对，随着请求一起发送\n          headers: {},\n          // 设置 XHR 对象\n          xhrFields: {},\n          // 一个 HTTP 代码和函数的对象\n          statusCode: {},\n          // 预期服务器返回的数据类型 text、json、jsonp\n          dataType: 'text',\n          // jsonp 请求的回调函数名称\n          jsonp: 'callback',\n          // （string 或 Function）使用指定的回调函数名代替自动生成的回调函数名\n          jsonpCallback: function () {\n            jsonpID += 1;\n\n            return (\"mduijsonp_\" + (Date.now()) + \"_\" + jsonpID);\n          },\n          // 发送信息至服务器时内容编码类型\n          contentType: 'application/x-www-form-urlencoded',\n          // 设置请求超时时间（毫秒）\n          timeout: 0,\n          // 是否在 document 上触发全局 ajax 事件\n          global: true,\n          // beforeSend:    function (XMLHttpRequest) 请求发送前执行，返回 false 可取消本次 ajax 请求\n          // success:       function (data, textStatus, XMLHttpRequest) 请求成功时调用\n          // error:         function (XMLHttpRequest, textStatus) 请求失败时调用\n          // statusCode:    {404: function ()}\n          //                200-299之间的状态码表示成功，参数和 success 回调一样；其他状态码表示失败，参数和 error 回调一样\n          // complete:      function (XMLHttpRequest, textStatus) 请求完成后回调函数 (请求成功或失败之后均调用)\n        };\n\n        // 回调函数\n        var callbacks = [\n          'beforeSend',\n          'success',\n          'error',\n          'statusCode',\n          'complete' ];\n\n        // 是否已取消请求\n        var isCanceled = false;\n\n        // 保存全局配置\n        var globals = globalOptions;\n\n        // 事件参数\n        var eventParams = {};\n\n        // 合并全局参数到默认参数，全局回调函数不覆盖\n        each(globals, function (key, value) {\n          if (callbacks.indexOf(key) < 0) {\n            defaults[key] = value;\n          }\n        });\n\n        // 参数合并\n        options = $$1.extend({}, defaults, options);\n\n        /**\n         * 触发全局事件\n         * @param event string 事件名\n         * @param xhr XMLHttpRequest 事件参数\n         */\n        function triggerEvent(event, xhr) {\n          if (options.global) {\n            $$1(document).trigger(event, xhr);\n          }\n        }\n\n        /**\n         * 触发 XHR 回调和事件\n         * @param callback string 回调函数名称\n         * @param args\n         */\n        function triggerCallback(callback) {\n          var args = [], len = arguments.length - 1;\n          while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n          var result1;\n          var result2;\n\n          if (callback) {\n            // 全局回调\n            if (callback in globals) {\n              result1 = globals[callback].apply(globals, args);\n            }\n\n            // 自定义回调\n            if (options[callback]) {\n              result2 = options[callback].apply(options, args);\n            }\n\n            // beforeSend 回调返回 false 时取消 ajax 请求\n            if (callback === 'beforeSend' && (result1 === false || result2 === false)) {\n              isCanceled = true;\n            }\n          }\n        }\n\n        // 请求方式转为大写\n        var method = options.method.toUpperCase();\n\n        // 默认使用当前页面 URL\n        if (!options.url) {\n          options.url = window.location.toString();\n        }\n\n        // 需要发送的数据\n        // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n        var sendData;\n        if (\n          (isQueryStringData(method) || options.processData)\n          && options.data\n          && [ArrayBuffer, Blob, Document, FormData].indexOf(options.data.constructor) < 0\n        ) {\n          sendData = isString(options.data) ? options.data : $$1.param(options.data);\n        } else {\n          sendData = options.data;\n        }\n\n        // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n        if (isQueryStringData(method) && sendData) {\n          // 查询字符串拼接到 URL 中\n          options.url = appendQuery(options.url, sendData);\n          sendData = null;\n        }\n\n        // JSONP\n        if (options.dataType === 'jsonp') {\n          // URL 中添加自动生成的回调函数名\n          var callbackName = isFunction(options.jsonpCallback)\n            ? options.jsonpCallback()\n            : options.jsonpCallback;\n          var requestUrl = appendQuery(options.url, ((options.jsonp) + \"=\" + callbackName));\n\n          eventParams.options = options;\n\n          triggerEvent(ajaxEvent.ajaxStart, eventParams);\n          triggerCallback('beforeSend', null);\n\n          if (isCanceled) {\n            return undefined;\n          }\n\n          var abortTimeout;\n\n          // 创建 script\n          var script = document.createElement('script');\n          script.type = 'text/javascript';\n\n          // 创建 script 失败\n          script.onerror = function () {\n            if (abortTimeout) {\n              clearTimeout(abortTimeout);\n            }\n\n            triggerEvent(ajaxEvent.ajaxError, eventParams);\n            triggerCallback('error', null, 'scripterror');\n\n            triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n            triggerCallback('complete', null, 'scripterror');\n          };\n\n          script.src = requestUrl;\n\n          // 处理\n          window[callbackName] = function (data) {\n            if (abortTimeout) {\n              clearTimeout(abortTimeout);\n            }\n\n            eventParams.data = data;\n\n            triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n            triggerCallback('success', data, 'success', null);\n\n            $$1(script).remove();\n            script = null;\n            delete window[callbackName];\n          };\n\n          $$1('head').append(script);\n\n          if (options.timeout > 0) {\n            abortTimeout = setTimeout(function () {\n              $$1(script).remove();\n              script = null;\n\n              triggerEvent(ajaxEvent.ajaxError, eventParams);\n              triggerCallback('error', null, 'timeout');\n            }, options.timeout);\n          }\n\n          return undefined;\n        }\n\n        // GET/HEAD 请求的缓存处理\n        if (isQueryStringData(method) && !options.cache) {\n          options.url = appendQuery(options.url, (\"_=\" + (Date.now())));\n        }\n\n        // 创建 XHR\n        var xhr = new XMLHttpRequest();\n\n        xhr.open(method, options.url, options.async, options.username, options.password);\n\n        if (\n          options.contentType\n          || (\n            sendData\n            && !isQueryStringData(method)\n            && options.contentType !== false\n          )\n        ) {\n          xhr.setRequestHeader('Content-Type', options.contentType);\n        }\n\n        // 设置 Accept\n        if (options.dataType === 'json') {\n          xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n        }\n\n        // 添加 headers\n        if (options.headers) {\n          each(options.headers, function (key, value) {\n            xhr.setRequestHeader(key, value);\n          });\n        }\n\n        // 检查是否是跨域请求\n        if (options.crossDomain === undefined) {\n          options.crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(options.url)\n            && RegExp.$2 !== window.location.host;\n        }\n\n        if (!options.crossDomain) {\n          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        }\n\n        if (options.xhrFields) {\n          each(options.xhrFields, function (key, value) {\n            xhr[key] = value;\n          });\n        }\n\n        eventParams.xhr = xhr;\n        eventParams.options = options;\n\n        var xhrTimeout;\n\n        xhr.onload = function () {\n          if (xhrTimeout) {\n            clearTimeout(xhrTimeout);\n          }\n\n          // 包含成功或错误代码的字符串\n          var textStatus;\n\n          // AJAX 返回的 HTTP 响应码是否表示成功\n          var isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) || xhr.status === 0;\n\n          var responseData;\n\n          if (isHttpStatusSuccess) {\n            if (xhr.status === 204 || method === 'HEAD') {\n              textStatus = 'nocontent';\n            } else if (xhr.status === 304) {\n              textStatus = 'notmodified';\n            } else {\n              textStatus = 'success';\n            }\n\n            if (options.dataType === 'json') {\n              try {\n                responseData = JSON.parse(xhr.responseText);\n                eventParams.data = responseData;\n              } catch (err) {\n                textStatus = 'parsererror';\n\n                triggerEvent(ajaxEvent.ajaxError, eventParams);\n                triggerCallback('error', xhr, textStatus);\n              }\n\n              if (textStatus !== 'parsererror') {\n                triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n                triggerCallback('success', responseData, textStatus, xhr);\n              }\n            } else {\n              responseData = xhr.responseType === 'text' || xhr.responseType === ''\n                ? xhr.responseText\n                : xhr.response;\n              eventParams.data = responseData;\n\n              triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n              triggerCallback('success', responseData, textStatus, xhr);\n            }\n          } else {\n            textStatus = 'error';\n\n            triggerEvent(ajaxEvent.ajaxError, eventParams);\n            triggerCallback('error', xhr, textStatus);\n          }\n\n          // statusCode\n          each([globals.statusCode, options.statusCode], function (i, func) {\n            if (func && func[xhr.status]) {\n              if (isHttpStatusSuccess) {\n                func[xhr.status](responseData, textStatus, xhr);\n              } else {\n                func[xhr.status](xhr, textStatus);\n              }\n            }\n          });\n\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', xhr, textStatus);\n        };\n\n        xhr.onerror = function () {\n          if (xhrTimeout) {\n            clearTimeout(xhrTimeout);\n          }\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', xhr, xhr.statusText);\n\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', xhr, 'error');\n        };\n\n        xhr.onabort = function () {\n          var textStatus = 'abort';\n\n          if (xhrTimeout) {\n            textStatus = 'timeout';\n            clearTimeout(xhrTimeout);\n          }\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', xhr, textStatus);\n\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', xhr, textStatus);\n        };\n\n        // ajax start 回调\n        triggerEvent(ajaxEvent.ajaxStart, eventParams);\n        triggerCallback('beforeSend', xhr);\n\n        if (isCanceled) {\n          return xhr;\n        }\n\n        // Timeout\n        if (options.timeout > 0) {\n          xhrTimeout = setTimeout(function () {\n            xhr.abort();\n          }, options.timeout);\n        }\n\n        // 发送 XHR\n        xhr.send(sendData);\n\n        return xhr;\n      },\n    });\n\n  // 监听全局事件\n  //\n  // 通过 $(document).on('success.mdui.ajax', function (event, params) {}) 调用时，包含两个参数\n  // event: 事件对象\n  // params: {\n  //   xhr: XMLHttpRequest 对象\n  //   options: ajax 请求的配置参数\n  //   data: ajax 请求返回的数据\n  // }\n\n  // 全局 Ajax 事件快捷方法\n  // $(document).ajaxStart(function (event, xhr, options) {})\n  // $(document).ajaxSuccess(function (event, xhr, options, data) {})\n  // $(document).ajaxError(function (event, xhr, options) {})\n  // $(document).ajaxComplete(function (event, xhr, options) {})\n    each(ajaxEvent, function (name, eventName) {\n      $$1.fn[name] = function (fn) {\n        return this.on(eventName, function (e, params) {\n          fn(e, params.xhr, params.options, params.data);\n        });\n      };\n    });\n\n    return $$1;\n\n  }());\n\n\n  /**\n   * =============================================================================\n   * ************   定义全局变量   ************\n   * =============================================================================\n   */\n\n  var $document = $(document);\n  var $window = $(window);\n\n  /**\n   * 队列 -- 当前队列的 api 和 jquery 不一样，所以不打包进 mdui.JQ 里\n   */\n  var queue = {};\n  (function () {\n    var queueData = [];\n\n    /**\n     * 写入队列\n     * @param queueName 对列名\n     * @param func 函数名，该参数为空时，返回所有队列\n     */\n    queue.queue = function (queueName, func) {\n      if (queueData[queueName] === undefined) {\n        queueData[queueName] = [];\n      }\n\n      if (func === undefined) {\n        return queueData[queueName];\n      }\n\n      queueData[queueName].push(func);\n    };\n\n    /**\n     * 从队列中移除第一个函数，并执行该函数\n     * @param queueName\n     */\n    queue.dequeue = function (queueName) {\n      if (queueData[queueName] !== undefined && queueData[queueName].length) {\n        (queueData[queueName].shift())();\n      }\n    };\n\n  })();\n\n  /**\n   * touch 事件后的 500ms 内禁用 mousedown 事件\n   *\n   * 不支持触控的屏幕上事件顺序为 mousedown -> mouseup -> click\n   * 支持触控的屏幕上事件顺序为 touchstart -> touchend -> mousedown -> mouseup -> click\n   */\n  var TouchHandler = {\n    touches: 0,\n\n    /**\n     * 该事件是否被允许\n     * 在执行事件前调用该方法判断事件是否可以执行\n     * @param e\n     * @returns {boolean}\n     */\n    isAllow: function (e) {\n      var allow = true;\n\n      if (\n        TouchHandler.touches &&\n        [\n          'mousedown',\n          'mouseup',\n          'mousemove',\n          'click',\n          'mouseover',\n          'mouseout',\n          'mouseenter',\n          'mouseleave',\n        ].indexOf(e.type) > -1\n      ) {\n        // 触发了 touch 事件后阻止鼠标事件\n        allow = false;\n      }\n\n      return allow;\n    },\n\n    /**\n     * 在 touchstart 和 touchmove、touchend、touchcancel 事件中调用该方法注册事件\n     * @param e\n     */\n    register: function (e) {\n      if (e.type === 'touchstart') {\n        // 触发了 touch 事件\n        TouchHandler.touches += 1;\n      } else if (['touchmove', 'touchend', 'touchcancel'].indexOf(e.type) > -1) {\n        // touch 事件结束 500ms 后解除对鼠标事件的阻止\n        setTimeout(function () {\n          if (TouchHandler.touches) {\n            TouchHandler.touches -= 1;\n          }\n        }, 500);\n      }\n    },\n\n    start: 'touchstart mousedown',\n    move: 'touchmove mousemove',\n    end: 'touchend mouseup',\n    cancel: 'touchcancel mouseleave',\n    unlock: 'touchend touchmove touchcancel',\n  };\n\n  // 测试事件\n  // 在每一个事件中都使用 TouchHandler.isAllow(e) 判断事件是否可执行\n  // 在 touchstart 和 touchmove、touchend、touchcancel\n  // (function () {\n  //\n  //   $document\n  //     .on(TouchHandler.start, function (e) {\n  //       if (!TouchHandler.isAllow(e)) {\n  //         return;\n  //       }\n  //       TouchHandler.register(e);\n  //       console.log(e.type);\n  //     })\n  //     .on(TouchHandler.move, function (e) {\n  //       if (!TouchHandler.isAllow(e)) {\n  //         return;\n  //       }\n  //       console.log(e.type);\n  //     })\n  //     .on(TouchHandler.end, function (e) {\n  //       if (!TouchHandler.isAllow(e)) {\n  //         return;\n  //       }\n  //       console.log(e.type);\n  //     })\n  //     .on(TouchHandler.unlock, TouchHandler.register);\n  // })();\n\n  $(function () {\n    // 避免页面加载完后直接执行css动画\n    // https://css-tricks.com/transitions-only-after-page-load/\n\n    setTimeout(function () {\n      $('body').addClass('mdui-loaded');\n    }, 0);\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   MDUI 内部使用的函数   ************\n   * =============================================================================\n   */\n\n  /**\n   * 解析 DATA API 的参数\n   * @param str\n   * @returns {*}\n   */\n  var parseOptions = function (str) {\n    var options = {};\n\n    if (str === null || !str) {\n      return options;\n    }\n\n    if (typeof str === 'object') {\n      return str;\n    }\n\n    /* jshint ignore:start */\n    var start = str.indexOf('{');\n    try {\n      options = (new Function('',\n        'var json = ' + str.substr(start) +\n        '; return JSON.parse(JSON.stringify(json));'))();\n    } catch (e) {\n    }\n    /* jshint ignore:end */\n\n    return options;\n  };\n\n  /**\n   * 绑定组件的事件\n   * @param eventName 事件名\n   * @param pluginName 插件名\n   * @param inst 插件实例\n   * @param trigger 在该元素上触发\n   * @param obj 事件参数\n   */\n  var componentEvent = function (eventName, pluginName, inst, trigger, obj) {\n    if (!obj) {\n      obj = {};\n    }\n\n    obj.inst = inst;\n\n    var fullEventName = eventName + '.mdui.' + pluginName;\n\n    // jQuery 事件\n    if (typeof jQuery !== 'undefined') {\n      jQuery(trigger).trigger(fullEventName, obj);\n    }\n\n    // JQ 事件\n    $(trigger).trigger(fullEventName, obj);\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   开放的常用方法   ************\n   * =============================================================================\n   */\n\n  $.fn.extend({\n\n    /**\n     * 执行强制重绘\n     */\n    reflow: function () {\n      return this.each(function () {\n        return this.clientLeft;\n      });\n    },\n\n    /**\n     * 设置 transition 时间\n     * @param duration\n     */\n    transition: function (duration) {\n      if (typeof duration !== 'string') {\n        duration = duration + 'ms';\n      }\n\n      return this.each(function () {\n        this.style.webkitTransitionDuration = duration;\n        this.style.transitionDuration = duration;\n      });\n    },\n\n    /**\n     * transition 动画结束回调\n     * @param callback\n     * @returns {transitionEnd}\n     */\n    transitionEnd: function (callback) {\n      var events = [\n          'webkitTransitionEnd',\n          'transitionend',\n        ];\n      var i;\n      var _this = this;\n\n      function fireCallBack(e) {\n        if (e.target !== this) {\n          return;\n        }\n\n        callback.call(this, e);\n\n        for (i = 0; i < events.length; i++) {\n          _this.off(events[i], fireCallBack);\n        }\n      }\n\n      if (callback) {\n        for (i = 0; i < events.length; i++) {\n          _this.on(events[i], fireCallBack);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * 设置 transform-origin 属性\n     * @param transformOrigin\n     */\n    transformOrigin: function (transformOrigin) {\n      return this.each(function () {\n        this.style.webkitTransformOrigin = transformOrigin;\n        this.style.transformOrigin = transformOrigin;\n      });\n    },\n\n    /**\n     * 设置 transform 属性\n     * @param transform\n     */\n    transform: function (transform) {\n      return this.each(function () {\n        this.style.webkitTransform = transform;\n        this.style.transform = transform;\n      });\n    },\n\n  });\n\n  $.extend({\n    /**\n     * 创建并显示遮罩\n     * @param zIndex 遮罩层的 z-index\n     */\n    showOverlay: function (zIndex) {\n      var $overlay = $('.mdui-overlay');\n\n      if ($overlay.length) {\n        $overlay.data('isDeleted', 0);\n\n        if (zIndex !== undefined) {\n          $overlay.css('z-index', zIndex);\n        }\n      } else {\n        if (zIndex === undefined) {\n          zIndex = 2000;\n        }\n\n        $overlay = $('<div class=\"mdui-overlay\">')\n          .appendTo(document.body)\n          .reflow()\n          .css('z-index', zIndex);\n      }\n\n      var level = $overlay.data('overlay-level') || 0;\n      return $overlay\n        .data('overlay-level', ++level)\n        .addClass('mdui-overlay-show');\n    },\n\n    /**\n     * 隐藏遮罩层\n     * @param force 是否强制隐藏遮罩\n     */\n    hideOverlay: function (force) {\n      var $overlay = $('.mdui-overlay');\n\n      if (!$overlay.length) {\n        return;\n      }\n\n      var level = force ? 1 : $overlay.data('overlay-level');\n      if (level > 1) {\n        $overlay.data('overlay-level', --level);\n        return;\n      }\n\n      $overlay\n        .data('overlay-level', 0)\n        .removeClass('mdui-overlay-show')\n        .data('isDeleted', 1)\n        .transitionEnd(function () {\n          if ($overlay.data('isDeleted')) {\n            $overlay.remove();\n          }\n        });\n    },\n\n    /**\n     * 锁定屏幕\n     */\n    lockScreen: function () {\n      var $body = $('body');\n\n      // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n      var newBodyWidth = $body.width();\n\n      $body\n        .addClass('mdui-locked')\n        .width(newBodyWidth);\n\n      var level = $body.data('lockscreen-level') || 0;\n      $body.data('lockscreen-level', ++level);\n    },\n\n    /**\n     * 解除屏幕锁定\n     * @param force 是否强制解锁屏幕\n     */\n    unlockScreen: function (force) {\n      var $body = $('body');\n\n      var level = force ? 1 : $body.data('lockscreen-level');\n      if (level > 1) {\n        $body.data('lockscreen-level', --level);\n        return;\n      }\n\n      $body\n        .data('lockscreen-level', 0)\n        .removeClass('mdui-locked')\n        .width('');\n    },\n\n    /**\n     * 函数节流\n     * @param fn\n     * @param delay\n     * @returns {Function}\n     */\n    throttle: function (fn, delay) {\n      var timer = null;\n      if (!delay || delay < 16) {\n        delay = 16;\n      }\n\n      return function () {\n        var _this = this;\n        var args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            fn.apply(_this, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    },\n  });\n\n  /**\n   * 生成唯一 id\n   * @param string name id的名称，若该名称对于的guid不存在，则生成新的guid并返回；若已存在，则返回原有guid\n   * @returns {string}\n   */\n  (function () {\n    var GUID = {};\n\n    $.extend({\n      guid: function (name) {\n        if (typeof name !== 'undefined' && typeof GUID[name] !== 'undefined') {\n          return GUID[name];\n        }\n\n        function s4() {\n          return Math.floor((1 + Math.random()) * 0x10000)\n            .toString(16)\n            .substring(1);\n        }\n\n        var guid = s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\n        if (typeof name !== 'undefined') {\n          GUID[name] = guid;\n        }\n\n        return guid;\n      },\n    });\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Mutation   ************\n   * =============================================================================\n   */\n\n  (function () {\n    /**\n     * API 初始化代理, 当 DOM 突变再次执行代理的初始化函数. 使用方法:\n     *\n     * 1. 代理组件 API 执行初始化函数, selector 必须为字符串.\n     *    mdui.mutation(selector, apiInit);\n     *    mutation 会执行 $(selector).each(apiInit)\n     *\n     * 2. 突变时, 再次执行代理的初始化函数\n     *    mdui.mutation()        等价 $(document).mutation()\n     *    $(selector).mutation() 在 selector 节点内进行 API 初始化\n     *\n     * 原理:\n     *\n     *    mutation 执行了 $().data('mdui.mutation', [selector]).\n     *    当元素被重构时, 该数据会丢失, 由此判断是否突变.\n     *\n     * 提示:\n     *\n     *    类似 Drawer 可以使用委托事件完成.\n     *    类似 Collapse 需要知道 DOM 发生突变, 并再次进行初始化.\n     */\n    var entries = { };\n\n    function mutation(selector, apiInit, that, i, item) {\n      var $this = $(that);\n      var m = $this.data('mdui.mutation');\n\n      if (!m) {\n        m = [];\n        $this.data('mdui.mutation', m);\n      }\n\n      if (m.indexOf(selector) === -1) {\n        m.push(selector);\n        apiInit.call(that, i, item);\n      }\n    }\n\n    $.fn.extend({\n      mutation: function () {\n        return this.each(function (i, item) {\n          var $this = $(this);\n          $.each(entries, function (selector, apiInit) {\n            if ($this.is(selector)) {\n              mutation(selector, apiInit, $this[0], i, item);\n            }\n\n            $this.find(selector).each(function (i, item) {\n              mutation(selector, apiInit, this, i, item);\n            });\n          });\n        });\n      },\n    });\n\n    mdui.mutation = function (selector, apiInit) {\n      if (typeof selector !== 'string' || typeof apiInit !== 'function') {\n        $(document).mutation();\n        return;\n      }\n\n      entries[selector] = apiInit;\n      $(selector).each(function (i, item) {\n        mutation(selector, apiInit, this, i, item);\n      });\n    };\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Headroom.js   ************\n   * =============================================================================\n   */\n\n  mdui.Headroom = (function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      tolerance: 5,                                 // 滚动条滚动多少距离开始隐藏或显示元素，{down: num, up: num}，或数字\n      offset: 0,                                    // 在页面顶部多少距离内滚动不会隐藏元素\n      initialClass: 'mdui-headroom',                // 初始化时添加的类\n      pinnedClass: 'mdui-headroom-pinned-top',      // 元素固定时添加的类\n      unpinnedClass: 'mdui-headroom-unpinned-top',  // 元素隐藏时添加的类\n    };\n\n    /**\n     * Headroom\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n    function Headroom(selector, opts) {\n      var _this = this;\n\n      _this.$headroom = $(selector).eq(0);\n      if (!_this.$headroom.length) {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = _this.$headroom.data('mdui.headroom');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n      // 数值转为 {down: bum, up: num}\n      var tolerance = _this.options.tolerance;\n      if (tolerance !== Object(tolerance)) {\n        _this.options.tolerance = {\n          down: tolerance,\n          up: tolerance,\n        };\n      }\n\n      _this._init();\n    }\n\n    /**\n     * 初始化\n     * @private\n     */\n    Headroom.prototype._init = function () {\n      var _this = this;\n\n      _this.state = 'pinned';\n      _this.$headroom\n        .addClass(_this.options.initialClass)\n        .removeClass(_this.options.pinnedClass + ' ' + _this.options.unpinnedClass);\n\n      _this.inited = false;\n      _this.lastScrollY = 0;\n\n      _this._attachEvent();\n    };\n\n    /**\n     * 监听滚动事件\n     * @private\n     */\n    Headroom.prototype._attachEvent = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this.lastScrollY = window.pageYOffset;\n        _this.inited = true;\n\n        $window.on('scroll', function () {\n          _this._scroll();\n        });\n      }\n    };\n\n    /**\n     * 滚动时的处理\n     * @private\n     */\n    Headroom.prototype._scroll = function () {\n      var _this = this;\n      _this.rafId = window.requestAnimationFrame(function () {\n        var currentScrollY = window.pageYOffset;\n        var direction = currentScrollY > _this.lastScrollY ? 'down' : 'up';\n        var toleranceExceeded =\n          Math.abs(currentScrollY - _this.lastScrollY) >=\n          _this.options.tolerance[direction];\n\n        if (\n          currentScrollY > _this.lastScrollY &&\n          currentScrollY >= _this.options.offset &&\n          toleranceExceeded) {\n          _this.unpin();\n        } else if (\n          (currentScrollY < _this.lastScrollY && toleranceExceeded) ||\n          currentScrollY <= _this.options.offset\n        ) {\n          _this.pin();\n        }\n\n        _this.lastScrollY = currentScrollY;\n      });\n    };\n\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n    var transitionEnd = function (inst) {\n      if (inst.state === 'pinning') {\n        inst.state = 'pinned';\n        componentEvent('pinned', 'headroom', inst, inst.$headroom);\n      }\n\n      if (inst.state === 'unpinning') {\n        inst.state = 'unpinned';\n        componentEvent('unpinned', 'headroom', inst, inst.$headroom);\n      }\n    };\n\n    /**\n     * 固定住\n     */\n    Headroom.prototype.pin = function () {\n      var _this = this;\n\n      if (\n        _this.state === 'pinning' ||\n        _this.state === 'pinned' ||\n        !_this.$headroom.hasClass(_this.options.initialClass)\n      ) {\n        return;\n      }\n\n      componentEvent('pin', 'headroom', _this, _this.$headroom);\n\n      _this.state = 'pinning';\n\n      _this.$headroom\n        .removeClass(_this.options.unpinnedClass)\n        .addClass(_this.options.pinnedClass)\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n    };\n\n    /**\n     * 不固定住\n     */\n    Headroom.prototype.unpin = function () {\n      var _this = this;\n\n      if (\n        _this.state === 'unpinning' ||\n        _this.state === 'unpinned' ||\n        !_this.$headroom.hasClass(_this.options.initialClass)\n      ) {\n        return;\n      }\n\n      componentEvent('unpin', 'headroom', _this, _this.$headroom);\n\n      _this.state = 'unpinning';\n\n      _this.$headroom\n        .removeClass(_this.options.pinnedClass)\n        .addClass(_this.options.unpinnedClass)\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n    };\n\n    /**\n     * 启用\n     */\n    Headroom.prototype.enable = function () {\n      var _this = this;\n\n      if (!_this.inited) {\n        _this._init();\n      }\n    };\n\n    /**\n     * 禁用\n     */\n    Headroom.prototype.disable = function () {\n      var _this = this;\n\n      if (_this.inited) {\n        _this.inited = false;\n        _this.$headroom\n          .removeClass([\n            _this.options.initialClass,\n            _this.options.pinnedClass,\n            _this.options.unpinnedClass,\n          ].join(' '));\n\n        $window.off('scroll', function () {\n          _this._scroll();\n        });\n\n        window.cancelAnimationFrame(_this.rafId);\n      }\n    };\n\n    /**\n     * 获取当前状态 pinning | pinned | unpinning | unpinned\n     */\n    Headroom.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Headroom;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Headroom 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    mdui.mutation('[mdui-headroom]', function () {\n      var $this = $(this);\n      var options = parseOptions($this.attr('mdui-headroom'));\n\n      var inst = $this.data('mdui.headroom');\n      if (!inst) {\n        inst = new mdui.Headroom($this, options);\n        $this.data('mdui.headroom', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   供 Collapse、 Panel 调用的折叠内容块插件   ************\n   * =============================================================================\n   */\n  var CollapsePrivate = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      accordion: false,                             // 是否使用手风琴效果\n    };\n\n    /**\n     * 折叠内容块\n     * @param selector\n     * @param opts\n     * @param namespace\n     * @constructor\n     */\n    function Collapse(selector, opts, namespace) {\n      var _this = this;\n\n      // 命名空间\n      _this.ns = namespace;\n\n      // 类名\n      var classpPefix = 'mdui-' + _this.ns + '-item';\n      _this.class_item = classpPefix;\n      _this.class_item_open = classpPefix + '-open';\n      _this.class_header = classpPefix + '-header';\n      _this.class_body = classpPefix + '-body';\n\n      // 折叠面板元素\n      _this.$collapse = $(selector).eq(0);\n      if (!_this.$collapse.length) {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = _this.$collapse.data('mdui.' + _this.ns);\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n      _this.$collapse.on('click', '.' + _this.class_header, function () {\n        var $item = $(this).parent('.' + _this.class_item);\n        if (_this.$collapse.children($item).length) {\n          _this.toggle($item);\n        }\n      });\n\n      // 绑定关闭按钮\n      _this.$collapse.on('click', '[mdui-' + _this.ns + '-item-close]', function () {\n        var $item = $(this).parents('.' + _this.class_item).eq(0);\n        if (_this._isOpen($item)) {\n          _this.close($item);\n        }\n      });\n    }\n\n    /**\n     * 指定 item 是否处于打开状态\n     * @param $item\n     * @returns {boolean}\n     * @private\n     */\n    Collapse.prototype._isOpen = function ($item) {\n      return $item.hasClass(this.class_item_open);\n    };\n\n    /**\n     * 获取指定 item\n     * @param item\n     * @returns {*}\n     * @private\n     */\n    Collapse.prototype._getItem = function (item) {\n      var _this = this;\n\n      if (parseInt(item) === item) {\n        // item 是索引号\n        return _this.$collapse.children('.' + _this.class_item).eq(item);\n      }\n\n      return $(item).eq(0);\n    };\n\n    /**\n     * 动画结束回调\n     * @param inst\n     * @param $content\n     * @param $item\n     */\n    var transitionEnd = function (inst, $content, $item) {\n      if (inst._isOpen($item)) {\n        $content\n          .transition(0)\n          .height('auto')\n          .reflow()\n          .transition('');\n\n        componentEvent('opened', inst.ns, inst, $item[0]);\n      } else {\n        $content.height('');\n\n        componentEvent('closed', inst.ns, inst, $item[0]);\n      }\n    };\n\n    /**\n     * 打开指定面板项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.open = function (item) {\n      var _this = this;\n      var $item = _this._getItem(item);\n\n      if (_this._isOpen($item)) {\n        return;\n      }\n\n      // 关闭其他项\n      if (_this.options.accordion) {\n        _this.$collapse.children('.' + _this.class_item_open).each(function () {\n          var $tmpItem = $(this);\n\n          if ($tmpItem !== $item) {\n            _this.close($tmpItem);\n          }\n        });\n      }\n\n      var $content = $item.children('.' + _this.class_body);\n\n      $content\n        .height($content[0].scrollHeight)\n        .transitionEnd(function () {\n          transitionEnd(_this, $content, $item);\n        });\n\n      componentEvent('open', _this.ns, _this, $item[0]);\n\n      $item.addClass(_this.class_item_open);\n    };\n\n    /**\n     * 关闭指定项\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n     */\n    Collapse.prototype.close = function (item) {\n      var _this = this;\n      var $item = _this._getItem(item);\n\n      if (!_this._isOpen($item)) {\n        return;\n      }\n\n      var $content = $item.children('.' + _this.class_body);\n\n      componentEvent('close', _this.ns, _this, $item[0]);\n\n      $item.removeClass(_this.class_item_open);\n\n      $content\n        .transition(0)\n        .height($content[0].scrollHeight)\n        .reflow()\n        .transition('')\n        .height('')\n        .transitionEnd(function () {\n          transitionEnd(_this, $content, $item);\n        });\n    };\n\n    /**\n     * 切换指定项的状态\n     * @param item 面板项的索引号或 DOM 元素或 CSS 选择器或 JQ 对象\n     */\n    Collapse.prototype.toggle = function (item) {\n      var _this = this;\n      var $item = _this._getItem(item);\n\n      if (_this._isOpen($item)) {\n        _this.close($item);\n      } else {\n        _this.open($item);\n      }\n    };\n\n    /**\n     * 打开所有项\n     */\n    Collapse.prototype.openAll = function () {\n      var _this = this;\n\n      _this.$collapse.children('.' + _this.class_item).each(function () {\n        var $tmpItem = $(this);\n\n        if (!_this._isOpen($tmpItem)) {\n          _this.open($tmpItem);\n        }\n      });\n    };\n\n    /**\n     * 关闭所有项\n     */\n    Collapse.prototype.closeAll = function () {\n      var _this = this;\n\n      _this.$collapse.children('.' + _this.class_item).each(function () {\n        var $tmpItem = $(this);\n\n        if (_this._isOpen($tmpItem)) {\n          _this.close($tmpItem);\n        }\n      });\n    };\n\n    return Collapse;\n  })();\n\n  /**\n   * =============================================================================\n   * ************   Collapse 折叠内容块插件   ************\n   * =============================================================================\n   */\n  mdui.Collapse = (function () {\n\n    function Collapse(selector, opts) {\n      return new CollapsePrivate(selector, opts, 'collapse');\n    }\n\n    return Collapse;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Collapse 自定义属性   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    mdui.mutation('[mdui-collapse]', function () {\n      var $target = $(this);\n\n      var inst = $target.data('mdui.collapse');\n      if (!inst) {\n        var options = parseOptions($target.attr('mdui-collapse'));\n        inst = new mdui.Collapse($target, options);\n        $target.data('mdui.collapse', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Table 表格   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 生成 checkbox 的 HTML 结构\n     * @param tag\n     * @returns {string}\n     */\n    var checkboxHTML = function (tag) {\n      return '<' + tag + ' class=\"mdui-table-cell-checkbox\">' +\n               '<label class=\"mdui-checkbox\">' +\n                 '<input type=\"checkbox\"/>' +\n                 '<i class=\"mdui-checkbox-icon\"></i>' +\n               '</label>' +\n             '</' + tag + '>';\n    };\n\n    /**\n     * Table 表格\n     * @param selector\n     * @constructor\n     */\n    function Table(selector) {\n      var _this = this;\n\n      _this.$table = $(selector).eq(0);\n\n      if (!_this.$table.length) {\n        return;\n      }\n\n      _this.init();\n    }\n\n    /**\n     * 初始化\n     */\n    Table.prototype.init = function () {\n      var _this = this;\n\n      _this.$thRow = _this.$table.find('thead tr');\n      _this.$tdRows = _this.$table.find('tbody tr');\n      _this.$tdCheckboxs = $();\n      _this.selectable = _this.$table.hasClass('mdui-table-selectable');\n      _this.selectedRow = 0;\n\n      _this._updateThCheckbox();\n      _this._updateTdCheckbox();\n      _this._updateNumericCol();\n    };\n\n    /**\n     * 更新表格行的 checkbox\n     */\n    Table.prototype._updateTdCheckbox = function () {\n      var _this = this;\n\n      _this.$tdRows.each(function () {\n        var $tdRow = $(this);\n\n        // 移除旧的 checkbox\n        $tdRow.find('.mdui-table-cell-checkbox').remove();\n\n        if (!_this.selectable) {\n          return;\n        }\n\n        // 创建 DOM\n        var $checkbox = $(checkboxHTML('td'))\n          .prependTo($tdRow)\n          .find('input[type=\"checkbox\"]');\n\n        // 默认选中的行\n        if ($tdRow.hasClass('mdui-table-row-selected')) {\n          $checkbox[0].checked = true;\n          _this.selectedRow++;\n        }\n\n        // 所有行都选中后，选中表头；否则，不选中表头\n        _this.$thCheckbox[0].checked = _this.selectedRow === _this.$tdRows.length;\n\n        // 绑定事件\n        $checkbox.on('change', function () {\n          if ($checkbox[0].checked) {\n            $tdRow.addClass('mdui-table-row-selected');\n            _this.selectedRow++;\n          } else {\n            $tdRow.removeClass('mdui-table-row-selected');\n            _this.selectedRow--;\n          }\n\n          // 所有行都选中后，选中表头；否则，不选中表头\n          _this.$thCheckbox[0].checked = _this.selectedRow === _this.$tdRows.length;\n        });\n\n        _this.$tdCheckboxs = _this.$tdCheckboxs.add($checkbox);\n      });\n    };\n\n    /**\n     * 更新表头的 checkbox\n     */\n    Table.prototype._updateThCheckbox = function () {\n      var _this = this;\n\n      // 移除旧的 checkbox\n      _this.$thRow.find('.mdui-table-cell-checkbox').remove();\n\n      if (!_this.selectable) {\n        return;\n      }\n\n      _this.$thCheckbox = $(checkboxHTML('th'))\n        .prependTo(_this.$thRow)\n        .find('input[type=\"checkbox\"]')\n        .on('change', function () {\n\n          var isCheckedAll = _this.$thCheckbox[0].checked;\n          _this.selectedRow = isCheckedAll ? _this.$tdRows.length : 0;\n\n          _this.$tdCheckboxs.each(function (i, checkbox) {\n            checkbox.checked = isCheckedAll;\n          });\n\n          _this.$tdRows.each(function (i, row) {\n            $(row)[isCheckedAll ? 'addClass' : 'removeClass']('mdui-table-row-selected');\n          });\n\n        });\n    };\n\n    /**\n     * 更新数值列\n     */\n    Table.prototype._updateNumericCol = function () {\n      var _this = this;\n      var $th;\n      var $tdRow;\n\n      _this.$thRow.find('th').each(function (i, th) {\n        $th = $(th);\n\n        _this.$tdRows.each(function () {\n          $tdRow = $(this);\n          var method = $th.hasClass('mdui-table-col-numeric') ? 'addClass' : 'removeClass';\n          $tdRow.find('td').eq(i)[method]('mdui-table-col-numeric');\n        });\n      });\n    };\n\n    /**\n     * 初始化表格\n     */\n    mdui.mutation('.mdui-table', function () {\n      var $table = $(this);\n      if (!$table.data('mdui.table')) {\n        $table.data('mdui.table', new Table($table));\n      }\n    });\n\n    /**\n     * 更新表格\n     */\n    mdui.updateTables = function () {\n      $(arguments.length ? arguments[0] : '.mdui-table').each(function () {\n        var $table = $(this);\n        var inst = $table.data('mdui.table');\n\n        if (inst) {\n          inst.init();\n        } else {\n          $table.data('mdui.table', new Table($table));\n        }\n      });\n    };\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   涟漪   ************\n   * =============================================================================\n   *\n   * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n   * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n   *\n   * Inspired by https://github.com/fians/Waves\n   */\n\n  (function () {\n\n    var Ripple = {\n\n      /**\n       * 延时，避免手指滑动时也触发涟漪（单位：毫秒）\n       */\n      delay: 200,\n\n      /**\n       * 显示涟漪动画\n       * @param e\n       * @param $ripple\n       */\n      show: function (e, $ripple) {\n\n        // 鼠标右键不产生涟漪\n        if (e.button === 2) {\n          return;\n        }\n\n        // 点击位置坐标\n        var tmp;\n        if ('touches' in e && e.touches.length) {\n          tmp = e.touches[0];\n        } else {\n          tmp = e;\n        }\n\n        var touchStartX = tmp.pageX;\n        var touchStartY = tmp.pageY;\n\n        // 涟漪位置\n        var offset = $ripple.offset();\n        var center = {\n          x: touchStartX - offset.left,\n          y: touchStartY - offset.top,\n        };\n\n        var height = $ripple.innerHeight();\n        var width = $ripple.innerWidth();\n        var diameter = Math.max(\n          Math.pow((Math.pow(height, 2) + Math.pow(width, 2)), 0.5), 48\n        );\n\n        // 涟漪扩散动画\n        var translate =\n          'translate3d(' + (-center.x + width / 2) + 'px, ' + (-center.y + height / 2) + 'px, 0) ' +\n          'scale(1)';\n\n        // 涟漪的 DOM 结构\n        $('<div class=\"mdui-ripple-wave\" style=\"' +\n          'width: ' + diameter + 'px; ' +\n          'height: ' + diameter + 'px; ' +\n          'margin-top:-' + diameter / 2 + 'px; ' +\n          'margin-left:-' + diameter / 2 + 'px; ' +\n          'left:' + center.x + 'px; ' +\n          'top:' + center.y + 'px;\">' +\n          '</div>')\n\n          // 缓存动画效果\n          .data('translate', translate)\n\n          .prependTo($ripple)\n          .reflow()\n          .transform(translate);\n      },\n\n      /**\n       * 隐藏涟漪动画\n       */\n      hide: function (e, element) {\n        var $ripple = $(element || this);\n\n        $ripple.children('.mdui-ripple-wave').each(function () {\n          removeRipple($(this));\n        });\n\n        $ripple.off('touchmove touchend touchcancel mousemove mouseup mouseleave', Ripple.hide);\n      },\n    };\n\n    /**\n     * 隐藏并移除涟漪\n     * @param $wave\n     */\n    function removeRipple($wave) {\n      if (!$wave.length || $wave.data('isRemoved')) {\n        return;\n      }\n\n      $wave.data('isRemoved', true);\n\n      var removeTimeout = setTimeout(function () {\n        $wave.remove();\n      }, 400);\n\n      var translate = $wave.data('translate');\n\n      $wave\n        .addClass('mdui-ripple-wave-fill')\n        .transform(translate.replace('scale(1)', 'scale(1.01)'))\n        .transitionEnd(function () {\n          clearTimeout(removeTimeout);\n\n          $wave\n            .addClass('mdui-ripple-wave-out')\n            .transform(translate.replace('scale(1)', 'scale(1.01)'));\n\n          removeTimeout = setTimeout(function () {\n            $wave.remove();\n          }, 700);\n\n          setTimeout(function () {\n            $wave.transitionEnd(function () {\n              clearTimeout(removeTimeout);\n              $wave.remove();\n            });\n          }, 0);\n        });\n    }\n\n    /**\n     * 显示涟漪，并绑定 touchend 等事件\n     * @param e\n     */\n    function showRipple(e) {\n      if (!TouchHandler.isAllow(e)) {\n        return;\n      }\n\n      TouchHandler.register(e);\n\n      // Chrome 59 点击滚动条时，会在 document 上触发事件\n      if (e.target === document) {\n        return;\n      }\n\n      var $ripple;\n      var $target = $(e.target);\n\n      // 获取含 .mdui-ripple 类的元素\n      if ($target.hasClass('mdui-ripple')) {\n        $ripple = $target;\n      } else {\n        $ripple = $target.parents('.mdui-ripple').eq(0);\n      }\n\n      if ($ripple.length) {\n\n        // 禁用状态的元素上不产生涟漪效果\n        if ($ripple[0].disabled || $ripple.attr('disabled') !== null) {\n          return;\n        }\n\n        if (e.type === 'touchstart') {\n          var hidden = false;\n\n          // toucstart 触发指定时间后开始涟漪动画\n          var timer = setTimeout(function () {\n            timer = null;\n            Ripple.show(e, $ripple);\n          }, Ripple.delay);\n\n          var hideRipple = function (hideEvent) {\n            // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n            if (timer) {\n              clearTimeout(timer);\n              timer = null;\n              Ripple.show(e, $ripple);\n            }\n\n            if (!hidden) {\n              hidden = true;\n              Ripple.hide(hideEvent, $ripple);\n            }\n          };\n\n          // 手指移动后，移除涟漪动画\n          var touchMove = function (moveEvent) {\n            if (timer) {\n              clearTimeout(timer);\n              timer = null;\n            }\n\n            hideRipple(moveEvent);\n          };\n\n          $ripple\n            .on('touchmove', touchMove)\n            .on('touchend touchcancel', hideRipple);\n\n        } else {\n          Ripple.show(e, $ripple);\n          $ripple.on('touchmove touchend touchcancel mousemove mouseup mouseleave', Ripple.hide);\n        }\n      }\n    }\n\n    // 初始化绑定的事件\n    $document\n      .on(TouchHandler.start, showRipple)\n      .on(TouchHandler.unlock, TouchHandler.register);\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Text Field 文本框   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    var getProp = function (obj, prop) {\n      return (\n        typeof obj === 'object' &&\n        obj !== null &&\n        obj[prop] !== undefined &&\n        obj[prop]\n      ) ? obj[prop] : false;\n    };\n\n    /**\n     * 输入框事件\n     * @param e\n     */\n    var inputEvent = function (e) {\n      var input = e.target;\n      var $input = $(input);\n      var event = e.type;\n      var value = $input.val();\n\n      // reInit 为 true 时，需要重新初始化文本框\n      var reInit = getProp(e.detail, 'reInit');\n\n      // domLoadedEvent 为 true 时，为 DOM 加载完毕后自动触发的事件\n      var domLoadedEvent = getProp(e.detail, 'domLoadedEvent');\n\n      // 文本框类型\n      var type = $input.attr('type') || '';\n      if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(type) >= 0) {\n        return;\n      }\n\n      var $textField = $input.parent('.mdui-textfield');\n\n      // 输入框是否聚焦\n      if (event === 'focus') {\n        $textField.addClass('mdui-textfield-focus');\n      }\n\n      if (event === 'blur') {\n        $textField.removeClass('mdui-textfield-focus');\n      }\n\n      // 输入框是否为空\n      if (event === 'blur' || event === 'input') {\n        $textField[(value && value !== '') ? 'addClass' : 'removeClass']('mdui-textfield-not-empty');\n      }\n\n      // 输入框是否禁用\n      $textField[input.disabled ? 'addClass' : 'removeClass']('mdui-textfield-disabled');\n\n      // 表单验证\n      if ((event === 'input' || event === 'blur') && !domLoadedEvent) {\n        if (input.validity) {\n          var method = input.validity.valid ? 'removeClass' : 'addClass';\n          $textField[method]('mdui-textfield-invalid-html5');\n        }\n      }\n\n      // textarea 高度自动调整\n      if (e.target.nodeName.toLowerCase() === 'textarea') {\n\n        // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n        //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n        var inputValue = $input.val();\n        var hasExtraSpace = false;\n        if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n          $input.val(' ' + inputValue);\n          hasExtraSpace = true;\n        }\n\n        // 设置 textarea 高度\n        $input.height('');\n        var height = $input.height();\n        var scrollHeight = input.scrollHeight;\n\n        if (scrollHeight > height) {\n          $input.height(scrollHeight);\n        }\n\n        // 计算完，还原 textarea 的值\n        if (hasExtraSpace) {\n          $input.val(inputValue);\n        }\n      }\n\n      // 实时字数统计\n      if (reInit) {\n        $textField\n          .find('.mdui-textfield-counter')\n          .remove();\n      }\n\n      var maxlength = $input.attr('maxlength');\n      if (maxlength) {\n        if (reInit || domLoadedEvent) {\n          $('<div class=\"mdui-textfield-counter\">' +\n              '<span class=\"mdui-textfield-counter-inputed\"></span> / ' + maxlength +\n            '</div>').appendTo($textField);\n        }\n\n        $textField.find('.mdui-textfield-counter-inputed').text(value.length.toString());\n      }\n\n      // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n      if (\n        $textField.find('.mdui-textfield-helper').length ||\n        $textField.find('.mdui-textfield-error').length ||\n        maxlength\n      ) {\n        $textField.addClass('mdui-textfield-has-bottom');\n      }\n    };\n\n    // 绑定事件\n    $document.on('input focus blur', '.mdui-textfield-input', { useCapture: true }, inputEvent);\n\n    // 可展开文本框展开\n    $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n      $(this)\n\n        // 展开文本框\n        .parents('.mdui-textfield')\n        .addClass('mdui-textfield-expanded')\n\n        // 聚焦到输入框\n        .find('.mdui-textfield-input')[0].focus();\n    });\n\n    // 可展开文本框关闭\n    $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n      $(this)\n\n        // 关闭文本框\n        .parents('.mdui-textfield')\n        .removeClass('mdui-textfield-expanded')\n\n        // 清空输入框\n        .find('.mdui-textfield-input')\n        .val('');\n    });\n\n    /**\n     * 通过 JS 更新了表单内容，需要重新进行表单处理\n     * @param- 如果传入了 .mdui-textfield 所在的 DOM 元素，则更新该文本框；否则，更新所有文本框\n     */\n    mdui.updateTextFields = function () {\n      $(arguments.length ? arguments[0] : '.mdui-textfield').each(function () {\n        $(this)\n          .find('.mdui-textfield-input')\n          .trigger('input', {\n            reInit: true,\n          });\n      });\n    };\n  })();\n\n  $(function () {\n    /**\n     * 初始化文本框\n     */\n    mdui.mutation('.mdui-textfield', function () {\n      $(this)\n        .find('.mdui-textfield-input')\n        .trigger('input', {\n          domLoadedEvent: true,\n        });\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Slider 滑块   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 滑块的值变更后修改滑块样式\n     * @param $slider\n     */\n    var updateValueStyle = function ($slider) {\n      var data = $slider.data();\n\n      var $track = data.$track;\n      var $fill = data.$fill;\n      var $thumb = data.$thumb;\n      var $input = data.$input;\n      var min = data.min;\n      var max = data.max;\n      var isDisabled = data.disabled;\n      var isDiscrete = data.discrete;\n      var $thumbText = data.$thumbText;\n      var value = $input.val();\n      var percent = (value - min) / (max - min) * 100;\n\n      $fill.width(percent + '%');\n      $track.width((100 - percent) + '%');\n\n      if (isDisabled) {\n        $fill.css('padding-right', '6px');\n        $track.css('padding-left', '6px');\n      }\n\n      $thumb.css('left', percent + '%');\n\n      if (isDiscrete) {\n        $thumbText.text(value);\n      }\n\n      $slider[parseFloat(percent) === 0 ? 'addClass' : 'removeClass']('mdui-slider-zero');\n    };\n\n    /**\n     * 重新初始化\n     * @param $slider\n     */\n    var reInit = function ($slider) {\n      var $track = $('<div class=\"mdui-slider-track\"></div>');\n      var $fill = $('<div class=\"mdui-slider-fill\"></div>');\n      var $thumb = $('<div class=\"mdui-slider-thumb\"></div>');\n      var $input = $slider.find('input[type=\"range\"]');\n\n      // 禁用状态\n      var isDisabled = $input[0].disabled;\n      $slider[isDisabled ? 'addClass' : 'removeClass']('mdui-slider-disabled');\n\n      // 重新填充 HTML\n      $slider.find('.mdui-slider-track').remove();\n      $slider.find('.mdui-slider-fill').remove();\n      $slider.find('.mdui-slider-thumb').remove();\n      $slider.append($track).append($fill).append($thumb);\n\n      // 间续型滑块\n      var isDiscrete = $slider.hasClass('mdui-slider-discrete');\n\n      var $thumbText;\n      if (isDiscrete) {\n        $thumbText = $('<span></span>');\n        $thumb.empty().append($thumbText);\n      }\n\n      $slider.data({\n        $track: $track,\n        $fill: $fill,\n        $thumb: $thumb,\n        $input: $input,\n        min: $input.attr('min'),    // 滑块最小值\n        max: $input.attr('max'),    // 滑块最大值\n        disabled: isDisabled,       // 是否禁用状态\n        discrete: isDiscrete,       // 是否是间续型滑块\n        $thumbText: $thumbText,      // 间续型滑块的数值\n      });\n\n      // 设置默认值\n      updateValueStyle($slider);\n    };\n\n    var rangeSelector = '.mdui-slider input[type=\"range\"]';\n\n    $document\n\n      // 滑动滑块事件\n      .on('input change', rangeSelector, function () {\n        var $slider = $(this).parent();\n        updateValueStyle($slider);\n      })\n\n      // 开始触摸滑块事件\n      .on(TouchHandler.start, rangeSelector, function (e) {\n        if (!TouchHandler.isAllow(e)) {\n          return;\n        }\n\n        TouchHandler.register(e);\n\n        if (!this.disabled) {\n          var $slider = $(this).parent();\n          $slider.addClass('mdui-slider-focus');\n        }\n      })\n\n      // 结束触摸滑块事件\n      .on(TouchHandler.end, rangeSelector, function (e) {\n        if (!TouchHandler.isAllow(e)) {\n          return;\n        }\n\n        if (!this.disabled) {\n          var $slider = $(this).parent();\n          $slider.removeClass('mdui-slider-focus');\n        }\n      })\n\n      .on(TouchHandler.unlock, rangeSelector, TouchHandler.register);\n\n    /**\n     * 重新初始化滑块（强制重新初始化）\n     */\n    mdui.updateSliders = function () {\n      $(arguments.length ? arguments[0] : '.mdui-slider').each(function () {\n        reInit($(this));\n      });\n    };\n\n    $(function () {\n      /**\n       * 页面加载完后自动初始化（未初始化时，可以调用该方法初始化）\n       */\n      mdui.mutation('.mdui-slider', function () {\n        reInit($(this));\n      });\n    });\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Fab 浮动操作按钮   ************\n   * =============================================================================\n   */\n\n  mdui.Fab = (function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      trigger: 'hover',      // 触发方式 ['hover', 'click']\n    };\n\n    /**\n     * 浮动操作按钮实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素或 JQ 对象\n     * @param opts\n     * @constructor\n     */\n    function Fab(selector, opts) {\n      var _this = this;\n\n      _this.$fab = $(selector).eq(0);\n      if (!_this.$fab.length) {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = _this.$fab.data('mdui.fab');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      _this.$btn = _this.$fab.find('.mdui-fab');\n      _this.$dial = _this.$fab.find('.mdui-fab-dial');\n      _this.$dialBtns = _this.$dial.find('.mdui-fab');\n\n      if (_this.options.trigger === 'hover') {\n        _this.$btn\n          .on('touchstart mouseenter', function () {\n            _this.open();\n          });\n\n        _this.$fab\n          .on('mouseleave', function () {\n            _this.close();\n          });\n      }\n\n      if (_this.options.trigger === 'click') {\n        _this.$btn\n          .on(TouchHandler.start, function () {\n            _this.open();\n          });\n      }\n\n      // 触摸屏幕其他地方关闭快速拨号\n      $document.on(TouchHandler.start, function (e) {\n        if (!$(e.target).parents('.mdui-fab-wrapper').length) {\n          _this.close();\n        }\n      });\n    }\n\n    /**\n     * 打开菜单\n     */\n    Fab.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 为菜单中的按钮添加不同的 transition-delay\n      _this.$dialBtns.each(function (index, btn) {\n        btn.style['transition-delay'] = btn.style['-webkit-transition-delay'] =\n          15 * (_this.$dialBtns.length - index) + 'ms';\n      });\n\n      _this.$dial\n        .css('height', 'auto')\n        .addClass('mdui-fab-dial-show');\n\n      // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n      if (_this.$btn.find('.mdui-fab-opened').length) {\n        _this.$btn.addClass('mdui-fab-opened');\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'fab', _this, _this.$fab);\n\n      // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n      _this.$dialBtns.eq(0).transitionEnd(function () {\n        if (_this.$btn.hasClass('mdui-fab-opened')) {\n          _this.state = 'opened';\n          componentEvent('opened', 'fab', _this, _this.$fab);\n        }\n      });\n    };\n\n    /**\n     * 关闭菜单\n     */\n    Fab.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      // 为菜单中的按钮添加不同的 transition-delay\n      _this.$dialBtns.each(function (index, btn) {\n        btn.style['transition-delay'] = btn.style['-webkit-transition-delay'] = 15 * index + 'ms';\n      });\n\n      _this.$dial.removeClass('mdui-fab-dial-show');\n      _this.$btn.removeClass('mdui-fab-opened');\n      _this.state = 'closing';\n      componentEvent('close', 'fab', _this, _this.$fab);\n\n      // 从上往下依次关闭，最后一个关闭后才表示动画完成\n      _this.$dialBtns.eq(-1).transitionEnd(function () {\n        if (!_this.$btn.hasClass('mdui-fab-opened')) {\n          _this.state = 'closed';\n          componentEvent('closed', 'fab', _this, _this.$fab);\n          _this.$dial.css('height', 0);\n        }\n      });\n    };\n\n    /**\n     * 切换菜单的打开状态\n     */\n    Fab.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取当前菜单状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Fab.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 以动画的形式显示浮动操作按钮\n     */\n    Fab.prototype.show = function () {\n      this.$fab.removeClass('mdui-fab-hide');\n    };\n\n    /**\n     * 以动画的形式隐藏浮动操作按钮\n     */\n    Fab.prototype.hide = function () {\n      this.$fab.addClass('mdui-fab-hide');\n    };\n\n    return Fab;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Fab DATA API   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n    // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n\n    $document.on('touchstart mousedown mouseover', '[mdui-fab]', function (e) {\n      var $this = $(this);\n\n      var inst = $this.data('mdui.fab');\n      if (!inst) {\n        var options = parseOptions($this.attr('mdui-fab'));\n        inst = new mdui.Fab($this, options);\n        $this.data('mdui.fab', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Select 下拉选择   ************\n   * =============================================================================\n   */\n\n  mdui.Select = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',                // 下拉框位置，auto、bottom、top\n      gutter: 16,                      // 菜单与窗口上下边框至少保持多少间距\n    };\n\n    /**\n     * 调整菜单位置\n     * @param _this Select 实例\n     */\n    var readjustMenu = function (_this) {\n      // 窗口高度\n      var windowHeight = $window.height();\n\n      // 配置参数\n      var gutter = _this.options.gutter;\n      var position = _this.options.position;\n\n      // mdui-select 高度\n      var selectHeight = parseInt(_this.$select.height());\n\n      // 菜单项高度\n      var $menuItemFirst = _this.$items.eq(0);\n      var menuItemHeight = parseInt($menuItemFirst.height());\n      var menuItemMargin = parseInt($menuItemFirst.css('margin-top'));\n\n      // 菜单高度\n      var menuWidth = parseFloat(_this.$select.width() + 0.01); // 必须比真实宽度多一点，不然会出现省略号\n      var menuHeight = menuItemHeight * _this.size + menuItemMargin * 2;\n\n      // var menuRealHeight = menuItemHeight * _this.$items.length + menuItemMargin * 2;\n\n      // 菜单是否出现了滚动条\n      //var isMenuScrollable = menuRealHeight > menuHeight;\n\n      // select 在窗口中的位置\n      var selectTop = _this.$select[0].getBoundingClientRect().top;\n\n      var transformOriginY;\n      var menuMarginTop;\n\n      // position 为 auto 时\n      if (position === 'auto') {\n\n        // 菜单高度不能超过窗口高度\n        var heightTemp = windowHeight - gutter * 2;\n        if (menuHeight > heightTemp) {\n          menuHeight = heightTemp;\n        }\n\n        // 菜单的 margin-top\n        menuMarginTop = -(\n          menuItemMargin + _this.selectedIndex * menuItemHeight +\n          (menuItemHeight - selectHeight) / 2\n        );\n        var menuMarginTopMax = -(\n          menuItemMargin + (_this.size - 1) * menuItemHeight +\n          (menuItemHeight - selectHeight) / 2\n        );\n        if (menuMarginTop < menuMarginTopMax) {\n          menuMarginTop = menuMarginTopMax;\n        }\n\n        // 菜单不能超出窗口\n        var menuTop = selectTop + menuMarginTop;\n\n        if (menuTop < gutter) {\n          // 不能超出窗口上方\n          menuMarginTop = -(selectTop - gutter);\n        } else if (menuTop + menuHeight + gutter > windowHeight) {\n          // 不能超出窗口下方\n          menuMarginTop = -(selectTop + menuHeight + gutter - windowHeight);\n        }\n\n        // transform 的 Y 轴坐标\n        transformOriginY = (_this.selectedIndex * menuItemHeight + menuItemHeight / 2 + menuItemMargin) + 'px';\n      } else if (position === 'bottom') {\n        menuMarginTop = selectHeight;\n        transformOriginY = '0px';\n      } else if (position === 'top') {\n        menuMarginTop = -menuHeight - 1;\n        transformOriginY = '100%';\n      }\n\n      // 设置样式\n      _this.$select.width(menuWidth);\n      _this.$menu\n        .width(menuWidth)\n        .height(menuHeight)\n        .css({\n          'margin-top': menuMarginTop + 'px',\n          'transform-origin':\n          'center ' + transformOriginY + ' 0',\n        });\n    };\n\n    /**\n     * 下拉选择\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n    function Select(selector, opts) {\n      var _this = this;\n\n      var $selectNative =  _this.$selectNative = $(selector).eq(0);\n      if (!$selectNative.length) {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = $selectNative.data('mdui.select');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      $selectNative.hide();\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n      // 为当前 select 生成唯一 ID\n      _this.uniqueID = $.guid();\n\n      _this.state = 'closed';\n\n      // 生成 select\n      _this.handleUpdate();\n\n      // 点击 select 外面区域关闭\n      $document.on('click touchstart', function (e) {\n        var $target = $(e.target);\n        if (\n          (_this.state === 'opening' || _this.state === 'opened') &&\n          !$target.is(_this.$select) &&\n          !$.contains(_this.$select[0], $target[0])\n        ) {\n          _this.close();\n        }\n      });\n    }\n\n    /**\n     * 对原生 select 组件进行了修改后，需要调用该方法\n     */\n    Select.prototype.handleUpdate = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      }\n\n      var $selectNative = _this.$selectNative;\n\n      // 当前的值和文本\n      _this.value = $selectNative.val();\n      _this.text = '';\n\n      // 生成 HTML\n      // 菜单项\n      _this.$items = $();\n      $selectNative.find('option').each(function (index, option) {\n        var data = {\n          value: option.value,\n          text: option.textContent,\n          disabled: option.disabled,\n          selected: _this.value === option.value,\n          index: index,\n        };\n\n        if (_this.value === data.value) {\n          _this.text = data.text;\n          _this.selectedIndex = index;\n        }\n\n        _this.$items = _this.$items.add(\n          $('<div class=\"mdui-select-menu-item mdui-ripple\"' +\n            (data.disabled ? ' disabled' : '') +\n            (data.selected ? ' selected' : '') + '>' + data.text + '</div>')\n            .data(data)\n        );\n      });\n\n      // selected\n      _this.$selected = $('<span class=\"mdui-select-selected\">' + _this.text + '</span>');\n\n      // select\n      _this.$select =\n        $(\n          '<div class=\"mdui-select mdui-select-position-' + _this.options.position + '\" ' +\n          'style=\"' + _this.$selectNative.attr('style') + '\" ' +\n          'id=\"' + _this.uniqueID + '\"></div>'\n        )\n          .show()\n          .append(_this.$selected);\n\n      // menu\n      _this.$menu =\n        $('<div class=\"mdui-select-menu\"></div>')\n          .appendTo(_this.$select)\n          .append(_this.$items);\n\n      $('#' + _this.uniqueID).remove();\n      $selectNative.after(_this.$select);\n\n      // 根据 select 的 size 属性设置高度，默认为 6\n      _this.size = _this.$selectNative.attr('size');\n\n      if (!_this.size) {\n        _this.size = _this.$items.length;\n        if (_this.size > 8) {\n          _this.size = 8;\n        }\n      }\n\n      if (_this.size < 2) {\n        _this.size = 2;\n      }\n\n      // 点击选项时关闭下拉菜单\n      _this.$items.on('click', function () {\n        if (_this.state === 'closing') {\n          return;\n        }\n\n        var $item = $(this);\n\n        if ($item.data('disabled')) {\n          return;\n        }\n\n        var itemData = $item.data();\n\n        _this.$selected.text(itemData.text);\n        $selectNative.val(itemData.value);\n        _this.$items.removeAttr('selected');\n        $item.attr('selected', '');\n        _this.selectedIndex = itemData.index;\n        _this.value = itemData.value;\n        _this.text = itemData.text;\n        $selectNative.trigger('change');\n\n        _this.close();\n      });\n\n      // 点击 select 时打开下拉菜单\n      _this.$select.on('click', function (e) {\n        var $target = $(e.target);\n\n        // 在菜单上点击时不打开\n        if ($target.is('.mdui-select-menu') || $target.is('.mdui-select-menu-item')) {\n          return;\n        }\n\n        _this.toggle();\n      });\n    };\n\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n    var transitionEnd = function (inst) {\n      inst.$select.removeClass('mdui-select-closing');\n\n      if (inst.state === 'opening') {\n        inst.state = 'opened';\n        componentEvent('opened', 'select', inst, inst.$selectNative);\n\n        inst.$menu.css('overflow-y', 'auto');\n      }\n\n      if (inst.state === 'closing') {\n        inst.state = 'closed';\n        componentEvent('closed', 'select', inst, inst.$selectNative);\n\n        // 恢复样式\n        inst.$select.width('');\n        inst.$menu.css({\n          'margin-top': '',\n          height: '',\n          width: '',\n        });\n      }\n    };\n\n    /**\n     * 打开 Select\n     */\n    Select.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'select', _this, _this.$selectNative);\n\n      readjustMenu(_this);\n\n      _this.$select.addClass('mdui-select-open');\n\n      _this.$menu.transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n\n    /**\n     * 关闭 Select\n     */\n    Select.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'select', _this, _this.$selectNative);\n\n      _this.$menu.css('overflow-y', '');\n\n      _this.$select\n        .removeClass('mdui-select-open')\n        .addClass('mdui-select-closing');\n      _this.$menu.transitionEnd(function () {\n        transitionEnd(_this);\n      });\n    };\n\n    /**\n     * 切换 Select 显示状态\n     */\n    Select.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    return Select;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Select 下拉选择   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    mdui.mutation('[mdui-select]', function () {\n      var $this = $(this);\n      var inst = $this.data('mdui.select');\n      if (!inst) {\n        inst = new mdui.Select($this, parseOptions($this.attr('mdui-select')));\n        $this.data('mdui.select', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Appbar   ************\n   * =============================================================================\n   * 滚动时自动隐藏应用栏\n   * mdui-appbar-scroll-hide\n   * mdui-appbar-scroll-toolbar-hide\n   */\n\n  $(function () {\n    // 滚动时隐藏应用栏\n    mdui.mutation('.mdui-appbar-scroll-hide', function () {\n      var $this = $(this);\n      $this.data('mdui.headroom', new mdui.Headroom($this));\n    });\n\n    // 滚动时只隐藏应用栏中的工具栏\n    mdui.mutation('.mdui-appbar-scroll-toolbar-hide', function () {\n      var $this = $(this);\n      var inst = new mdui.Headroom($this, {\n        pinnedClass: 'mdui-headroom-pinned-toolbar',\n        unpinnedClass: 'mdui-headroom-unpinned-toolbar',\n      });\n      $this.data('mdui.headroom', inst);\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Tab   ************\n   * =============================================================================\n   */\n\n  mdui.Tab = (function () {\n\n    var DEFAULT = {\n      trigger: 'click',       // 触发方式 click: 鼠标点击切换 hover: 鼠标悬浮切换\n      //animation: false,       // 切换时是否显示动画\n      loop: false,            // 为true时，在最后一个选项卡时调用 next() 方法会回到第一个选项卡\n    };\n\n    // 元素是否已禁用\n    var isDisabled = function ($ele) {\n      return $ele[0].disabled || $ele.attr('disabled') !== null;\n    };\n\n    /**\n     * 选项卡\n     * @param selector\n     * @param opts\n     * @returns {*}\n     * @constructor\n     */\n    function Tab(selector, opts) {\n      var _this = this;\n\n      _this.$tab = $(selector).eq(0);\n      if (!_this.$tab.length) {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = _this.$tab.data('mdui.tab');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n      _this.$tabs = _this.$tab.children('a');\n      _this.$indicator = $('<div class=\"mdui-tab-indicator\"></div>').appendTo(_this.$tab);\n      _this.activeIndex = false; // 为 false 时表示没有激活的选项卡，或不存在选项卡\n\n      // 根据 url hash 获取默认激活的选项卡\n      var hash = location.hash;\n      if (hash) {\n        _this.$tabs.each(function (i, tab) {\n          if ($(tab).attr('href') === hash) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      // 含 mdui-tab-active 的元素默认激活\n      if (_this.activeIndex === false) {\n        _this.$tabs.each(function (i, tab) {\n          if ($(tab).hasClass('mdui-tab-active')) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      // 存在选项卡时，默认激活第一个选项卡\n      if (_this.$tabs.length && _this.activeIndex === false) {\n        _this.activeIndex = 0;\n      }\n\n      // 设置激活状态选项卡\n      _this._setActive();\n\n      // 监听窗口大小变化事件，调整指示器位置\n      $window.on('resize', $.throttle(function () {\n        _this._setIndicatorPosition();\n      }, 100));\n\n      // 监听点击选项卡事件\n      _this.$tabs.each(function (i, tab) {\n        _this._bindTabEvent(tab);\n      });\n    }\n\n    /**\n     * 绑定在 Tab 上点击或悬浮的事件\n     * @private\n     */\n    Tab.prototype._bindTabEvent = function (tab) {\n      var _this = this;\n      var $tab = $(tab);\n\n      // 点击或鼠标移入触发的事件\n      var clickEvent = function (e) {\n        // 禁用状态的选项无法选中\n        if (isDisabled($tab)) {\n          e.preventDefault();\n          return;\n        }\n\n        _this.activeIndex = _this.$tabs.index(tab);\n        _this._setActive();\n      };\n\n      // 无论 trigger 是 click 还是 hover，都会响应 click 事件\n      $tab.on('click', clickEvent);\n\n      // trigger 为 hover 时，额外响应 mouseenter 事件\n      if (_this.options.trigger === 'hover') {\n        $tab.on('mouseenter', clickEvent);\n      }\n\n      $tab.on('click', function (e) {\n        // 阻止链接的默认点击动作\n        if ($tab.attr('href').indexOf('#') === 0) {\n          e.preventDefault();\n        }\n      });\n    };\n\n    /**\n     * 设置激活状态的选项卡\n     * @private\n     */\n    Tab.prototype._setActive = function () {\n      var _this = this;\n\n      _this.$tabs.each(function (i, tab) {\n        var $tab = $(tab);\n        var targetId = $tab.attr('href');\n\n        // 设置选项卡激活状态\n        if (i === _this.activeIndex && !isDisabled($tab)) {\n          if (!$tab.hasClass('mdui-tab-active')) {\n            componentEvent('change', 'tab', _this, _this.$tab, {\n              index: _this.activeIndex,\n              id: targetId.substr(1),\n            });\n            componentEvent('show', 'tab', _this, $tab);\n\n            $tab.addClass('mdui-tab-active');\n          }\n\n          $(targetId).show();\n          _this._setIndicatorPosition();\n        } else {\n          $tab.removeClass('mdui-tab-active');\n          $(targetId).hide();\n        }\n      });\n    };\n\n    /**\n     * 设置选项卡指示器的位置\n     */\n    Tab.prototype._setIndicatorPosition = function () {\n      var _this = this;\n      var $activeTab;\n      var activeTabOffset;\n\n      // 选项卡数量为 0 时，不显示指示器\n      if (_this.activeIndex === false) {\n        _this.$indicator.css({\n          left: 0,\n          width: 0,\n        });\n\n        return;\n      }\n\n      $activeTab = _this.$tabs.eq(_this.activeIndex);\n      if (isDisabled($activeTab)) {\n        return;\n      }\n\n      activeTabOffset = $activeTab.offset();\n      _this.$indicator.css({\n        left: activeTabOffset.left + _this.$tab[0].scrollLeft -\n              _this.$tab[0].getBoundingClientRect().left + 'px',\n        width: $activeTab.width() + 'px',\n      });\n    };\n\n    /**\n     * 切换到下一个选项卡\n     */\n    Tab.prototype.next = function () {\n      var _this = this;\n\n      if (_this.activeIndex === false) {\n        return;\n      }\n\n      if (_this.$tabs.length > _this.activeIndex + 1) {\n        _this.activeIndex++;\n      } else if (_this.options.loop) {\n        _this.activeIndex = 0;\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 切换到上一个选项卡\n     */\n    Tab.prototype.prev = function () {\n      var _this = this;\n\n      if (_this.activeIndex === false) {\n        return;\n      }\n\n      if (_this.activeIndex > 0) {\n        _this.activeIndex--;\n      } else if (_this.options.loop) {\n        _this.activeIndex = _this.$tabs.length - 1;\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 显示指定序号或指定id的选项卡\n     * @param index 从0开始的序号，或以#开头的id\n     */\n    Tab.prototype.show = function (index) {\n      var _this = this;\n\n      if (_this.activeIndex === false) {\n        return;\n      }\n\n      if (parseInt(index) === index) {\n        _this.activeIndex = index;\n      } else {\n        _this.$tabs.each(function (i, tab) {\n          if (tab.id === index) {\n            _this.activeIndex = i;\n            return false;\n          }\n        });\n      }\n\n      _this._setActive();\n    };\n\n    /**\n     * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n     * 在添加或删除选项卡时，需要调用该方法\n     */\n    Tab.prototype.handleUpdate = function () {\n      var _this = this;\n\n      var $oldTabs = _this.$tabs;               // 旧的 tabs JQ对象\n      var $newTabs = _this.$tab.children('a');  // 新的 tabs JQ对象\n      var oldTabsEle = $oldTabs.get();          // 旧 tabs 的元素数组\n      var newTabsEle = $newTabs.get();          // 新的 tabs 元素数组\n\n      if (!$newTabs.length) {\n        _this.activeIndex = false;\n        _this.$tabs = $newTabs;\n        _this._setIndicatorPosition();\n\n        return;\n      }\n\n      // 重新遍历选项卡，找出新增的选项卡\n      $newTabs.each(function (i, tab) {\n        // 有新增的选项卡\n        if (oldTabsEle.indexOf(tab) < 0) {\n          _this._bindTabEvent(tab);\n\n          if (_this.activeIndex === false) {\n            _this.activeIndex = 0;\n          } else if (i <= _this.activeIndex) {\n            _this.activeIndex++;\n          }\n        }\n      });\n\n      // 找出被移除的选项卡\n      $oldTabs.each(function (i, tab) {\n        // 有被移除的选项卡\n        if (newTabsEle.indexOf(tab) < 0) {\n\n          if (i < _this.activeIndex) {\n            _this.activeIndex--;\n          } else if (i === _this.activeIndex) {\n            _this.activeIndex = 0;\n          }\n        }\n      });\n\n      _this.$tabs = $newTabs;\n\n      _this._setActive();\n    };\n\n    return Tab;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Tab 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    mdui.mutation('[mdui-tab]', function () {\n      var $this = $(this);\n      var inst = $this.data('mdui.tab');\n      if (!inst) {\n        inst = new mdui.Tab($this, parseOptions($this.attr('mdui-tab')));\n        $this.data('mdui.tab', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Drawer 抽屉栏   ************\n   * =============================================================================\n   *\n   * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n   * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n   */\n\n  mdui.Drawer = (function () {\n\n    /**\n     * 默认参数\n     * @type {{}}\n     */\n    var DEFAULT = {\n      // 在桌面设备上是否显示遮罩层。手机和平板不受这个参数影响，始终会显示遮罩层\n      overlay: false,\n\n      // 是否开启手势\n      swipe: false,\n    };\n\n    var isDesktop = function () {\n      return $window.width() >= 1024;\n    };\n\n    /**\n     * 抽屉栏实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Drawer(selector, opts) {\n      var _this = this;\n\n      _this.$drawer = $(selector).eq(0);\n      if (!_this.$drawer.length) {\n        return;\n      }\n\n      var oldInst = _this.$drawer.data('mdui.drawer');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n      _this.overlay = false; // 是否显示着遮罩层\n      _this.position = _this.$drawer.hasClass('mdui-drawer-right') ? 'right' : 'left';\n\n      if (_this.$drawer.hasClass('mdui-drawer-close')) {\n        _this.state = 'closed';\n      } else if (_this.$drawer.hasClass('mdui-drawer-open')) {\n        _this.state = 'opened';\n      } else if (isDesktop()) {\n        _this.state = 'opened';\n      } else {\n        _this.state = 'closed';\n      }\n\n      // 浏览器窗口大小调整时\n      $window.on('resize', $.throttle(function () {\n        // 由手机平板切换到桌面时\n        if (isDesktop()) {\n          // 如果显示着遮罩，则隐藏遮罩\n          if (_this.overlay && !_this.options.overlay) {\n            $.hideOverlay();\n            _this.overlay = false;\n            $.unlockScreen();\n          }\n\n          // 没有强制关闭，则状态为打开状态\n          if (!_this.$drawer.hasClass('mdui-drawer-close')) {\n            _this.state = 'opened';\n          }\n        }\n\n        // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n        else {\n          if (!_this.overlay && _this.state === 'opened') {\n            // 抽屉栏处于强制打开状态，添加遮罩\n            if (_this.$drawer.hasClass('mdui-drawer-open')) {\n              $.showOverlay();\n              _this.overlay = true;\n              $.lockScreen();\n\n              $('.mdui-overlay').one('click', function () {\n                _this.close();\n              });\n            } else {\n              _this.state = 'closed';\n            }\n          }\n        }\n      }, 100));\n\n      // 绑定关闭按钮事件\n      _this.$drawer.find('[mdui-drawer-close]').each(function () {\n        $(this).on('click', function () {\n          _this.close();\n        });\n      });\n\n      swipeSupport(_this);\n    }\n\n    /**\n     * 滑动手势支持\n     * @param _this\n     */\n    var swipeSupport = function (_this) {\n      // 抽屉栏滑动手势控制\n      var openNavEventHandler;\n      var touchStartX;\n      var touchStartY;\n      var swipeStartX;\n      var swiping = false;\n      var maybeSwiping = false;\n      var $body = $('body');\n\n      // 手势触发的范围\n      var swipeAreaWidth = 24;\n\n      function enableSwipeHandling() {\n        if (!openNavEventHandler) {\n          $body.on('touchstart', onBodyTouchStart);\n          openNavEventHandler = onBodyTouchStart;\n        }\n      }\n\n      function setPosition(translateX, closeTransform) {\n        var rtlTranslateMultiplier = _this.position === 'right' ? -1 : 1;\n        var transformCSS = 'translate(' + (-1 * rtlTranslateMultiplier * translateX) + 'px, 0) !important;';\n        _this.$drawer.css(\n          'cssText',\n          'transform:' + transformCSS + (closeTransform ? 'transition: initial !important;' : '')\n        );\n      }\n\n      function cleanPosition() {\n        _this.$drawer.css({\n          transform: '',\n          transition: '',\n        });\n      }\n\n      function getMaxTranslateX() {\n        return _this.$drawer.width() + 10;\n      }\n\n      function getTranslateX(currentX) {\n        return Math.min(\n          Math.max(\n            swiping === 'closing' ? (swipeStartX - currentX) : (getMaxTranslateX() + swipeStartX - currentX),\n            0\n          ),\n          getMaxTranslateX()\n        );\n      }\n\n      function onBodyTouchStart(event) {\n        touchStartX = event.touches[0].pageX;\n        if (_this.position === 'right') {\n          touchStartX = $body.width() - touchStartX;\n        }\n\n        touchStartY = event.touches[0].pageY;\n\n        if (_this.state !== 'opened') {\n          if (touchStartX > swipeAreaWidth || openNavEventHandler !== onBodyTouchStart) {\n            return;\n          }\n        }\n\n        maybeSwiping = true;\n\n        $body.on({\n          touchmove: onBodyTouchMove,\n          touchend: onBodyTouchEnd,\n          touchcancel: onBodyTouchMove,\n        });\n      }\n\n      function onBodyTouchMove(event) {\n        var touchX = event.touches[0].pageX;\n        if (_this.position === 'right') {\n          touchX = $body.width() - touchX;\n        }\n\n        var touchY = event.touches[0].pageY;\n\n        if (swiping) {\n          setPosition(getTranslateX(touchX), true);\n        } else if (maybeSwiping) {\n          var dXAbs = Math.abs(touchX - touchStartX);\n          var dYAbs = Math.abs(touchY - touchStartY);\n          var threshold = 8;\n\n          if (dXAbs > threshold && dYAbs <= threshold) {\n            swipeStartX = touchX;\n            swiping = _this.state === 'opened' ? 'closing' : 'opening';\n            $.lockScreen();\n            setPosition(getTranslateX(touchX), true);\n          } else if (dXAbs <= threshold && dYAbs > threshold) {\n            onBodyTouchEnd();\n          }\n        }\n      }\n\n      function onBodyTouchEnd(event) {\n        if (swiping) {\n          var touchX = event.changedTouches[0].pageX;\n          if (_this.position === 'right') {\n            touchX = $body.width() - touchX;\n          }\n\n          var translateRatio = getTranslateX(touchX) / getMaxTranslateX();\n\n          maybeSwiping = false;\n          var swipingState = swiping;\n          swiping = null;\n\n          if (swipingState === 'opening') {\n            if (translateRatio < 0.92) {\n              cleanPosition();\n              _this.open();\n            } else {\n              cleanPosition();\n            }\n          } else {\n            if (translateRatio > 0.08) {\n              cleanPosition();\n              _this.close();\n            } else {\n              cleanPosition();\n            }\n          }\n\n          $.unlockScreen();\n        } else {\n          maybeSwiping = false;\n        }\n\n        $body.off({\n          touchmove: onBodyTouchMove,\n          touchend: onBodyTouchEnd,\n          touchcancel: onBodyTouchMove,\n        });\n      }\n\n      if (_this.options.swipe) {\n        enableSwipeHandling();\n      }\n    };\n\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n    var transitionEnd = function (inst) {\n      if (inst.$drawer.hasClass('mdui-drawer-open')) {\n        inst.state = 'opened';\n        componentEvent('opened', 'drawer', inst, inst.$drawer);\n      } else {\n        inst.state = 'closed';\n        componentEvent('closed', 'drawer', inst, inst.$drawer);\n      }\n    };\n\n    /**\n     * 打开抽屉栏\n     */\n    Drawer.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'drawer', _this, _this.$drawer);\n\n      if (!_this.options.overlay) {\n        $('body').addClass('mdui-drawer-body-' + _this.position);\n      }\n\n      _this.$drawer\n        .removeClass('mdui-drawer-close')\n        .addClass('mdui-drawer-open')\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n\n      if (!isDesktop() || _this.options.overlay) {\n        _this.overlay = true;\n        $.showOverlay().one('click', function () {\n          _this.close();\n        });\n\n        $.lockScreen();\n      }\n    };\n\n    /**\n     * 关闭抽屉栏\n     */\n    Drawer.prototype.close = function () {\n      var _this = this;\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'drawer', _this, _this.$drawer);\n\n      if (!_this.options.overlay) {\n        $('body').removeClass('mdui-drawer-body-' + _this.position);\n      }\n\n      _this.$drawer\n        .addClass('mdui-drawer-close')\n        .removeClass('mdui-drawer-open')\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n\n      if (_this.overlay) {\n        $.hideOverlay();\n        _this.overlay = false;\n        $.unlockScreen();\n      }\n    };\n\n    /**\n     * 切换抽屉栏打开/关闭状态\n     */\n    Drawer.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取抽屉栏状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Drawer.prototype.getState = function () {\n      return this.state;\n    };\n\n    return Drawer;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Drawer 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    mdui.mutation('[mdui-drawer]', function () {\n      var $this = $(this);\n      var options = parseOptions($this.attr('mdui-drawer'));\n      var selector = options.target;\n      delete options.target;\n\n      var $drawer = $(selector).eq(0);\n\n      var inst = $drawer.data('mdui.drawer');\n      if (!inst) {\n        inst = new mdui.Drawer($drawer, options);\n        $drawer.data('mdui.drawer', inst);\n      }\n\n      $this.on('click', function () {\n        inst.toggle();\n      });\n\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Dialog 对话框   ************\n   * =============================================================================\n   */\n\n  mdui.Dialog = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      history: true,                // 监听 hashchange 事件\n      overlay: true,                // 打开对话框时是否显示遮罩\n      modal: false,                 // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true,             // 按下 esc 关闭对话框\n      closeOnCancel: true,          // 按下取消按钮时关闭对话框\n      closeOnConfirm: true,         // 按下确认按钮时关闭对话框\n      destroyOnClosed: false,        // 关闭后销毁\n    };\n\n    /**\n     * 遮罩层元素\n     */\n    var $overlay;\n\n    /**\n     * 窗口是否已锁定\n     */\n    var isLockScreen;\n\n    /**\n     * 当前对话框实例\n     */\n    var currentInst;\n\n    /**\n     * 队列名\n     */\n    var queueName = '__md_dialog';\n\n    /**\n     * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n     */\n    var readjust = function () {\n      if (!currentInst) {\n        return;\n      }\n\n      var $dialog = currentInst.$dialog;\n\n      var $dialogTitle = $dialog.children('.mdui-dialog-title');\n      var $dialogContent = $dialog.children('.mdui-dialog-content');\n      var $dialogActions = $dialog.children('.mdui-dialog-actions');\n\n      // 调整 dialog 的 top 和 height 值\n      $dialog.height('');\n      $dialogContent.height('');\n\n      var dialogHeight = $dialog.height();\n      $dialog.css({\n        top: (($window.height() - dialogHeight) / 2) + 'px',\n        height: dialogHeight + 'px',\n      });\n\n      // 调整 mdui-dialog-content 的高度\n      $dialogContent.height(dialogHeight - ($dialogTitle.height() || 0) - ($dialogActions.height() || 0));\n    };\n\n    /**\n     * hashchange 事件触发时关闭对话框\n     */\n    var hashchangeEvent = function () {\n      if (location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n        currentInst.close(true);\n      }\n    };\n\n    /**\n     * 点击遮罩层关闭对话框\n     * @param e\n     */\n    var overlayClick = function (e) {\n      if ($(e.target).hasClass('mdui-overlay') && currentInst) {\n        currentInst.close();\n      }\n    };\n\n    /**\n     * 对话框实例\n     * @param selector 选择器或 HTML 字符串或 DOM 元素\n     * @param opts\n     * @constructor\n     */\n    function Dialog(selector, opts) {\n      var _this = this;\n\n      // 对话框元素\n      _this.$dialog = $(selector).eq(0);\n      if (!_this.$dialog.length) {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = _this.$dialog.data('mdui.dialog');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      // 如果对话框元素没有在当前文档中，则需要添加\n      if (!$.contains(document.body, _this.$dialog[0])) {\n        _this.append = true;\n        $('body').append(_this.$dialog);\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      // 绑定取消按钮事件\n      _this.$dialog.find('[mdui-dialog-cancel]').each(function () {\n        $(this).on('click', function () {\n          componentEvent('cancel', 'dialog', _this, _this.$dialog);\n          if (_this.options.closeOnCancel) {\n            _this.close();\n          }\n        });\n      });\n\n      // 绑定确认按钮事件\n      _this.$dialog.find('[mdui-dialog-confirm]').each(function () {\n        $(this).on('click', function () {\n          componentEvent('confirm', 'dialog', _this, _this.$dialog);\n          if (_this.options.closeOnConfirm) {\n            _this.close();\n          }\n        });\n      });\n\n      // 绑定关闭按钮事件\n      _this.$dialog.find('[mdui-dialog-close]').each(function () {\n        $(this).on('click', function () {\n          _this.close();\n        });\n      });\n    }\n\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n    var transitionEnd = function (inst) {\n      if (inst.$dialog.hasClass('mdui-dialog-open')) {\n        inst.state = 'opened';\n        componentEvent('opened', 'dialog', inst, inst.$dialog);\n      } else {\n        inst.state = 'closed';\n        componentEvent('closed', 'dialog', inst, inst.$dialog);\n\n        inst.$dialog.hide();\n\n        // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n        if (queue.queue(queueName).length === 0 && !currentInst && isLockScreen) {\n          $.unlockScreen();\n          isLockScreen = false;\n        }\n\n        $window.off('resize', $.throttle(function () {\n          readjust();\n        }, 100));\n\n        if (inst.options.destroyOnClosed) {\n          inst.destroy();\n        }\n      }\n    };\n\n    /**\n     * 打开指定对话框\n     * @private\n     */\n    Dialog.prototype._doOpen = function () {\n      var _this = this;\n\n      currentInst = _this;\n\n      if (!isLockScreen) {\n        $.lockScreen();\n        isLockScreen = true;\n      }\n\n      _this.$dialog.show();\n\n      readjust();\n      $window.on('resize', $.throttle(function () {\n        readjust();\n      }, 100));\n\n      // 打开消息框\n      _this.state = 'opening';\n      componentEvent('open', 'dialog', _this, _this.$dialog);\n\n      _this.$dialog\n        .addClass('mdui-dialog-open')\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n\n      // 不存在遮罩层元素时，添加遮罩层\n      if (!$overlay) {\n        $overlay = $.showOverlay(5100);\n      }\n\n      $overlay\n\n        // 点击遮罩层时是否关闭对话框\n        [_this.options.modal ? 'off' : 'on']('click', overlayClick)\n\n        // 是否显示遮罩层，不显示时，把遮罩层背景透明\n        .css('opacity', _this.options.overlay ? '' : 0);\n\n      if (_this.options.history) {\n        // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n        // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n        var hash = location.hash.substring(1);\n        if (hash.indexOf('mdui-dialog') > -1) {\n          hash = hash.replace(/[&?]?mdui-dialog/g, '');\n        }\n\n        // 后退按钮关闭对话框\n        if (hash) {\n          location.hash = hash + (hash.indexOf('?') > -1 ? '&' : '?') + 'mdui-dialog';\n        } else {\n          location.hash = 'mdui-dialog';\n        }\n\n        $window.on('hashchange', hashchangeEvent);\n      }\n    };\n\n    /**\n     * 打开对话框\n     */\n    Dialog.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n      if (\n        (currentInst && (currentInst.state === 'opening' || currentInst.state === 'opened')) ||\n        queue.queue(queueName).length\n      ) {\n        queue.queue(queueName, function () {\n          _this._doOpen();\n        });\n\n        return;\n      }\n\n      _this._doOpen();\n    };\n\n    /**\n     * 关闭对话框\n     */\n    Dialog.prototype.close = function () {\n      var _this = this;\n      var _arguments = arguments;\n\n      // setTimeout 的作用是：\n      // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n      setTimeout(function () {\n        if (_this.state === 'closing' || _this.state === 'closed') {\n          return;\n        }\n\n        currentInst = null;\n\n        _this.state = 'closing';\n        componentEvent('close', 'dialog', _this, _this.$dialog);\n\n        // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n        if (queue.queue(queueName).length === 0 && $overlay) {\n          $.hideOverlay();\n          $overlay = null;\n        }\n\n        _this.$dialog\n          .removeClass('mdui-dialog-open')\n          .transitionEnd(function () {\n            transitionEnd(_this);\n          });\n\n        if (_this.options.history && queue.queue(queueName).length === 0) {\n          // 是否需要后退历史纪录，默认为 false。\n          // 为 false 时是通过 js 关闭，需要后退一个历史记录\n          // 为 true 时是通过后退按钮关闭，不需要后退历史记录\n          if (!_arguments[0]) {\n            window.history.back();\n          }\n\n          $window.off('hashchange', hashchangeEvent);\n        }\n\n        // 关闭旧对话框，打开新对话框。\n        // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n        setTimeout(function () {\n          queue.dequeue(queueName);\n        }, 100);\n      }, 0);\n    };\n\n    /**\n     * 切换对话框打开/关闭状态\n     */\n    Dialog.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取对话框状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Dialog.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 销毁对话框\n     */\n    Dialog.prototype.destroy = function () {\n      var _this = this;\n\n      if (_this.append) {\n        _this.$dialog.remove();\n      }\n\n      _this.$dialog.removeData('mdui.dialog');\n\n      if (queue.queue(queueName).length === 0 && !currentInst) {\n        if ($overlay) {\n          $.hideOverlay();\n          $overlay = null;\n        }\n\n        if (isLockScreen) {\n          $.unlockScreen();\n          isLockScreen = false;\n        }\n      }\n    };\n\n    /**\n     * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n     */\n    Dialog.prototype.handleUpdate = function () {\n      readjust();\n    };\n\n    // esc 按下时关闭对话框\n    $document.on('keydown', function (e) {\n      if (\n        currentInst &&\n        currentInst.options.closeOnEsc &&\n        currentInst.state === 'opened' &&\n        e.keyCode === 27\n      ) {\n        currentInst.close();\n      }\n    });\n\n    return Dialog;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Dialog DATA API   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    $document.on('click', '[mdui-dialog]', function () {\n      var $this = $(this);\n      var options = parseOptions($this.attr('mdui-dialog'));\n      var selector = options.target;\n      delete options.target;\n\n      var $dialog = $(selector).eq(0);\n\n      var inst = $dialog.data('mdui.dialog');\n      if (!inst) {\n        inst = new mdui.Dialog($dialog, options);\n        $dialog.data('mdui.dialog', inst);\n      }\n\n      inst.open();\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.dialog(options)   ************\n   * =============================================================================\n   */\n\n  mdui.dialog = function (options) {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      title: '',                // 标题\n      content: '',              // 文本\n      buttons: [],              // 按钮\n      stackedButtons: false,    // 垂直排列按钮\n      cssClass: '',             // 在 Dialog 上添加的 CSS 类\n      history: true,            // 监听 hashchange 事件\n      overlay: true,            // 是否显示遮罩\n      modal: false,             // 是否模态化对话框\n      closeOnEsc: true,         // 按下 esc 时关闭对话框\n      destroyOnClosed: true,    // 关闭后销毁\n      onOpen: function () {     // 打开动画开始时的回调\n      },\n\n      onOpened: function () {   // 打开动画结束后的回调\n      },\n\n      onClose: function () {    // 关闭动画开始时的回调\n      },\n\n      onClosed: function () {   // 关闭动画结束时的回调\n      },\n    };\n\n    /**\n     * 按钮的默认参数\n     */\n    var DEFAULT_BUTTON = {\n      text: '',                   // 按钮文本\n      bold: false,                // 按钮文本是否加粗\n      close: true,                // 点击按钮后关闭对话框\n      onClick: function (inst) {  // 点击按钮的回调\n      },\n    };\n\n    // 合并参数\n    options = $.extend({}, DEFAULT, (options || {}));\n    $.each(options.buttons, function (i, button) {\n      options.buttons[i] = $.extend({}, DEFAULT_BUTTON, button);\n    });\n\n    // 按钮的 HTML\n    var buttonsHTML = '';\n    if (options.buttons.length) {\n      buttonsHTML =\n        '<div class=\"mdui-dialog-actions ' +\n          (options.stackedButtons ? 'mdui-dialog-actions-stacked' : '') +\n        '\">';\n      $.each(options.buttons, function (i, button) {\n        buttonsHTML +=\n          '<a href=\"javascript:void(0)\" ' +\n            'class=\"mdui-btn mdui-ripple mdui-text-color-primary ' +\n            (button.bold ? 'mdui-btn-bold' : '') + '\">' +\n            button.text +\n          '</a>';\n      });\n\n      buttonsHTML += '</div>';\n    }\n\n    // Dialog 的 HTML\n    var HTML =\n      '<div class=\"mdui-dialog ' + options.cssClass + '\">' +\n        (options.title ? '<div class=\"mdui-dialog-title\">' + options.title + '</div>' : '') +\n        (options.content ? '<div class=\"mdui-dialog-content\">' + options.content + '</div>' : '') +\n        buttonsHTML +\n      '</div>';\n\n    // 实例化 Dialog\n    var inst = new mdui.Dialog(HTML, {\n      history: options.history,\n      overlay: options.overlay,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      destroyOnClosed: options.destroyOnClosed,\n    });\n\n    // 绑定按钮事件\n    if (options.buttons.length) {\n      inst.$dialog.find('.mdui-dialog-actions .mdui-btn').each(function (i, button) {\n        $(button).on('click', function () {\n          if (typeof options.buttons[i].onClick === 'function') {\n            options.buttons[i].onClick(inst);\n          }\n\n          if (options.buttons[i].close) {\n            inst.close();\n          }\n        });\n      });\n    }\n\n    // 绑定打开关闭事件\n    if (typeof options.onOpen === 'function') {\n      inst.$dialog\n        .on('open.mdui.dialog', function () {\n          options.onOpen(inst);\n        })\n        .on('opened.mdui.dialog', function () {\n          options.onOpened(inst);\n        })\n        .on('close.mdui.dialog', function () {\n          options.onClose(inst);\n        })\n        .on('closed.mdui.dialog', function () {\n          options.onClosed(inst);\n        });\n    }\n\n    inst.open();\n\n    return inst;\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.alert(text, title, onConfirm, options)   ************\n   * ************   mdui.alert(text, onConfirm, options)   ************\n   * =============================================================================\n   */\n\n  mdui.alert = function (text, title, onConfirm, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      options = arguments[2];\n    }\n\n    if (onConfirm === undefined) {\n      onConfirm = function () {};\n    }\n\n    if (options === undefined) {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok',             // 按钮上的文本\n      history: true,                 // 监听 hashchange 事件\n      modal: false,                  // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true,              // 按下 esc 关闭对话框\n    };\n\n    options = $.extend({}, DEFAULT, options);\n\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [\n        {\n          text: options.confirmText,\n          bold: false,\n          close: true,\n          onClick: onConfirm,\n        },\n      ],\n      cssClass: 'mdui-dialog-alert',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n    });\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.confirm(text, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.confirm(text, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n  mdui.confirm = function (text, title, onConfirm, onCancel, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (onConfirm === undefined) {\n      onConfirm = function () {};\n    }\n\n    if (onCancel === undefined) {\n      onCancel = function () {};\n    }\n\n    if (options === undefined) {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok',            // 确认按钮的文本\n      cancelText: 'cancel',         // 取消按钮的文本\n      history: true,                // 监听 hashchange 事件\n      modal: false,                 // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true,             // 按下 esc 关闭对话框\n    };\n\n    options = $.extend({}, DEFAULT, options);\n\n    return mdui.dialog({\n      title: title,\n      content: text,\n      buttons: [\n        {\n          text: options.cancelText,\n          bold: false,\n          close: true,\n          onClick: onCancel,\n        },\n        {\n          text: options.confirmText,\n          bold: false,\n          close: true,\n          onClick: onConfirm,\n        },\n      ],\n      cssClass: 'mdui-dialog-confirm',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n    });\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   mdui.prompt(label, title, onConfirm, onCancel, options)   ************\n   * ************   mdui.prompt(label, onConfirm, onCancel, options)          ************\n   * =============================================================================\n   */\n\n  mdui.prompt = function (label, title, onConfirm, onCancel, options) {\n\n    // title 参数可选\n    if (typeof title === 'function') {\n      title = '';\n      onConfirm = arguments[1];\n      onCancel = arguments[2];\n      options = arguments[3];\n    }\n\n    if (onConfirm === undefined) {\n      onConfirm = function () {};\n    }\n\n    if (onCancel === undefined) {\n      onCancel = function () {};\n    }\n\n    if (options === undefined) {\n      options = {};\n    }\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      confirmText: 'ok',        // 确认按钮的文本\n      cancelText: 'cancel',     // 取消按钮的文本\n      history: true,            // 监听 hashchange 事件\n      modal: false,             // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n      closeOnEsc: true,         // 按下 esc 关闭对话框\n      type: 'text',             // 输入框类型，text: 单行文本框 textarea: 多行文本框\n      maxlength: '',            // 最大输入字符数\n      defaultValue: '',         // 输入框中的默认文本\n      confirmOnEnter: false,    // 按下 enter 确认输入内容\n    };\n\n    options = $.extend({}, DEFAULT, options);\n\n    var content =\n      '<div class=\"mdui-textfield\">' +\n        (label ? '<label class=\"mdui-textfield-label\">' + label + '</label>' : '') +\n        (options.type === 'text' ?\n          '<input class=\"mdui-textfield-input\" type=\"text\" ' +\n            'value=\"' + options.defaultValue + '\" ' +\n            (options.maxlength ? ('maxlength=\"' + options.maxlength + '\"') : '') + '/>' :\n          '') +\n        (options.type === 'textarea' ?\n          '<textarea class=\"mdui-textfield-input\" ' +\n            (options.maxlength ? ('maxlength=\"' + options.maxlength + '\"') : '') + '>' +\n              options.defaultValue +\n          '</textarea>' :\n          '') +\n      '</div>';\n\n    return mdui.dialog({\n      title: title,\n      content: content,\n      buttons: [\n        {\n          text: options.cancelText,\n          bold: false,\n          close: true,\n          onClick: function (inst) {\n            var value = inst.$dialog.find('.mdui-textfield-input').val();\n            onCancel(value, inst);\n          },\n        },\n        {\n          text: options.confirmText,\n          bold: false,\n          close: true,\n          onClick: function (inst) {\n            var value = inst.$dialog.find('.mdui-textfield-input').val();\n            onConfirm(value, inst);\n          },\n        },\n      ],\n      cssClass: 'mdui-dialog-prompt',\n      history: options.history,\n      modal: options.modal,\n      closeOnEsc: options.closeOnEsc,\n      onOpen: function (inst) {\n\n        // 初始化输入框\n        var $input = inst.$dialog.find('.mdui-textfield-input');\n        mdui.updateTextFields($input);\n\n        // 聚焦到输入框\n        $input[0].focus();\n\n        // 捕捉文本框回车键，在单行文本框的情况下触发回调\n        if (options.type === 'text' && options.confirmOnEnter === true) {\n          $input.on('keydown', function (event) {\n            if (event.keyCode === 13) {\n              var value = inst.$dialog.find('.mdui-textfield-input').val();\n              onConfirm(value, inst);\n              inst.close();\n            }\n          });\n        }\n\n        // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n        if (options.type === 'textarea') {\n          $input.on('input', function () {\n            inst.handleUpdate();\n          });\n        }\n\n        // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n        if (options.maxlength) {\n          inst.handleUpdate();\n        }\n      },\n    });\n\n  };\n\n\n  /**\n   * =============================================================================\n   * ************   ToolTip 工具提示   ************\n   * =============================================================================\n   */\n\n  mdui.Tooltip = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',     // 提示所在位置\n      delay: 0,             // 延迟，单位毫秒\n      content: '',          // 提示文本，允许包含 HTML\n    };\n\n    /**\n     * 是否是桌面设备\n     * @returns {boolean}\n     */\n    var isDesktop = function () {\n      return $window.width() > 1024;\n    };\n\n    /**\n     * 设置 Tooltip 的位置\n     * @param inst\n     */\n    function setPosition(inst) {\n      var marginLeft;\n      var marginTop;\n      var position;\n\n      // 触发的元素\n      var targetProps = inst.$target[0].getBoundingClientRect();\n\n      // 触发的元素和 Tooltip 之间的距离\n      var targetMargin = (isDesktop() ? 14 : 24);\n\n      // Tooltip 的宽度和高度\n      var tooltipWidth = inst.$tooltip[0].offsetWidth;\n      var tooltipHeight = inst.$tooltip[0].offsetHeight;\n\n      // Tooltip 的方向\n      position = inst.options.position;\n\n      // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n      if (['bottom', 'top', 'left', 'right'].indexOf(position) === -1) {\n        if (\n          targetProps.top + targetProps.height + targetMargin + tooltipHeight + 2 <\n          $window.height()\n        ) {\n          position = 'bottom';\n        } else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n          position = 'top';\n        } else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n          position = 'left';\n        } else if (\n          targetProps.width + targetMargin + tooltipWidth + 2 <\n          $window.width() - targetProps.left\n        ) {\n          position = 'right';\n        } else {\n          position = 'bottom';\n        }\n      }\n\n      // 设置位置\n      switch (position) {\n        case 'bottom':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = (targetProps.height / 2) + targetMargin;\n          inst.$tooltip.transformOrigin('top center');\n          break;\n        case 'top':\n          marginLeft = -1 * (tooltipWidth / 2);\n          marginTop = -1 * (tooltipHeight + (targetProps.height / 2) + targetMargin);\n          inst.$tooltip.transformOrigin('bottom center');\n          break;\n        case 'left':\n          marginLeft = -1 * (tooltipWidth + (targetProps.width / 2) + targetMargin);\n          marginTop = -1 * (tooltipHeight / 2);\n          inst.$tooltip.transformOrigin('center right');\n          break;\n        case 'right':\n          marginLeft = (targetProps.width / 2) + targetMargin;\n          marginTop = -1 * (tooltipHeight / 2);\n          inst.$tooltip.transformOrigin('center left');\n          break;\n      }\n\n      var targetOffset = inst.$target.offset();\n      inst.$tooltip.css({\n        top: targetOffset.top + (targetProps.height / 2) + 'px',\n        left: targetOffset.left + (targetProps.width / 2) + 'px',\n        'margin-left': marginLeft + 'px',\n        'margin-top': marginTop + 'px',\n      });\n    }\n\n    /**\n     * Tooltip 实例\n     * @param selector\n     * @param opts\n     * @constructor\n     */\n    function Tooltip(selector, opts) {\n      var _this = this;\n\n      _this.$target = $(selector).eq(0);\n      if (!_this.$target.length) {\n        return;\n      }\n\n      // 已通过 data 属性实例化过，不再重复实例化\n      var oldInst = _this.$target.data('mdui.tooltip');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      // 创建 Tooltip HTML\n      _this.$tooltip = $(\n        '<div class=\"mdui-tooltip\" id=\"' + $.guid() + '\">' +\n          _this.options.content +\n        '</div>'\n      ).appendTo(document.body);\n\n      // 绑定事件。元素处于 disabled 状态时无法触发鼠标事件，为了统一，把 touch 事件也禁用\n      _this.$target\n        .on('touchstart mouseenter', function (e) {\n          if (this.disabled) {\n            return;\n          }\n\n          if (!TouchHandler.isAllow(e)) {\n            return;\n          }\n\n          TouchHandler.register(e);\n\n          _this.open();\n        })\n        .on('touchend mouseleave', function (e) {\n          if (this.disabled) {\n            return;\n          }\n\n          if (!TouchHandler.isAllow(e)) {\n            return;\n          }\n\n          _this.close();\n        })\n        .on(TouchHandler.unlock, function (e) {\n          if (this.disabled) {\n            return;\n          }\n\n          TouchHandler.register(e);\n        });\n    }\n\n    /**\n     * 动画结束回调\n     * @private\n     */\n    var transitionEnd = function (inst) {\n      if (inst.$tooltip.hasClass('mdui-tooltip-open')) {\n        inst.state = 'opened';\n        componentEvent('opened', 'tooltip', inst, inst.$target);\n      } else {\n        inst.state = 'closed';\n        componentEvent('closed', 'tooltip', inst, inst.$target);\n      }\n    };\n\n    /**\n     * 执行打开 Tooltip\n     * @private\n     */\n    Tooltip.prototype._doOpen = function () {\n      var _this = this;\n\n      _this.state = 'opening';\n      componentEvent('open', 'tooltip', _this, _this.$target);\n\n      _this.$tooltip\n        .addClass('mdui-tooltip-open')\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n    };\n\n    /**\n     * 打开 Tooltip\n     * @param opts 允许每次打开时设置不同的参数\n     */\n    Tooltip.prototype.open = function (opts) {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      var oldOpts = $.extend({}, _this.options);\n\n      // 合并 data 属性参数\n      $.extend(_this.options, parseOptions(_this.$target.attr('mdui-tooltip')));\n      if (opts) {\n        $.extend(_this.options, opts);\n      }\n\n      // tooltip 的内容有更新\n      if (oldOpts.content !== _this.options.content) {\n        _this.$tooltip.html(_this.options.content);\n      }\n\n      setPosition(_this);\n\n      if (_this.options.delay) {\n        _this.timeoutId = setTimeout(function () {\n          _this._doOpen();\n        }, _this.options.delay);\n      } else {\n        _this.timeoutId = false;\n        _this._doOpen();\n      }\n    };\n\n    /**\n     * 关闭 Tooltip\n     */\n    Tooltip.prototype.close = function () {\n      var _this = this;\n\n      if (_this.timeoutId) {\n        clearTimeout(_this.timeoutId);\n        _this.timeoutId = false;\n      }\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'tooltip', _this, _this.$target);\n\n      _this.$tooltip\n        .removeClass('mdui-tooltip-open')\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n    };\n\n    /**\n     * 切换 Tooltip 状态\n     */\n    Tooltip.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 获取 Tooltip 状态\n     * @returns {'opening'|'opened'|'closing'|'closed'}\n     */\n    Tooltip.prototype.getState = function () {\n      return this.state;\n    };\n\n    /**\n     * 销毁 Tooltip\n     */\n    /*Tooltip.prototype.destroy = function () {\n      var _this = this;\n      clearTimeout(_this.timeoutId);\n      $.data(_this.target, 'mdui.tooltip', null);\n      $.remove(_this.tooltip);\n    };*/\n\n    return Tooltip;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Tooltip DATA API   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    // mouseenter 不能冒泡，所以这里用 mouseover 代替\n    $document.on('touchstart mouseover', '[mdui-tooltip]', function () {\n      var $this = $(this);\n\n      var inst = $this.data('mdui.tooltip');\n      if (!inst) {\n        var options = parseOptions($this.attr('mdui-tooltip'));\n        inst = new mdui.Tooltip($this, options);\n        $this.data('mdui.tooltip', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Snackbar   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    /**\n     * 当前打开着的 Snackbar\n     */\n    var currentInst;\n\n    /**\n     * 对列名\n     * @type {string}\n     */\n    var queueName = '__md_snackbar';\n\n    var DEFAULT = {\n      timeout: 4000,                  // 在用户没有操作时多长时间自动隐藏\n      buttonText: '',                 // 按钮的文本\n      buttonColor: '',                // 按钮的颜色，支持 blue #90caf9 rgba(...)\n      position: 'bottom',             // 位置 bottom、top、left-top、left-bottom、right-top、right-bottom\n      closeOnButtonClick: true,       // 点击按钮时关闭\n      closeOnOutsideClick: true,      // 触摸或点击屏幕其他地方时关闭\n      onClick: function () {          // 在 Snackbar 上点击的回调\n      },\n\n      onButtonClick: function () {    // 点击按钮的回调\n      },\n\n      onOpen: function () {           // 打开动画开始时的回调\n      },\n\n      onOpened: function () {         // 打开动画结束时的回调\n      },\n\n      onClose: function () {          // 关闭动画开始时的回调\n      },\n\n      onClosed: function () {         // 打开动画结束时的回调\n      },\n    };\n\n    /**\n     * 点击 Snackbar 外面的区域关闭\n     * @param e\n     */\n    var closeOnOutsideClick = function (e) {\n      var $target = $(e.target);\n      if (!$target.hasClass('mdui-snackbar') && !$target.parents('.mdui-snackbar').length) {\n        currentInst.close();\n      }\n    };\n\n    /**\n     * Snackbar 实例\n     * @param message\n     * @param opts\n     * @constructor\n     */\n    function Snackbar(message, opts) {\n      var _this = this;\n\n      _this.message = message;\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n      // message 参数必须\n      if (!_this.message) {\n        return;\n      }\n\n      _this.state = 'closed';\n\n      _this.timeoutId = false;\n\n      // 按钮颜色\n      var buttonColorStyle = '';\n      var buttonColorClass = '';\n\n      if (\n        _this.options.buttonColor.indexOf('#') === 0 ||\n        _this.options.buttonColor.indexOf('rgb') === 0\n      ) {\n        buttonColorStyle = 'style=\"color:' + _this.options.buttonColor + '\"';\n      } else if (_this.options.buttonColor !== '') {\n        buttonColorClass = 'mdui-text-color-' + _this.options.buttonColor;\n      }\n\n      // 添加 HTML\n      _this.$snackbar = $(\n        '<div class=\"mdui-snackbar\">' +\n          '<div class=\"mdui-snackbar-text\">' +\n            _this.message +\n          '</div>' +\n          (_this.options.buttonText ?\n            ('<a href=\"javascript:void(0)\" ' +\n            'class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ' +\n              buttonColorClass + '\" ' +\n              buttonColorStyle + '>' +\n              _this.options.buttonText +\n            '</a>') :\n            ''\n          ) +\n        '</div>')\n        .appendTo(document.body);\n\n      // 设置位置\n      _this._setPosition('close');\n\n      _this.$snackbar\n        .reflow()\n        .addClass('mdui-snackbar-' + _this.options.position);\n    }\n\n    /**\n     * 设置 Snackbar 的位置\n     * @param state\n     * @private\n     */\n    Snackbar.prototype._setPosition = function (state) {\n      var _this = this;\n\n      var snackbarHeight = _this.$snackbar[0].clientHeight;\n      var position = _this.options.position;\n\n      var translateX;\n      var translateY;\n\n      // translateX\n      if (position === 'bottom' || position === 'top') {\n        translateX = '-50%';\n      } else {\n        translateX = '0';\n      }\n\n      // translateY\n      if (state === 'open') {\n        translateY = '0';\n      } else {\n        if (position === 'bottom') {\n          translateY = snackbarHeight;\n        }\n\n        if (position === 'top') {\n          translateY = -snackbarHeight;\n        }\n\n        if (position === 'left-top' || position === 'right-top') {\n          translateY = -snackbarHeight - 24;\n        }\n\n        if (position === 'left-bottom' || position === 'right-bottom') {\n          translateY = snackbarHeight + 24;\n        }\n      }\n\n      _this.$snackbar.transform('translate(' + translateX + ',' + translateY + 'px)');\n    };\n\n    /**\n     * 打开 Snackbar\n     */\n    Snackbar.prototype.open = function () {\n      var _this = this;\n\n      if (!_this.message) {\n        return;\n      }\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n      if (currentInst) {\n        queue.queue(queueName, function () {\n          _this.open();\n        });\n\n        return;\n      }\n\n      currentInst = _this;\n\n      // 开始打开\n      _this.state = 'opening';\n      _this.options.onOpen();\n\n      _this._setPosition('open');\n\n      _this.$snackbar\n        .transitionEnd(function () {\n          if (_this.state !== 'opening') {\n            return;\n          }\n\n          _this.state = 'opened';\n          _this.options.onOpened();\n\n          // 有按钮时绑定事件\n          if (_this.options.buttonText) {\n            _this.$snackbar\n              .find('.mdui-snackbar-action')\n              .on('click', function () {\n                _this.options.onButtonClick();\n                if (_this.options.closeOnButtonClick) {\n                  _this.close();\n                }\n              });\n          }\n\n          // 点击 snackbar 的事件\n          _this.$snackbar.on('click', function (e) {\n            if (!$(e.target).hasClass('mdui-snackbar-action')) {\n              _this.options.onClick();\n            }\n          });\n\n          // 点击 Snackbar 外面的区域关闭\n          if (_this.options.closeOnOutsideClick) {\n            $document.on(TouchHandler.start, closeOnOutsideClick);\n          }\n\n          // 超时后自动关闭\n          if (_this.options.timeout) {\n            _this.timeoutId = setTimeout(function () {\n              _this.close();\n            }, _this.options.timeout);\n          }\n        });\n    };\n\n    /**\n     * 关闭 Snackbar\n     */\n    Snackbar.prototype.close = function () {\n      var _this = this;\n\n      if (!_this.message) {\n        return;\n      }\n\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      if (_this.timeoutId) {\n        clearTimeout(_this.timeoutId);\n      }\n\n      if (_this.options.closeOnOutsideClick) {\n        $document.off(TouchHandler.start, closeOnOutsideClick);\n      }\n\n      _this.state = 'closing';\n      _this.options.onClose();\n\n      _this._setPosition('close');\n\n      _this.$snackbar\n        .transitionEnd(function () {\n          if (_this.state !== 'closing') {\n            return;\n          }\n\n          currentInst = null;\n          _this.state = 'closed';\n          _this.options.onClosed();\n          _this.$snackbar.remove();\n          queue.dequeue(queueName);\n        });\n    };\n\n    /**\n     * 打开 Snackbar\n     * @param message\n     * @param opts\n     */\n    mdui.snackbar = function (message, opts) {\n      if (typeof message !== 'string') {\n        opts = message;\n        message = opts.message;\n      }\n\n      var inst = new Snackbar(message, opts);\n\n      inst.open();\n      return inst;\n    };\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Bottom navigation 底部导航栏   ************\n   * =============================================================================\n   */\n\n  (function () {\n\n    // 切换导航项\n    $document.on('click', '.mdui-bottom-nav>a', function () {\n      var $this = $(this);\n      var $bottomNav = $this.parent();\n      var isThis;\n      $bottomNav.children('a').each(function (i, item) {\n        isThis = $this.is(item);\n        if (isThis) {\n          componentEvent('change', 'bottomNav', null, $bottomNav, {\n            index: i,\n          });\n        }\n\n        $(item)[isThis ? 'addClass' : 'removeClass']('mdui-bottom-nav-active');\n      });\n    });\n\n    // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n    mdui.mutation('.mdui-bottom-nav-scroll-hide', function () {\n      var $this = $(this);\n      var inst = new mdui.Headroom($this, {\n        pinnedClass: 'mdui-headroom-pinned-down',\n        unpinnedClass: 'mdui-headroom-unpinned-down',\n      });\n      $this.data('mdui.headroom', inst);\n    });\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Spinner 圆形进度条   ************\n   * =============================================================================\n   */\n\n  (function () {\n    /**\n     * layer 的 HTML 结构\n     */\n    var layerHTML = function () {\n      var i = arguments.length ? arguments[0] : false;\n\n      return '<div class=\"mdui-spinner-layer ' + (i ? 'mdui-spinner-layer-' + i : '') + '\">' +\n                 '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' +\n               '<div class=\"mdui-spinner-circle\"></div>' +\n               '</div>' +\n               '<div class=\"mdui-spinner-gap-patch\">' +\n                 '<div class=\"mdui-spinner-circle\"></div>' +\n               '</div>' +\n               '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' +\n                 '<div class=\"mdui-spinner-circle\"></div>' +\n               '</div>' +\n             '</div>';\n    };\n\n    /**\n     * 填充 HTML\n     * @param spinner\n     */\n    var fillHTML = function (spinner) {\n      var $spinner = $(spinner);\n      var layer;\n      if ($spinner.hasClass('mdui-spinner-colorful')) {\n        layer = layerHTML('1') + layerHTML('2') + layerHTML('3') + layerHTML('4');\n      } else {\n        layer = layerHTML();\n      }\n\n      $spinner.html(layer);\n    };\n\n    /**\n     * 页面加载完后自动填充 HTML 结构\n     */\n    mdui.mutation('.mdui-spinner', function () {\n      fillHTML(this);\n    });\n\n    /**\n     * 更新圆形进度条\n     */\n    mdui.updateSpinners = function () {\n      $(arguments.length ? arguments[0] : '.mdui-spinner').each(function () {\n        fillHTML(this);\n      });\n    };\n\n  })();\n\n\n\n  /**\n   * =============================================================================\n   * ************   Expansion panel 可扩展面板   ************\n   * =============================================================================\n   */\n\n  mdui.Panel = (function () {\n\n    function Panel(selector, opts) {\n      return new CollapsePrivate(selector, opts, 'panel');\n    }\n\n    return Panel;\n\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Expansion panel 自定义属性   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    mdui.mutation('[mdui-panel]', function () {\n      var $target = $(this);\n\n      var inst = $target.data('mdui.panel');\n      if (!inst) {\n        var options = parseOptions($target.attr('mdui-panel'));\n        inst = new mdui.Panel($target, options);\n        $target.data('mdui.panel', inst);\n      }\n    });\n  });\n\n\n  /**\n   * =============================================================================\n   * ************   Menu 菜单   ************\n   * =============================================================================\n   */\n\n  mdui.Menu = (function () {\n\n    /**\n     * 默认参数\n     */\n    var DEFAULT = {\n      position: 'auto',         // 菜单位置 top、bottom、center、auto\n      align: 'auto',            // 菜单和触发它的元素的对齐方式 left、right、center、auto\n      gutter: 16,               // 菜单距离窗口边缘的最小距离，单位 px\n      fixed: false,             // 是否使菜单固定在窗口，不随滚动条滚动\n      covered: 'auto',          // 菜单是否覆盖在触发它的元素上，true、false。auto 时简单菜单覆盖，级联菜单不覆盖\n      subMenuTrigger: 'hover',  // 子菜单的触发方式 hover、click\n      subMenuDelay: 200,        // 子菜单的触发延时，仅在 submenuTrigger 为 hover 有效\n    };\n\n    /**\n     * 调整主菜单位置\n     * @param _this 实例\n     */\n    var readjust = function (_this) {\n      var menuLeft;\n      var menuTop;\n\n      // 菜单位置和方向\n      var position;\n      var align;\n\n      // window 窗口的宽度和高度\n      var windowHeight = $window.height();\n      var windowWidth = $window.width();\n\n      // 配置参数\n      var gutter = _this.options.gutter;\n      var isCovered = _this.isCovered;\n      var isFixed = _this.options.fixed;\n\n      // 动画方向参数\n      var transformOriginX;\n      var transformOriginY;\n\n      // 菜单的原始宽度和高度\n      var menuWidth = _this.$menu.width();\n      var menuHeight = _this.$menu.height();\n\n      var $anchor = _this.$anchor;\n\n      // 触发菜单的元素在窗口中的位置\n      var anchorTmp = $anchor[0].getBoundingClientRect();\n      var anchorTop = anchorTmp.top;\n      var anchorLeft = anchorTmp.left;\n      var anchorHeight = anchorTmp.height;\n      var anchorWidth = anchorTmp.width;\n      var anchorBottom = windowHeight - anchorTop - anchorHeight;\n      var anchorRight = windowWidth - anchorLeft - anchorWidth;\n\n      // 触发元素相对其拥有定位属性的父元素的位置\n      var anchorOffsetTop = $anchor[0].offsetTop;\n      var anchorOffsetLeft = $anchor[0].offsetLeft;\n\n      // ===============================\n      // ================= 自动判断菜单位置\n      // ===============================\n      if (_this.options.position === 'auto') {\n\n        // 判断下方是否放得下菜单\n        if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n          position = 'bottom';\n        }\n\n        // 判断上方是否放得下菜单\n        else if (anchorTop + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n          position = 'top';\n        }\n\n        // 上下都放不下，居中显示\n        else {\n          position = 'center';\n        }\n      } else {\n        position = _this.options.position;\n      }\n\n      // ===============================\n      // ============== 自动判断菜单对齐方式\n      // ===============================\n      if (_this.options.align === 'auto') {\n\n        // 判断右侧是否放得下菜单\n        if (anchorRight + anchorWidth > menuWidth + gutter) {\n          align = 'left';\n        }\n\n        // 判断左侧是否放得下菜单\n        else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n          align = 'right';\n        }\n\n        // 左右都放不下，居中显示\n        else {\n          align = 'center';\n        }\n      } else {\n        align = _this.options.align;\n      }\n\n      // ===============================\n      // ==================== 设置菜单位置\n      // ===============================\n      if (position === 'bottom') {\n        transformOriginY = '0';\n\n        menuTop =\n          (isCovered ? 0 : anchorHeight) +\n          (isFixed ? anchorTop : anchorOffsetTop);\n\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n\n        menuTop =\n          (isCovered ? anchorHeight : 0) +\n          (isFixed ? (anchorTop - menuHeight) : (anchorOffsetTop - menuHeight));\n\n      } else {\n        transformOriginY = '50%';\n\n        // =====================在窗口中居中\n        // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n        // 级联菜单内部不允许出现滚动条\n        var menuHeightTemp = menuHeight;\n\n        // 简单菜单比窗口高时，限制菜单高度\n        if (!_this.isCascade) {\n          if (menuHeight + gutter * 2 > windowHeight) {\n            menuHeightTemp = windowHeight - gutter * 2;\n            _this.$menu.height(menuHeightTemp);\n          }\n        }\n\n        menuTop =\n          (windowHeight - menuHeightTemp) / 2 +\n          (isFixed ? 0 : (anchorOffsetTop - anchorTop));\n      }\n\n      _this.$menu.css('top', menuTop + 'px');\n\n      // ===============================\n      // ================= 设置菜单对齐方式\n      // ===============================\n      if (align === 'left') {\n        transformOriginX = '0';\n\n        menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n\n        menuLeft = isFixed ?\n          (anchorLeft + anchorWidth - menuWidth) :\n          (anchorOffsetLeft + anchorWidth - menuWidth);\n      } else {\n        transformOriginX = '50%';\n\n        //=======================在窗口中居中\n        // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n        var menuWidthTemp = menuWidth;\n\n        // 菜单比窗口宽，限制菜单宽度\n        if (menuWidth + gutter * 2 > windowWidth) {\n          menuWidthTemp = windowWidth - gutter * 2;\n          _this.$menu.width(menuWidthTemp);\n        }\n\n        menuLeft =\n          (windowWidth - menuWidthTemp) / 2 +\n          (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n      }\n\n      _this.$menu.css('left', menuLeft + 'px');\n\n      // 设置菜单动画方向\n      _this.$menu.transformOrigin(transformOriginX + ' ' + transformOriginY);\n    };\n\n    /**\n     * 调整子菜单的位置\n     * @param $submenu\n     */\n    var readjustSubmenu = function ($submenu) {\n      var $item = $submenu.parent('.mdui-menu-item');\n\n      var submenuTop;\n      var submenuLeft;\n\n      // 子菜单位置和方向\n      var position; // top、bottom\n      var align; // left、right\n\n      // window 窗口的宽度和高度\n      var windowHeight = $window.height();\n      var windowWidth = $window.width();\n\n      // 动画方向参数\n      var transformOriginX;\n      var transformOriginY;\n\n      // 子菜单的原始宽度和高度\n      var submenuWidth = $submenu.width();\n      var submenuHeight = $submenu.height();\n\n      // 触发子菜单的菜单项的宽度高度\n      var itemTmp = $item[0].getBoundingClientRect();\n      var itemWidth = itemTmp.width;\n      var itemHeight = itemTmp.height;\n      var itemLeft = itemTmp.left;\n      var itemTop = itemTmp.top;\n\n      // ===================================\n      // ===================== 判断菜单上下位置\n      // ===================================\n\n      // 判断下方是否放得下菜单\n      if (windowHeight - itemTop > submenuHeight) {\n        position = 'bottom';\n      }\n\n      // 判断上方是否放得下菜单\n      else if (itemTop + itemHeight > submenuHeight) {\n        position = 'top';\n      }\n\n      // 默认放在下方\n      else {\n        position = 'bottom';\n      }\n\n      // ====================================\n      // ====================== 判断菜单左右位置\n      // ====================================\n\n      // 判断右侧是否放得下菜单\n      if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n        align = 'left';\n      }\n\n      // 判断左侧是否放得下菜单\n      else if (itemLeft > submenuWidth) {\n        align = 'right';\n      }\n\n      // 默认放在右侧\n      else {\n        align = 'left';\n      }\n\n      // ===================================\n      // ======================== 设置菜单位置\n      // ===================================\n      if (position === 'bottom') {\n        transformOriginY = '0';\n        submenuTop = '0';\n      } else if (position === 'top') {\n        transformOriginY = '100%';\n        submenuTop = -submenuHeight + itemHeight;\n      }\n\n      $submenu.css('top', submenuTop + 'px');\n\n      // ===================================\n      // ===================== 设置菜单对齐方式\n      // ===================================\n      if (align === 'left') {\n        transformOriginX = '0';\n        submenuLeft = itemWidth;\n      } else if (align === 'right') {\n        transformOriginX = '100%';\n        submenuLeft = -submenuWidth;\n      }\n\n      $submenu.css('left', submenuLeft + 'px');\n\n      // 设置菜单动画方向\n      $submenu.transformOrigin(transformOriginX + ' ' + transformOriginY);\n    };\n\n    /**\n     * 打开子菜单\n     * @param $submenu\n     */\n    var openSubMenu = function ($submenu) {\n      readjustSubmenu($submenu);\n\n      $submenu\n        .addClass('mdui-menu-open')\n        .parent('.mdui-menu-item')\n        .addClass('mdui-menu-item-active');\n    };\n\n    /**\n     * 关闭子菜单，及其嵌套的子菜单\n     * @param $submenu\n     */\n    var closeSubMenu = function ($submenu) {\n      // 关闭子菜单\n      $submenu\n        .removeClass('mdui-menu-open')\n        .addClass('mdui-menu-closing')\n        .transitionEnd(function () {\n          $submenu.removeClass('mdui-menu-closing');\n        })\n\n        // 移除激活状态的样式\n        .parent('.mdui-menu-item')\n        .removeClass('mdui-menu-item-active');\n\n      // 循环关闭嵌套的子菜单\n      $submenu.find('.mdui-menu').each(function () {\n        var $subSubmenu = $(this);\n        $subSubmenu\n          .removeClass('mdui-menu-open')\n          .addClass('mdui-menu-closing')\n          .transitionEnd(function () {\n            $subSubmenu.removeClass('mdui-menu-closing');\n          })\n          .parent('.mdui-menu-item')\n          .removeClass('mdui-menu-item-active');\n      });\n    };\n\n    /**\n     * 切换子菜单状态\n     * @param $submenu\n     */\n    var toggleSubMenu = function ($submenu) {\n      if ($submenu.hasClass('mdui-menu-open')) {\n        closeSubMenu($submenu);\n      } else {\n        openSubMenu($submenu);\n      }\n    };\n\n    /**\n     * 绑定子菜单事件\n     * @param inst 实例\n     */\n    var bindSubMenuEvent = function (inst) {\n      // 点击打开子菜单\n      inst.$menu.on('click', '.mdui-menu-item', function (e) {\n        var $this = $(this);\n        var $target = $(e.target);\n\n        // 禁用状态菜单不操作\n        if ($this.attr('disabled') !== null) {\n          return;\n        }\n\n        // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n        if ($target.is('.mdui-menu') || $target.is('.mdui-divider')) {\n          return;\n        }\n\n        // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n        if (!$target.parents('.mdui-menu-item').eq(0).is($this)) {\n          return;\n        }\n\n        // 当前菜单的子菜单\n        var $submenu = $this.children('.mdui-menu');\n\n        // 先关闭除当前子菜单外的所有同级子菜单\n        $this.parent('.mdui-menu').children('.mdui-menu-item').each(function () {\n          var $tmpSubmenu = $(this).children('.mdui-menu');\n          if (\n            $tmpSubmenu.length &&\n            (!$submenu.length || !$tmpSubmenu.is($submenu))\n          ) {\n            closeSubMenu($tmpSubmenu);\n          }\n        });\n\n        // 切换当前子菜单\n        if ($submenu.length) {\n          toggleSubMenu($submenu);\n        }\n      });\n\n      if (inst.options.subMenuTrigger === 'hover') {\n        // 临时存储 setTimeout 对象\n        var timeout;\n\n        var timeoutOpen;\n        var timeoutClose;\n\n        inst.$menu.on('mouseover mouseout', '.mdui-menu-item', function (e) {\n          var $this = $(this);\n          var eventType = e.type;\n          var $relatedTarget = $(e.relatedTarget);\n\n          // 禁用状态的菜单不操作\n          if ($this.attr('disabled') !== null) {\n            return;\n          }\n\n          // 用 mouseover 模拟 mouseenter\n          if (eventType === 'mouseover') {\n            if (!$this.is($relatedTarget) && $.contains($this[0], $relatedTarget[0])) {\n              return;\n            }\n          }\n\n          // 用 mouseout 模拟 mouseleave\n          else if (eventType === 'mouseout') {\n            if ($this.is($relatedTarget) || $.contains($this[0], $relatedTarget[0])) {\n              return;\n            }\n          }\n\n          // 当前菜单项下的子菜单，未必存在\n          var $submenu = $this.children('.mdui-menu');\n\n          // 鼠标移入菜单项时，显示菜单项下的子菜单\n          if (eventType === 'mouseover') {\n            if ($submenu.length) {\n\n              // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n              var tmpClose = $submenu.data('timeoutClose.mdui.menu');\n              if (tmpClose) {\n                clearTimeout(tmpClose);\n              }\n\n              // 如果当前子菜单已经打开，不操作\n              if ($submenu.hasClass('mdui-menu-open')) {\n                return;\n              }\n\n              // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n              clearTimeout(timeoutOpen);\n\n              // 准备打开当前子菜单\n              timeout = timeoutOpen = setTimeout(function () {\n                openSubMenu($submenu);\n              }, inst.options.subMenuDelay);\n\n              $submenu.data('timeoutOpen.mdui.menu', timeout);\n            }\n          }\n\n          // 鼠标移出菜单项时，关闭菜单项下的子菜单\n          else if (eventType === 'mouseout') {\n            if ($submenu.length) {\n\n              // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n              var tmpOpen = $submenu.data('timeoutOpen.mdui.menu');\n              if (tmpOpen) {\n                clearTimeout(tmpOpen);\n              }\n\n              // 准备关闭当前子菜单\n              timeout = timeoutClose = setTimeout(function () {\n                closeSubMenu($submenu);\n              }, inst.options.subMenuDelay);\n\n              $submenu.data('timeoutClose.mdui.menu', timeout);\n            }\n          }\n        });\n      }\n    };\n\n    /**\n     * 菜单\n     * @param anchorSelector 点击该元素触发菜单\n     * @param menuSelector 菜单\n     * @param opts 配置项\n     * @constructor\n     */\n    function Menu(anchorSelector, menuSelector, opts) {\n      var _this = this;\n\n      // 触发菜单的元素\n      _this.$anchor = $(anchorSelector).eq(0);\n      if (!_this.$anchor.length) {\n        return;\n      }\n\n      // 已通过自定义属性实例化过，不再重复实例化\n      var oldInst = _this.$anchor.data('mdui.menu');\n      if (oldInst) {\n        return oldInst;\n      }\n\n      _this.$menu = $(menuSelector).eq(0);\n\n      // 触发菜单的元素 和 菜单必须是同级的元素，否则菜单可能不能定位\n      if (!_this.$anchor.siblings(_this.$menu).length) {\n        return;\n      }\n\n      _this.options = $.extend({}, DEFAULT, (opts || {}));\n      _this.state = 'closed';\n\n      // 是否是级联菜单\n      _this.isCascade = _this.$menu.hasClass('mdui-menu-cascade');\n\n      // covered 参数处理\n      if (_this.options.covered === 'auto') {\n        _this.isCovered = !_this.isCascade;\n      } else {\n        _this.isCovered = _this.options.covered;\n      }\n\n      // 点击触发菜单切换\n      _this.$anchor.on('click', function () {\n        _this.toggle();\n      });\n\n      // 点击菜单外面区域关闭菜单\n      $document.on('click touchstart', function (e) {\n        var $target = $(e.target);\n        if (\n          (_this.state === 'opening' || _this.state === 'opened') &&\n            !$target.is(_this.$menu) &&\n            !$.contains(_this.$menu[0], $target[0]) &&\n            !$target.is(_this.$anchor) &&\n            !$.contains(_this.$anchor[0], $target[0])\n        ) {\n          _this.close();\n        }\n      });\n\n      // 点击不含子菜单的菜单条目关闭菜单\n      $document.on('click', '.mdui-menu-item', function (e) {\n        var $this = $(this);\n        if (!$this.find('.mdui-menu').length && $this.attr('disabled') === null) {\n          _this.close();\n        }\n      });\n\n      // 绑定点击或鼠标移入含子菜单的条目的事件\n      bindSubMenuEvent(_this);\n\n      // 窗口大小变化时，重新调整菜单位置\n      $window.on('resize', $.throttle(function () {\n        readjust(_this);\n      }, 100));\n    }\n\n    /**\n     * 切换菜单状态\n     */\n    Menu.prototype.toggle = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        _this.close();\n      } else if (_this.state === 'closing' || _this.state === 'closed') {\n        _this.open();\n      }\n    };\n\n    /**\n     * 动画结束回调\n     * @param inst\n     */\n    var transitionEnd = function (inst) {\n      inst.$menu.removeClass('mdui-menu-closing');\n\n      if (inst.state === 'opening') {\n        inst.state = 'opened';\n        componentEvent('opened', 'menu', inst, inst.$menu);\n      }\n\n      if (inst.state === 'closing') {\n        inst.state = 'closed';\n        componentEvent('closed', 'menu', inst, inst.$menu);\n\n        // 关闭后，恢复菜单样式到默认状态，并恢复 fixed 定位\n        inst.$menu.css({\n          top: '',\n          left: '',\n          width: '',\n          position: 'fixed',\n        });\n      }\n    };\n\n    /**\n     * 打开菜单\n     */\n    Menu.prototype.open = function () {\n      var _this = this;\n\n      if (_this.state === 'opening' || _this.state === 'opened') {\n        return;\n      }\n\n      _this.state = 'opening';\n      componentEvent('open', 'menu', _this, _this.$menu);\n\n      // 调整菜单位置\n      readjust(_this);\n\n      _this.$menu\n\n        // 菜单隐藏状态使用使用 fixed 定位。\n        .css('position', _this.options.fixed ? 'fixed' : 'absolute')\n\n        // 打开菜单\n        .addClass('mdui-menu-open')\n\n        // 打开动画完成后\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n    };\n\n    /**\n     * 关闭菜单\n     */\n    Menu.prototype.close = function () {\n      var _this = this;\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      _this.state = 'closing';\n      componentEvent('close', 'menu', _this, _this.$menu);\n\n      // 菜单开始关闭时，关闭所有子菜单\n      _this.$menu.find('.mdui-menu').each(function () {\n        closeSubMenu($(this));\n      });\n\n      _this.$menu\n        .removeClass('mdui-menu-open')\n        .addClass('mdui-menu-closing')\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n    };\n\n    return Menu;\n  })();\n\n\n  /**\n   * =============================================================================\n   * ************   Menu 自定义属性 API   ************\n   * =============================================================================\n   */\n\n  $(function () {\n    $document.on('click', '[mdui-menu]', function () {\n      var $this = $(this);\n\n      var inst = $this.data('mdui.menu');\n      if (!inst) {\n        var options = parseOptions($this.attr('mdui-menu'));\n        var menuSelector = options.target;\n        delete options.target;\n\n        inst = new mdui.Menu($this, menuSelector, options);\n        $this.data('mdui.menu', inst);\n\n        inst.toggle();\n      }\n    });\n  });\n\n\n  /* jshint ignore:start */\n  mdui.JQ = $;\n  return mdui;\n})));\n/* jshint ignore:end */\n"]}]}