{"remainingRequest":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/src/views/Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/src/views/Login.vue","mtime":1546252765932},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/superman285/Desktop/钱包项目动手/WeWallet-MySelf/WalletVue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport { required, maxLength, minLength, sameAs } from 'vuelidate/lib/validators'\n\nimport axios from 'axios'\n\nexport default {\n    name: \"Login\",\n    data: ()=>({\n        newUser: {\n            login_username: '1',\n            login_password: '2',\n            regist_username: '3',\n            regist_password: '4',\n            regist_confirmpassword: '5'\n        }\n    }),\n    validations: {\n        newUser: {\n            username: {\n                required,\n                maxLength: maxLength(10)\n            },\n            password: {\n                required,\n                minLength: minLength(8)\n            },\n            confirmpassword: {\n                required,\n                sameAsPassword: sameAs('password')\n            }\n        }\n    },\n\n    computed: {\n        loginUserNameErrors(){\n            let errors = []\n\n            if (!this.$v.newUser.username.$dirty) return errors\n            !this.$v.newUser.username.maxLength && errors.push('Name can not be more than 10 characters long')\n            !this.$v.newUser.username.required && errors.push('Name is required.')\n            return errors\n        },\n        loginPasswordErrors(){\n            let errors = []\n            if (!this.$v.newUser.password.$dirty) return errors\n            !this.$v.newUser.password.minLength && errors.push('Password must be at least 8 characters long')\n            !this.$v.newUser.password.required && errors.push('Password is required.')\n            return errors\n        },\n\n\n        registUserNameErrors(){\n            let errors = []\n            if (!this.$v.newUser.username.$dirty) return errors\n            !this.$v.newUser.username.maxLength && errors.push('Name can not be more than 10 characters long')\n            !this.$v.newUser.username.required && errors.push('Name is required.')\n            return errors\n        },\n        registPasswordErrors(){\n            let errors = []\n            if (!this.$v.newUser.password.$dirty) return errors\n            !this.$v.newUser.password.minLength && errors.push('Password must be at least 8 characters long')\n            !this.$v.newUser.password.required && errors.push('Password is required.')\n            return errors\n        },\n        registConfirmPasswordErrors(){\n            let errors = []\n            if (!this.$v.newUser.password.$dirty) return errors\n            !this.$v.newUser.confirmpassword.sameAsPassword && errors.push('ConfirmPassword must be same as Password')\n            return errors\n        }\n\n    },\n\n\n    methods: {\n        loginSubmit() {\n            console.log(this.newUser.username);\n            console.log(\"a\",axios);\n            this.$v.newUser.$touch()\n            axios({\n                /*url: \"/api/v1/bpi/currentprice.json\",\n                method: 'get',*/\n                method: 'post',\n                data: {\n                    userName: this.newUser.login_username,\n                    password: this.newUser.login_password\n                }\n            }).then(res=>{\n                //console.log(res.data.bpi);\n                console.log(res);\n            }).catch(err=>{\n                console.log(err);\n            })\n        },\n        registSubmit(){\n            this.$v.newUser.$touch()\n            axios({\n                method: 'post',\n                data: {\n                    userName: this.newUser.regist_username,\n                    password: this.newUser.regist_password\n                }\n            }).then(res=>{\n                console.log(res);\n            }).catch(err=>{\n                console.log(err);\n            })\n        },\n        clear() {\n            this.$v.$reset()\n            this.newUser.username = ''\n            this.newUser.password = ''\n            this.newUser.confirmpassword = ''\n        }\n    }\n}\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6FA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"login\">\n\n        <v-tabs\n                centered\n                color=\"blue\"\n                dark\n                icons-and-text\n        >\n            <v-tabs-slider color=\"yellow\"></v-tabs-slider>\n\n            <v-tab href=\"#tab-1\">\n                登录\n                <v-icon>account_box</v-icon>\n            </v-tab>\n\n            <v-tab href=\"#tab-2\">\n                注册\n                <v-icon>add_to_queue</v-icon>\n            </v-tab>\n\n            <v-tab-item\n                    :id=\"'tab-1'\"\n                    :key=\"1\"\n            >\n                <form>\n                    <v-text-field\n                            v-model=\"newUser.login_username\"\n                            :error-messages=\"loginUserNameErrors\"\n                            label=\"userName\"\n                            required\n                            @input=\"$v.newUser.login_username.$touch()\"\n                            @blur=\"$v.newUser.login_username.$touch()\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"newUser.login_password\"\n                            :error-messages=\"loginPasswordErrors\"\n                            label=\"password\"\n                            type=\"password\"\n                            required\n                            @input=\"$v.newUser.login_password.$touch()\"\n                            @blur=\"$v.newUser.login_password.$touch()\"\n                    ></v-text-field>\n\n                    <v-btn @click=\"loginSubmit\">登录</v-btn>\n                    <v-btn @click=\"clear\">清空</v-btn>\n                </form>\n            </v-tab-item>\n\n            <v-tab-item\n                    :id=\"'tab-2'\"\n                    :key=\"2\"\n            >\n                <form>\n                    <v-text-field\n                            v-model=\"newUser.regist_username\"\n                            :error-messages=\"registUserNameErrors\"\n                            label=\"userName\"\n                            required\n                            @input=\"$v.newUser.regist_username.$touch()\"\n                            @blur=\"$v.newUser.regist_username.$touch()\"\n                    >\n                    </v-text-field>\n                    <v-text-field\n                            v-model=\"newUser.regist_password\"\n                            :error-messages=\"registPasswordErrors\"\n                            label=\"password\"\n                            type=\"password\"\n                            required\n                            @input=\"$v.newUser.regist_password.$touch()\"\n                            @blur=\"$v.newUser.regist_password.$touch()\"\n                    ></v-text-field>\n                    <v-text-field\n                            v-model=\"newUser.regist_confirmpassword\"\n                            :error-messages=\"registConfirmPasswordErrors\"\n                            label=\"confirmPassword\"\n                            type=\"password\"\n                            required\n                            @input=\"$v.newUser.regist_confirmpassword.$touch()\"\n                            @blur=\"$v.newUser.regist_confirmpassword.$touch()\"\n                    ></v-text-field>\n\n                    <v-btn @click=\"registSubmit\">注册</v-btn>\n                    <v-btn @click=\"clear\">清空</v-btn>\n                </form>\n            </v-tab-item>\n        </v-tabs>\n\n    </div>\n</template>\n\n<script>\n\n    import { required, maxLength, minLength, sameAs } from 'vuelidate/lib/validators'\n\n    import axios from 'axios'\n\n    export default {\n        name: \"Login\",\n        data: ()=>({\n            newUser: {\n                login_username: '1',\n                login_password: '2',\n                regist_username: '3',\n                regist_password: '4',\n                regist_confirmpassword: '5'\n            }\n        }),\n        validations: {\n            newUser: {\n                username: {\n                    required,\n                    maxLength: maxLength(10)\n                },\n                password: {\n                    required,\n                    minLength: minLength(8)\n                },\n                confirmpassword: {\n                    required,\n                    sameAsPassword: sameAs('password')\n                }\n            }\n        },\n\n        computed: {\n            loginUserNameErrors(){\n                let errors = []\n\n                if (!this.$v.newUser.username.$dirty) return errors\n                !this.$v.newUser.username.maxLength && errors.push('Name can not be more than 10 characters long')\n                !this.$v.newUser.username.required && errors.push('Name is required.')\n                return errors\n            },\n            loginPasswordErrors(){\n                let errors = []\n                if (!this.$v.newUser.password.$dirty) return errors\n                !this.$v.newUser.password.minLength && errors.push('Password must be at least 8 characters long')\n                !this.$v.newUser.password.required && errors.push('Password is required.')\n                return errors\n            },\n\n\n            registUserNameErrors(){\n                let errors = []\n                if (!this.$v.newUser.username.$dirty) return errors\n                !this.$v.newUser.username.maxLength && errors.push('Name can not be more than 10 characters long')\n                !this.$v.newUser.username.required && errors.push('Name is required.')\n                return errors\n            },\n            registPasswordErrors(){\n                let errors = []\n                if (!this.$v.newUser.password.$dirty) return errors\n                !this.$v.newUser.password.minLength && errors.push('Password must be at least 8 characters long')\n                !this.$v.newUser.password.required && errors.push('Password is required.')\n                return errors\n            },\n            registConfirmPasswordErrors(){\n                let errors = []\n                if (!this.$v.newUser.password.$dirty) return errors\n                !this.$v.newUser.confirmpassword.sameAsPassword && errors.push('ConfirmPassword must be same as Password')\n                return errors\n            }\n\n        },\n\n\n        methods: {\n            loginSubmit() {\n                console.log(this.newUser.username);\n                console.log(\"a\",axios);\n                this.$v.newUser.$touch()\n                axios({\n                    /*url: \"/api/v1/bpi/currentprice.json\",\n                    method: 'get',*/\n                    method: 'post',\n                    data: {\n                        userName: this.newUser.login_username,\n                        password: this.newUser.login_password\n                    }\n                }).then(res=>{\n                    //console.log(res.data.bpi);\n                    console.log(res);\n                }).catch(err=>{\n                    console.log(err);\n                })\n            },\n            registSubmit(){\n                this.$v.newUser.$touch()\n                axios({\n                    method: 'post',\n                    data: {\n                        userName: this.newUser.regist_username,\n                        password: this.newUser.regist_password\n                    }\n                }).then(res=>{\n                    console.log(res);\n                }).catch(err=>{\n                    console.log(err);\n                })\n            },\n            clear() {\n                this.$v.$reset()\n                this.newUser.username = ''\n                this.newUser.password = ''\n                this.newUser.confirmpassword = ''\n            }\n        }\n    }\n</script>\n\n<style lang=\"scss\">\n\n    .v-toolbar__content {\n        height: 0!important;\n    }\n\n    .v-tabs__item--active {\n        border-bottom: 4px solid teal;\n    }\n    .v-window {\n        width: 80%!important;\n        //height: 300px!important;\n        margin: 3rem auto;\n        padding: 0.1rem 0 .1rem;\n    }\n    .v-window__container {\n        //height: 300px!important;\n    }\n\n    form {\n        width: 60%!important;\n        margin: 4rem auto!important;\n        button {\n            margin-top: 2rem!important;\n\n        }\n        .v-input {\n            margin-bottom: 1rem;\n        }\n        input {\n            padding: 1.2rem 0!important;\n        }\n        .v-messages__message {\n            color: #ff0729;\n            font-size: 1rem;\n        }\n        .v-label--active {\n            color: #2196F3!important;\n            font-weight: bold;\n            font-size: 1.5rem;\n        }\n    }\n\n</style>"]}]}